{"version":3,"file":"herlhay-helpers.mjs","sources":["../../../../projects/herlhay-helpers/src/lib/shared/prototypes/prototypes.ts","../../../../projects/herlhay-helpers/src/lib/shared/classes/form.class.ts","../../../../projects/herlhay-helpers/src/lib/shared/models/index.model.ts","../../../../projects/herlhay-helpers/src/lib/config/index.config.ts","../../../../projects/herlhay-helpers/src/lib/shared/classes/page-loader.class.ts","../../../../projects/herlhay-helpers/src/lib/shared/classes/environment.class.ts","../../../../projects/herlhay-helpers/src/environments/environment.ts","../../../../projects/herlhay-helpers/src/lib/config/validation-messages.config.ts","../../../../projects/herlhay-helpers/src/lib/services/encryptor.service.ts","../../../../projects/herlhay-helpers/src/lib/shared/functions/base-functions.ts","../../../../projects/herlhay-helpers/src/lib/services/number-to-words.service.ts","../../../../projects/herlhay-helpers/src/lib/shared/pipes/utility.pipe.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/confirm-dialog/confirm-dialog.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/confirm-dialog/confirm-dialog.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/confirm-dialog/confirm-dialog.service.ts","../../../../projects/herlhay-helpers/src/lib/services/mix-panel.service.ts","../../../../projects/herlhay-helpers/src/lib/services/utility.service.ts","../../../../projects/herlhay-helpers/src/lib/services/cache.service.ts","../../../../projects/herlhay-helpers/src/lib/services/storage.service.ts","../../../../projects/herlhay-helpers/src/lib/services/local-cache.service.ts","../../../../projects/herlhay-helpers/src/lib/services/api.service.ts","../../../../projects/herlhay-helpers/src/lib/services/app.service.ts","../../../../projects/herlhay-helpers/src/lib/services/authentication-interceptor.service.ts","../../../../projects/herlhay-helpers/src/lib/services/global-error-handler.service.ts","../../../../projects/herlhay-helpers/src/lib/services/multi-tenant-interceptor.service.ts","../../../../projects/herlhay-helpers/src/lib/services/request-loader-interceptor.service.ts","../../../../projects/herlhay-helpers/src/lib/services/request-timeout.service.ts","../../../../projects/herlhay-helpers/src/lib/services/service-worker/prompt-update.service.ts","../../../../projects/herlhay-helpers/src/lib/services/service-worker/check-for-update.service.ts","../../../../projects/herlhay-helpers/src/lib/services/service-worker/handle-unrecoverable-state.service.ts","../../../../projects/herlhay-helpers/src/lib/services/service-worker/log-update.service.ts","../../../../projects/herlhay-helpers/src/lib/services/service-worker/service-worker.service.ts","../../../../projects/herlhay-helpers/src/lib/services/tawk.io.service.ts","../../../../projects/herlhay-helpers/src/lib/services/websocket.sockio.service.ts","../../../../projects/herlhay-helpers/src/lib/shared/classes/progress-loader.class.ts","../../../../projects/herlhay-helpers/src/lib/shared/classes/selector.class.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/input/input.service.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/input/inputs-pipes.pipe.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/input/validation-message/validation-message.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/input/validation-message/validation-message.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/svg-icon/svg-icon.service.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/svg-icon/svg-icon.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/svg-icon/svg-icon.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/btn/btn.service.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/btn/btn.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/btn/btn.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/info-icon/info-icon.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/info-icon/info-icon.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/input/input.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/input/input.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/autocomplete/autocomplete.service.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/autocomplete/autocomplete.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/autocomplete/autocomplete.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/btn/btn-lg/btn-lg.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/btn/btn-lg/btn-lg.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/btn/btn-link/btn-link.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/btn/btn-link/btn-link.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/chip-list-autocomplete/chip-list-autocomplete.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/chip-list-autocomplete/chip-list-autocomplete.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/count/count.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/count/count.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/feedback-card/feedback-card.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/feedback-card/feedback-card.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/file-upload/file-upload.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/file-upload/file-upload.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/input/input-td-rf.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/response-card/response-card.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/response-card/response-card.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/form-generator/form-generator.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/form-generator/form-generator.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/form-generator/form-generator-td/form-generator-td.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/form-generator/form-generator-td/form-generator-td.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/no-list/no-list.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/no-list/no-list.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/table-plain/table.pipe.ts","../../../../projects/herlhay-helpers/src/lib/shared/directives/responsiveness.directive.ts","../../../../projects/herlhay-helpers/src/lib/shared/directives/image-loader.directive.ts","../../../../projects/herlhay-helpers/src/lib/shared/directives/drag-drop-file-upload.directive.ts","../../../../projects/herlhay-helpers/src/lib/shared/directives/router.directive.ts","../../../../projects/herlhay-helpers/src/lib/shared/directives/directives.module.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/btn/btn.module.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/input/otp-input/otp-input.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/input/otp-input/otp-input.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/input/input.module.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/svg-icon/svg-icon.module.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/precentage-trend/precentage-trend.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/precentage-trend/precentage-trend.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/table-plain/table-plain.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/table-plain/table-plain.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/text/text.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/text/text.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/loader/loader.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/loader/loader.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/search-box/search-box.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/search-box/search-box.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/grid-or-list/grid-or-list.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/grid-or-list/grid-or-list.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/idler/idler.service.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/idler/idler.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/idler/idler.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/modal-header/modal-header.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/modal-header/modal-header.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/modal/modal.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/modal/modal.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/import-items/import-items.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/import-items/import-items.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/listing-filters/listing-filters.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/listing-filters/listing-filters.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/modal/mini-modal/mini-modal.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/modal/mini-modal/mini-modal.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/mini-search-list/mini-search-list.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/mini-search-list/mini-search-list.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/modal-form/modal-form-template/modal-form-template.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/modal-form/modal-form-template/modal-form-template.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/modal-form/modal-form.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/modal-form/modal-form.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/number-items-selected/number-items-selected.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/number-items-selected/number-items-selected.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/page-template/page-template.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/progress-bar-large/progress-bar-large.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/progress-bar-large/progress-bar-large.component.html","../../../../projects/herlhay-helpers/src/lib/shared/components/table-https/table-https.component.ts","../../../../projects/herlhay-helpers/src/lib/shared/components/table-https/table-https.component.html","../../../../projects/herlhay-helpers/src/lib/shared/shared.module.ts","../../../../projects/herlhay-helpers/src/lib/shared/models/IMenuItem.ts","../../../../projects/herlhay-helpers/src/lib/extra-pages/extra-pages-routing.module.ts","../../../../projects/herlhay-helpers/src/lib/extra-pages/extra-pages.module.ts","../../../../projects/herlhay-helpers/src/lib/extra-pages/reset/reset.component.ts","../../../../projects/herlhay-helpers/src/lib/extra-pages/reset/reset.component.html","../../../../projects/herlhay-helpers/src/lib/extra-pages/page-not-found/page-not-found.component.ts","../../../../projects/herlhay-helpers/src/lib/extra-pages/page-not-found/page-not-found.component.html","../../../../projects/herlhay-helpers/src/public-api.ts","../../../../projects/herlhay-helpers/src/herlhay-helpers.ts"],"sourcesContent":["import { AbstractControl, FormArray } from '@angular/forms';\nimport { cloneDeep } from 'lodash-es';\nimport { Observable } from 'rxjs';\n\ndeclare global {\n  interface String {\n    stripChar(character?: string): string;\n    lastStripChar(character?: string): string;\n    unChar(character?: string, replacement?: string): string;\n    /**\n     * Converts Pascal case to Sentence case\n     * @example 'smallBook'.toSentenceCase() = 'Small Book'\n     */\n    toSentenceCase(): string;\n    /**\n     * Replaces all occurrences of a substring\n     * @returns The string after replacement\n     */\n    replaceAllSubStr(character?: string, replacement?: string): string;\n    /**\n     *\n     * @param character Character to add before string\n     * @param expectedLength Expected length of the string after addition of the character\n     */\n    addPrecedingChar(character: string, expectedLength: number): string;\n    /**\n     * Convert a text into camel case\n     * @param text\n     */\n    toCamelCase(): string;\n    /**\n     * To title case\n     * @param text\n     */\n    toTitleCase(): string;\n  }\n\n  interface Array<T> {\n    merge(): T;\n    /**\n     * @param index The index to select from the end.\n     * @defaultValue 0\n     * @example ['a','b','c'].reverseIndex(1) returns 'b'\n     * @example ['a','b','c','d','e'].reverseIndex(2) returns 'c'\n     */\n    reverseIndex(index?: number): T;\n    lastItem(): T;\n\n    /**\n     *\n     * @param field Field name to compare with\n     * @param isString Is the data type of the field a string (Default is true)\n     * @param reverse Should it be in a descending order\n     */\n    sort2(field: keyof T, isString?: boolean, reverse?: boolean): T[];\n    /**\n     * Remove items from an array that don't have values in any of its fields\n     * @param expectedFields Fields to check for emptiness, the function will remove the items that don't have any value in all the fields specified\n     */\n    removeEmptyItems(\n      expectedFields?: (keyof T)[],\n      config?: {\n        /**\n         * Specify whether to check the value in boolean fields.\n         * @defaultValue `false`\n         */\n        ignoreBooleanFields?: boolean;\n        /**\n         * Specify whether to check for emptiness in the 'expectedFields' or check for emptiness in the other fields excluding the fields specified\n         * @defaultValue `included`\n         */\n        fieldsType?: 'included' | 'excluded';\n      }\n    ): T[];\n  }\n  interface Function {\n    clone: any;\n  }\n}\ndeclare module '@angular/forms' {\n  interface FormArray<TControl extends AbstractControl<any> = any>\n    extends AbstractControl<\n      ɵTypedOrUntyped<TControl, ɵFormArrayValue<TControl>, any>,\n      ɵTypedOrUntyped<TControl, ɵFormArrayRawValue<TControl>, any>\n    > {\n    cFormStructure: TControl;\n    cAddItem(index?: number, data?: TControl): FormArray<TControl>;\n    /**\n     * Handles the deletion of rows from a FormArray\n     * @param index Index of the row to delete\n     * @param fa The FormArray that holds the rows\n     * @param deleteService The deletion service to be called (It should be an anonymous function)\n     * @param addRowFunc The function (anonymous) that adds a new row to the FormArray\n     * @param emitEvent Specify whether to emit an event when manipulating the FormArray\n     * @returns\n     */\n    cRemoveItem(\n      index: number,\n      deleteService?: (...args: any[]) => Promise<any> | Observable<any>,\n      addRowFunc?: (...args: any[]) => any,\n      emitEvent?: boolean\n    ): Promise<FormArray<TControl>>;\n  }\n}\n// declare interface String {\n//   stripSlash(): string;\n//   lastStripSlash(): string;\n//   unStrip(): string;\n// }\n//#region  string */\nString.prototype.stripChar = function (this: string, character = '/') {\n  return (this + '').replace(character, '');\n};\nString.prototype.lastStripChar = function (this: string, character = '/') {\n  return this[this?.length - 1] == character\n    ? this.slice(0, this.length - 1)\n    : this;\n};\nString.prototype.unChar = function (\n  this: string,\n  character = '/',\n  replacement = ''\n) {\n  let te = '';\n  for (let i = 0; i < this.length; i++) {\n    const e = this[i];\n    te += e != character ? e : '';\n  }\n  return te.split(character).join(replacement);\n};\nString.prototype.toSentenceCase = function (this: string) {\n  return this.replace(/([A-Z])/g, ' $1');\n};\nString.prototype.replaceAllSubStr = function (\n  this: string,\n  character = '/',\n  replacement = ''\n) {\n  return this.split(character).join(replacement);\n};\nString.prototype.addPrecedingChar = function (\n  this: string,\n  character: string,\n  expectedLength: number\n) {\n  if (this.length >= expectedLength) return this;\n  return character.repeat(expectedLength - this.length) + this;\n};\nString.prototype.toCamelCase = function (this: string) {\n  return this.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n    if (+match === 0) return ''; // or if (/\\s+/.test(match)) for white spaces\n    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n  });\n};\nString.prototype.toTitleCase = function (this: string) {\n  const result = this.replace(/([A-Z])/g, ' $1');\n  return result.charAt(0).toUpperCase() + result.slice(1);\n};\n//#endregion\n\n//#region  array */\nArray.prototype.merge = function <T>(this: Array<T>) {\n  let r = '';\n  for (const i of this) {\n    r += i;\n  }\n  return r;\n};\nArray.prototype.reverseIndex = function <T>(this: Array<T>, index = 0) {\n  return this[this?.length - (1 + index)];\n};\nArray.prototype.lastItem = function <T>(this: Array<T>) {\n  return this.reverseIndex();\n};\nArray.prototype.sort2 = function <T>(\n  this: Array<T>,\n  field: keyof T,\n  isString: boolean = true,\n  reverse: boolean = false\n) {\n  if (reverse) {\n    return isString\n      ? this.filter((x) => x).sort((b, a) =>\n          sortAlphaNum(a[field] as string, b[field] as string)\n        )\n      : this.filter((x) => x).sort(\n          (b, a) => (+a[field] || 0) - (+b[field] || 0)\n        );\n  } else {\n    return isString\n      ? this.filter((x) => x).sort((a, b) =>\n          sortAlphaNum(a[field] as string, b[field] as string)\n        )\n      : this.filter((x) => x).sort(\n          (a, b) => (+a[field] || 0) - (+b[field] || 0)\n        );\n  }\n};\nvar reA = /[^a-zA-Z]/g;\nvar reN = /[^0-9]/g;\n\nfunction sortAlphaNum(a: string, b: string) {\n  var aA = a?.toLowerCase()?.replace(reA, '');\n  var bA = b?.toLowerCase()?.replace(reA, '');\n  if (aA === bA) {\n    var aN = parseInt(a?.replace(reN, ''), 10);\n    var bN = parseInt(b?.replace(reN, ''), 10);\n    return aN === bN ? 0 : aN > bN ? 1 : -1;\n  } else {\n    return aA > bA ? 1 : -1;\n  }\n}\n\nArray.prototype.removeEmptyItems = function <T>(\n  this: Array<T>,\n  expectedFields?: (keyof T)[],\n  config?: {\n    ignoreBooleanFields?: boolean;\n    fieldsType?: 'included' | 'excluded';\n  }\n) {\n  // debugger;\n  const ignoreBooleanFields = config?.ignoreBooleanFields == true;\n  const fieldsType = config?.fieldsType || 'included';\n  if (!this.length) return this;\n  let fieldList: string[];\n  if (fieldsType == 'included')\n    fieldList = expectedFields?.length\n      ? (expectedFields as string[])\n      : Object.keys(this[0]);\n  else if (fieldsType == 'excluded')\n    fieldList = expectedFields?.length\n      ? Object.keys(this[0]).filter((x) => !expectedFields.includes(x as any))\n      : Object.keys(this[0]);\n  const removedItems: T[] = [];\n  if (fieldList) {\n    for (let i = 0; i < this.length; i++) {\n      if (ignoreBooleanFields && i == 0) {\n        fieldList = fieldList.filter((f) => typeof this[0][f] != 'boolean');\n      }\n      const item = this[i];\n      if (fieldList.some((f) => item[f] != null)) continue;\n      removedItems.push(...this.splice(i, 1));\n      i = i--;\n    }\n  }\n  return removedItems;\n};\n\n//#endregion\n\n//#region Function\nFunction.prototype.clone = function () {\n  var that = this;\n  var temp = function temporary() {\n    return that.apply(this, arguments);\n  };\n  for (var key in this) {\n    if (this.hasOwnProperty(key)) {\n      temp[key] = this[key];\n    }\n  }\n  return temp;\n};\n//#endregion\n\n//#region FORMARRAY\nFormArray.prototype.cAddItem = function <\n  TControl extends AbstractControl<any> = any\n>(\n  this: FormArray<TControl>,\n  index?: number,\n  val?: typeof this.cFormStructure.value\n) {\n  const form = cloneDeep(this.cFormStructure);\n  if (val) {\n    form.patchValue(val);\n  }\n  this.insert(index, form);\n  return this;\n};\nFormArray.prototype.cRemoveItem = function <\n  TControl extends AbstractControl<any> = any\n>(\n  this: FormArray<TControl>,\n  index: number,\n  deleteService?: (...args) => Promise<any> | Observable<any>,\n  addRowFunc?: (...args) => any,\n  emitEvent = true\n) {\n  return new Promise<FormArray<TControl>>((sub) => {\n    const id = this.controls[index]?.value?.id;\n    // debugger;\n    if (id && deleteService) {\n      const req = deleteService(id);\n      let ps: Promise<any> = null;\n      if (req['toPromise']) {\n        ps = req['toPromise']();\n      }\n      ps?.then((r) => {\n        sub(this);\n      });\n    }\n\n    if (this.controls.length == 1 && id) {\n      this.removeAt(index, { emitEvent });\n      if (addRowFunc) addRowFunc();\n      else this.cAddItem();\n    } else if (this.controls.length > 1) this.removeAt(index, { emitEvent });\n    else if (this.controls.length == 1) {\n      this.controls[0].reset();\n    }\n  });\n};\n//#endregion\nexport {};\n","import {\n  AbstractControlOptions,\n  AsyncValidator,\n  AsyncValidatorFn,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\n\nexport namespace Forms {\n  export class ConfigForms {\n    matches(\n      formGroup: FormGroup,\n      field1: string = 'password',\n      field2: string = 'rpassword'\n    ) {\n      if (formGroup.get(field1).value !== formGroup.get(field2).value) {\n        formGroup.get(field1).setErrors({ noMatch: true }, { emitEvent: true });\n        formGroup.get(field2).setErrors({ noMatch: true }, { emitEvent: true });\n      } else {\n        formGroup.get(field1).setErrors(null, { emitEvent: true });\n        formGroup.get(field2).setErrors(null, { emitEvent: true });\n      }\n      console.log(formGroup);\n    }\n    matches2(formGroup: any, field1: string, field2: string) {\n      return formGroup.get(field1).value === formGroup.get(field2).value\n        ? null\n        : { noMatch: true };\n    }\n    email(required = true, value = '') {\n      return new FormControl(\n        value,\n        Validators.compose([\n          ...(required ? [Validators.required] : []),\n          Validators.pattern(configPatterns.email),\n        ])\n      );\n    }\n    name(required = true, minLength = 2, value = '') {\n      return new FormControl(\n        value,\n        Validators.compose([\n          ...(required ? [Validators.required] : []),\n          Validators.minLength(minLength),\n          Validators.pattern(configPatterns.name),\n        ])\n      );\n    }\n    array(required = false, value = []) {\n      return new FormControl(value, required ? [Validators.required] : []);\n    }\n    boolean(required = false, value = false) {\n      return new FormControl(value, required ? [Validators.required] : []);\n    }\n    username(required = true, minLength = 3, maxLength = 10, value = '') {\n      return new FormControl(value, [\n        ...(required ? [Validators.required] : []),\n        Validators.minLength(minLength),\n        Validators.maxLength(maxLength),\n        Validators.pattern(configPatterns.username),\n      ]);\n    }\n    default<T = any>(\n      value?,\n      validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions,\n      asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[]\n    ) {\n      return new FormControl<T>(value, validatorOrOpts, asyncValidator);\n    }\n    number(required = false, value = null, maxLength = 100000) {\n      return new FormControl(value, [\n        ...(required ? [Validators.required] : []),\n        Validators.pattern(configPatterns.number),\n        Validators.maxLength(maxLength),\n      ]);\n    }\n    integer(required = true, value = null, maxLength = 100000) {\n      return new FormControl(value, [\n        ...(required ? [Validators.required] : []),\n        Validators.pattern(configPatterns.integer),\n        Validators.maxLength(maxLength),\n      ]);\n    }\n    postalCode(required = true, value = null) {\n      return new FormControl(value, [\n        Validators.pattern(configPatterns.postal),\n        ...(required ? [Validators.required] : []),\n      ]);\n    }\n    phone(required = true, value = '') {\n      return new FormControl(value, [\n        ...(required ? [Validators.required] : []),\n        Validators.minLength(11),\n        Validators.pattern(configPatterns.phone),\n      ]);\n    }\n    requiredMinLength(length: number, value = '') {\n      return new FormControl(value, [\n        Validators.required,\n        Validators.minLength(length),\n      ]);\n    }\n    requiredMinMaxLength(min: number, max: number) {\n      return new FormControl('', [\n        Validators.required,\n        Validators.minLength(min),\n        Validators.maxLength(max),\n      ]);\n    }\n    required(value = null) {\n      return new FormControl(value, Validators.required);\n    }\n    minLength(length = 3, value = '') {\n      return new FormControl(value, [\n        Validators.minLength(length),\n        Validators.required,\n      ]);\n    }\n    url(value = '', required = true) {\n      return new FormControl(\n        value,\n        Validators.compose([\n          ...(required ? [Validators.required] : []),\n          Validators.pattern(configPatterns.url),\n        ])\n      );\n    }\n    pattern(pattern: RegExp, required = false, value?) {\n      return new FormControl(\n        value,\n        Validators.compose([\n          ...(required ? [Validators.required] : []),\n          Validators.pattern(pattern),\n        ])\n      );\n    }\n  }\n}\nexport const configForms = new Forms.ConfigForms();\nexport const configPatterns = {\n  date: /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/,\n  email: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/,\n  integer: /^[0-9]+$/,\n  name: /^[a-zA-Z0-9- ]+$/,\n  number: /^-?[0-9,\\.]+$/,\n  phone: /^[+]*[0-9]+$/,\n  postal: /^([0-9]{5})([\\-]{1}[0-9]{4})?$|^([0-9]{6})?$/,\n  url: /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/,\n  username: /^[a-zA-Z0-9-]+$/,\n  website:\n    /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/,\n};\n","import { AbstractControl, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { configForms } from '../classes/form.class';\nimport { SVGIconType } from '../components/svg-icon/svg-icon.model';\n\n//#region inputs\ninterface IInputBase {\n  name?: string;\n  label: string;\n  value?: any;\n  placeholder?: string;\n  cls?: string;\n  required?: boolean;\n  type?: InputType;\n}\ninterface IFCInput extends IInputBase {\n  name: string;\n  prefix?: string;\n  suffix?: string;\n  formControl: AbstractControl;\n  form: FormGroup;\n  vms?: IValidationMessage[];\n}\n\nexport type InputType =\n  | 'autocomplete'\n  | 'button'\n  | 'buttonToggle'\n  | 'checkbox'\n  | 'checkedbox'\n  | 'date'\n  | 'date-range'\n  | 'datetime-local'\n  | 'dhm'\n  | 'email'\n  | 'file'\n  | 'form'\n  | 'formgroup'\n  | 'fileButton'\n  | 'number'\n  | 'password'\n  | 'progress'\n  | 'percentage'\n  | 'radio'\n  | 'select'\n  | 'tel'\n  | 'text'\n  | 'textarea'\n  | 'time'\n  | 'toggle'\n  | 'viewer';\nexport class FCInput implements IFCInput {\n  name: string;\n  label: string;\n  placeholder?: string;\n  cls?: string;\n  prefix?: string;\n  suffix?: string;\n  required?: boolean;\n  type?: InputType;\n  formControl: AbstractControl;\n  vms?: IValidationMessage[];\n  form: FormGroup;\n  constructor(\n    label: string,\n    name?: string,\n    formControl?: AbstractControl,\n    type?: InputType,\n    required?: boolean,\n    placeholder?: string,\n    vms?: IValidationMessage[],\n    prefix?: string,\n    suffix?: string\n  ) {\n    this.name = name || 'fn' + Math.round(Math.random() * 100000);\n    this.label = label;\n    this.formControl = formControl || configForms.default();\n    this.type = type || 'text';\n    this.required = required || false;\n    this.vms = vms || [];\n    this.placeholder = placeholder;\n    this.prefix = prefix;\n    this.suffix = suffix;\n  }\n}\nexport class CInput implements IInputBase {\n  name: string;\n  label: string;\n  placeholder?: string;\n  cls?: string;\n  required?: boolean;\n  type?: InputType;\n  value: string;\n  hide: boolean;\n  disabled: boolean;\n  readonly: boolean;\n  id: string;\n  hasError: boolean;\n  get isEmpty() {\n    return this.value == null || this.value == undefined;\n  }\n  x: number;\n  y: number;\n  constructor(\n    label: string,\n    name?: string,\n    value?: any,\n    type?: InputType,\n    required?: boolean,\n    placeholder?: string,\n    vms?: IValidationMessage[],\n    prefix?: string,\n    suffix?: string\n  ) {\n    this.name = name;\n    this.id = 'inputID' + Math.round(Math.random() * 10000000);\n    this.label = label;\n    this.value = value;\n    this.type = type || 'text';\n    this.required = required || false;\n    this.placeholder = placeholder;\n  }\n}\n//#endregion\n\n//#region key value pair\nexport interface IKVP {\n  readonly key?: any;\n  value?: string | boolean | number;\n  cls?: string;\n}\nexport class KVP implements IKVP {\n  readonly key: string;\n  value?: string | boolean | number;\n  cls?: string;\n  constructor(key: string, value?: string | boolean | number, cls?: string) {\n    this.key = key;\n    this.value = value;\n    this.cls = cls;\n  }\n}\nexport class FKVP extends KVP {\n  label: string;\n  editable?: boolean;\n  editing?: boolean;\n  route?: string;\n  routeFunc?: (item) => Promise<string> | Observable<string>;\n  hint?: string;\n  action?: any;\n  isPhone?: boolean;\n  isEmail?: boolean;\n  formatter?: (val: any) => string | Promise<string> | Observable<string>;\n  constructor(\n    key: string,\n    label: string,\n    editable?: boolean,\n    value?: string | boolean | number,\n    public inputType?: InputType,\n    hint?: string,\n    action?: any,\n    formatter?: (val: any) => string | Promise<string>,\n    cls?: string,\n    route?: string\n  ) {\n    super(key, value, cls);\n    this.label = label;\n    this.hint = hint;\n    this.editable = editable;\n    this.action = action;\n    this.formatter = formatter;\n    this.route = route;\n  }\n}\n//#endregion\n\n//#region lbl\nexport interface ILbl extends IKVP {\n  hint?: string;\n}\nexport class Lbl implements ILbl {\n  readonly key: string;\n  value: string | boolean | number;\n  hint?: string;\n  cls?: string;\n  constructor(\n    key: string,\n    value?: string | boolean | number,\n    hint?: string,\n    cls?: string\n  ) {\n    this.key = key;\n    this.value = value || '-';\n    this.hint = hint;\n    this.cls = cls;\n  }\n}\n//#endregion\n//#region btn\nexport interface IBtn extends IKVP {\n  action?: (...arg) => void;\n  group?: BtnGroup;\n  help?: string;\n  icon?: SVGIconType;\n  iconBtn?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n  showHelpIcon?: boolean;\n  label?: string;\n  type?: BtnType;\n  extra?: any;\n}\nexport class Btn implements IBtn {\n  cls?: string;\n  group?: BtnGroup;\n  help?: string;\n  icon?: SVGIconType;\n  iconBtn?: boolean;\n  readonly action?: (data?, ...args) => void;\n  readonly key?: string;\n  showHelpIcon?: boolean;\n  label?: string;\n  route?: string;\n  type?: BtnType;\n  extra?: any;\n  loading?: boolean;\n  disabled?: boolean;\n\n  constructor(\n    key: string,\n    action?: (data?, ...args) => any,\n    type?: BtnType,\n    icon?: SVGIconType,\n    cls?: string,\n    help?: string,\n    showHelpIcon?: boolean,\n    loading?: boolean,\n    disabled?: boolean\n  ) {\n    this.key = key;\n    this.action = action;\n    this.type = type;\n    this.icon = icon;\n    this.cls = cls;\n    this.help = help;\n    this.showHelpIcon = showHelpIcon;\n    this.loading = loading;\n    this.disabled = disabled;\n  }\n}\nexport class BtnLg implements IBtn {\n  readonly key: string;\n  value: string | boolean | number;\n  readonly action?: () => void;\n  cls?: string;\n  extra?: any;\n  constructor(\n    key: string,\n    value?: string | boolean | number,\n    action?: any,\n    cls?: string,\n    extra?\n  ) {\n    this.key = key;\n    this.value = value || '-';\n    this.action = action;\n    this.cls = cls;\n    this.extra = extra;\n  }\n}\nexport type BtnType =\n  | 'clear'\n  | 'clear-pm'\n  | 'close'\n  | 'danger-outline'\n  | 'danger'\n  | 'dark-outline'\n  | 'dark'\n  | 'light'\n  | 'outline-nm'\n  | 'outline'\n  | 'outline-light'\n  | 'primary'\n  | 'secondary'\n  | 'success';\nexport type BtnGroup =\n  | 'add'\n  | 'clone'\n  | 'close'\n  | 'create'\n  | 'delete'\n  | 'download'\n  | 'edit'\n  | 'link'\n  | 'search'\n  | 'show'\n  | 'submit'\n  | 'upload';\nexport type IconType =\n  | 'access'\n  | 'add'\n  | 'adjust'\n  | 'calendar'\n  | 'cash'\n  | 'checked'\n  | 'checklist'\n  | 'clone'\n  | 'close'\n  | 'cogs'\n  | 'delete'\n  | 'download'\n  | 'edit'\n  | 'export'\n  | 'file'\n  | 'filter'\n  | 'generate'\n  | 'guard'\n  | 'history'\n  | 'home'\n  | 'import'\n  | 'info'\n  | 'link'\n  | 'lock'\n  | 'next'\n  | 'pen'\n  | 'post'\n  | 'previous'\n  | 'renew'\n  | 'save'\n  | 'search'\n  | 'show'\n  | 'snooze'\n  | 'unlock'\n  | 'upload'\n  | 'view'\n  | 'users'\n  | 'recycle'\n  | 'truck'\n  | 'tag'\n  | 'receipt'\n  | 'bank'\n  | 'arrowh';\n//#endregion\n\nexport interface ICodeTitle {\n  code: string;\n  title: string;\n}\n\nexport interface ICodeDescription {\n  code: string;\n  description: string;\n}\n\nexport interface IMktDescription {\n  mktEventCode: string;\n  description: string;\n}\n\nexport interface ICode {\n  code: string;\n}\nexport enum EMenuLocation {\n  viewPage1 = 'viewPage',\n}\nexport enum Day {\n  sunday = 'Sunday',\n  monday = 'Monday',\n  tuesday = 'Tuesday',\n  wednesday = 'Wednesday',\n  thursday = 'Thursday',\n  friday = 'Friday',\n  saturday = 'Saturday',\n}\nexport enum EPageType {\n  clonePage = 'Clone',\n  editPage = 'Edit',\n  viewPage = 'View',\n  createPage = 'Create',\n  indexPage = 'Index',\n}\nexport enum ELanguage {\n  EN = 'EN',\n  FR = 'FR',\n}\n\nexport enum EValidationType {\n  email = 'email',\n  entityNumber = 'entityNumber',\n  maxlength = 'maxlength',\n  minlength = 'minlength',\n  mobile = 'mobile',\n  name = 'name',\n  normal = 'normal',\n  passwordNotMatch = 'passwordNotMatch',\n  pattern = 'pattern',\n  required = 'required',\n  unique = 'unique',\n  custom = 'custom',\n}\nexport interface IValidationMessage {\n  type: EValidationType;\n  message: string;\n}\nexport type SortType = 'asc' | 'desc';\n\ninterface Sort {\n  sorted: boolean;\n  unsorted: boolean;\n  empty: boolean;\n}\n\ninterface IPage<T> {\n  content: T[];\n  number: number;\n  size: number;\n  totalElements: number;\n  totalPages: number;\n  last: boolean;\n  first: boolean;\n  sort: Sort;\n  numberOfElements: number;\n  empty: boolean;\n}\n\nexport interface ISearchQuery {\n  /**\n   * Starts at 1\n   */\n  page?: number;\n  limit?: number;\n  search?: string;\n  [x: string]: string | number | boolean;\n}\nexport interface ISearchResponse<T = any> {\n  page: IPage<T>;\n  listSize: number;\n  pageNumber?: number;\n  pageSize?: number;\n  searchCriteria: any;\n}\n\nexport interface ISearchResponse<T = any> {\n  page: IPage<T>;\n  listSize: number;\n  pageNumber?: number;\n  pageSize?: number;\n  searchCriteria: any;\n}\n\nexport interface ISearchResponse2<T = any> {\n  content: T[];\n  empty: boolean;\n  first: boolean;\n  last: boolean;\n  number: number;\n  numberOfElements: number;\n  size: number;\n  totalElements: number;\n  totalPages: number;\n  sort: {\n    sorted: boolean;\n    unsorted: boolean;\n    empty: boolean;\n  };\n}\n\nexport type ImageType = 'pp' | 'other';\nexport interface ITab {\n  id?: string;\n  target?: string;\n  label: string;\n  form?: string;\n  postFunction?: (\n    data: any,\n    productCode?: string\n  ) => Observable<{\n    data: any;\n    productCode: string;\n  }>;\n  putFunction?: (\n    data: any,\n    productCode: string\n  ) => Observable<{\n    data: any;\n    productCode: string;\n  }>;\n  data?: any;\n}\nexport interface CustomValidationError {\n  custom?: string;\n  maxlength?: boolean;\n  maxLength?: boolean;\n  minlength?: boolean;\n  minLength?: boolean;\n  notFound?: boolean;\n  notUnique?: boolean;\n  pattern?: boolean;\n  required?: boolean;\n  used?: boolean;\n}\nexport enum EMenuType {\n  horizontal = 'H',\n  vertical = 'V',\n}\nexport interface IValueLabel<T = string> {\n  value: T;\n  label: string;\n}\n\nexport interface IConfigImages {\n  favicon: string;\n  watermark: string;\n  logo: {\n    dark: string;\n    light: string;\n  };\n  pp: {\n    src: string;\n    min: string;\n  };\n  other: {\n    src: string;\n    min: string;\n  };\n}\nexport class Constant {\n  //   constructor() {}\n}\n\nexport interface ITableName {\n  schema: string;\n  primaryTable: string;\n}\nexport interface IState extends IListValue<number> {\n  alias: string;\n}\n\nexport interface IListValue<TID = string, TValue = any> {\n  name: string;\n  value?: TValue;\n  id?: TID;\n}\n\nexport enum EPeriod {\n  daily = 'daily',\n  weekly = 'weekly',\n  monthly = 'monthly',\n  annually = 'annually',\n  yearly = 'yearly',\n\n  today = 'today',\n  week = 'week',\n  month = 'month',\n  year = 'year',\n  annual = 'annual',\n}\n","import {\n  Day, EPeriod, IListValue\n} from '../shared/models/index.model';\n\nexport class Config {\n  static logoLightPath = `/assets/images/iras.light.logo.svg`;\n  static logoDarkPath = `/assets/images/iras.dark.logo.svg`;\n  static Optioner: { num: number; letter: string }[] = [\n    { num: 1, letter: 'a' },\n    { num: 2, letter: 'b' },\n    { num: 3, letter: 'c' },\n    { num: 4, letter: 'd' },\n    { num: 5, letter: 'e' },\n    { num: 6, letter: 'f' },\n    { num: 7, letter: 'g' },\n    { num: 8, letter: 'h' },\n    { num: 9, letter: 'i' },\n    { num: 10, letter: 'j' },\n  ];\n  static Months: { id: number; short: string; long: string }[] = [\n    { id: 0, short: 'Jan', long: 'January' },\n    { id: 1, short: 'Feb', long: 'February' },\n    { id: 2, short: 'Mar', long: 'March' },\n    { id: 3, short: 'Apr', long: 'April' },\n    { id: 4, short: 'May', long: 'May' },\n    { id: 5, short: 'Jun', long: 'June' },\n    { id: 6, short: 'Jul', long: 'July' },\n    { id: 7, short: 'Aug', long: 'August' },\n    { id: 8, short: 'Sep', long: 'September' },\n    { id: 9, short: 'Oct', long: 'October' },\n    { id: 10, short: 'Nov', long: 'November' },\n    { id: 11, short: 'Dec', long: 'December' },\n  ];\n  static Days = [\n    { index: 0, day: Day.sunday },\n    { index: 1, day: Day.monday },\n    { index: 2, day: Day.tuesday },\n    { index: 3, day: Day.wednesday },\n    { index: 4, day: Day.thursday },\n    { index: 5, day: Day.friday },\n    { index: 6, day: Day.saturday },\n  ];\n\n  static Numbers: { num: number; label: string }[] = [\n    { num: 1, label: 'First' },\n    { num: 2, label: 'Second' },\n    { num: 3, label: 'Third' },\n    { num: 4, label: 'Fourth' },\n    { num: 5, label: 'Fifth' },\n    { num: 6, label: 'Sixth' },\n    { num: 7, label: 'Seventh' },\n    { num: 8, label: 'Eighth' },\n    { num: 9, label: 'Ninth' },\n    { num: 10, label: 'Tenth' },\n  ];\n\n  static sexes = ['Female', 'Male'];\n\n  static Currency = '₦';\n  static TimeStampDay = 86400000;\n  static TimeStampWeek = 604800000;\n  static placeholderImage = `/assets/images/placeholder.jpg`;\n\n  static periods: IListValue<EPeriod>[] = [\n    { id: EPeriod.today, name: 'Today' },\n    { id: EPeriod.week, name: 'This Week' },\n    { id: EPeriod.month, name: 'This Month' },\n    { id: EPeriod.year, name: 'This Year' },\n  ];\n  static periodsWithAnnual: IListValue<EPeriod>[] = [\n    { id: EPeriod.today, name: 'Today' },\n    { id: EPeriod.week, name: 'This Week' },\n    { id: EPeriod.month, name: 'This Month' },\n    { id: EPeriod.annual, name: 'This Year' },\n  ];\n  static periodAdverbs: IListValue<EPeriod>[] = [\n    { id: EPeriod.daily, name: 'Daily' },\n    { id: EPeriod.weekly, name: 'Weekly' },\n    { id: EPeriod.monthly, name: 'Monthly' },\n    { id: EPeriod.annually, name: 'Annually' },\n  ];\n\n  static organisationPlaceholder = '{{org}}';\n  static infoMail='info@iras.ng'\n  static salesMail='sales@iras.ng'\n  static supportMail='support@iras.ng'\n  static supportURL='https://support.iras.ng/'\n  static authBaseRoute: string;\n \n}\n ","export class Loader {\n  loaderText: string;\n  private _pageLoaders: 1[] = [];\n\n  constructor() {}\n\n  get isLoading() {\n    return this._pageLoaders?.length > 0;\n  }\n\n  startPl(value = 1) {\n    for (let index = 0; index < value; index++) {\n      this._pageLoaders.push(1);\n    }\n    // console.log('length at start',this._pageLoaders.length)\n    return this._pageLoaders?.length;\n  }\n\n  restartPl() {\n    this._pageLoaders = [];\n    this.startPl();\n  }\n\n  stopPl(value = 1) {\n    for (let index = 0; index < value; index++) {\n      this._pageLoaders.pop();\n    }\n    if (!this._pageLoaders?.length && this.onLoaderStopped)\n      this.onLoaderStopped();\n    // console.log('length at end', this._pageLoaders.length)\n    return this._pageLoaders?.length;\n  }\n\n  /**\n   * Function to call when the loader stack is empty\n   */\n  onLoaderStopped: (...args) => any;\n  stopAllPls() {\n    this._pageLoaders = [];\n  }\n}\n","import { ActivatedRoute } from '@angular/router';\nimport { WebSocketSubject } from 'rxjs/webSocket';\nimport { Config } from '../../config/index.config';\nimport { IMenuItem } from '../models/IMenuItem';\nimport { Loader } from './page-loader.class';\n\n/**\n * Class for the environment object\n */\nexport class Environment {\n  /**\n   * List of menu items\n   */\n  menus: IMenuItem[];\n  /**\n   * Current page title\n   */\n  pageTitle: string;\n  /**\n   * Defualt app currency\n   */\n  currency = '₦';\n  /**\n   * Environment name\n   */\n  readonly name: string;\n  /**\n   * name of local storage location\n   */\n  storageKey: 'localStorage' | 'sessionStorage' = 'localStorage';\n  /**\n   * Name of the app\n   */\n  appName: string = 'iRAS';\n  /**\n   * Whether to use authentication\n   */\n  authenticate?: boolean;\n  /**\n   * Whether to product logs or not. True means produce logs\n   */\n  debug?: boolean;\n  /**\n   * Current activated route\n   */\n  activatedRoute: ActivatedRoute; \n  organisationName: string;\n  /**\n   * storage key for user object\n   */\n  readonly userStorageKey = 'user';\n  /**\n   * storage key for embedded user object\n   */\n  readonly enbeddedUserStorageKey = 'enbedded-user';\n  /**\n   * storage key for super user object\n   */\n  readonly adminUserStorageKey = 'super-user';\n  /**\n   * page loader object\n   */\n  pageLoader = new Loader();\n  /** API Request timeout period\n   *  Enter value in millisecond or Date object\n   */\n  requestTimeout: number | Date = new Date(Config.TimeStampDay * 365 + Date.now());\n  versionNo: string;\n  mixPanelToken: string;\n  activeSubdomainSite: string;\n  socket: WebSocketSubject<any>;\n  useWebSocket: boolean;\n  isSuperAdmin: boolean;\n  clientAdminUrl: any;\n  encryptAPIRequests: boolean;\n  isEmbedMode: boolean;\n  readonly embedKey = 'weffwdfuion';\n  tawkIOConfig: {\n    propertyId: string;\n    widgetId: string;\n  };\n  /**\n   * User's auth token\n   */\n  token: string;\n  /**\n   * Set the value of the page loader\n   */\n  set loading(v: boolean) {\n    if (v) this.pageLoader.startPl();\n    else this.pageLoader.stopPl();\n  }\n\n  /**\n   *\n   * @param production Specify whether it is a production environment\n   * @param name Name of the environment\n   * @param apiBaseUrl Base url of the server api\n   */\n  constructor(public production: boolean, name: string, public apiBaseUrl?: string) {\n    if (!production) this.debug = true;\n    this.name = name;\n  }\n\n  updateEnvironment(env: Environment) {\n    Object.assign(this, env);\n  }\n\n  /**\n   * Whether it is the dev environment or not\n   */\n  get isDev() {\n    return !this.production;\n  }\n}\n","import { Environment } from \"../lib/shared/classes/environment.class\";\n\n\n/**\n * Environment object\n */\nexport const HHenvironment = new Environment(false, 'dev');\n","\n\nexport const configValidationMessages = {\n  normal: [ \n    { type: 'required', message: ' is required.' },\n    {\n      type: 'maxLength',\n      message: ' must be at most {{maxLength}} characters long.',\n    },\n    {\n      type: 'maxlength',\n      message: ' must be at most {{maxLength}} characters long.',\n    },\n    {\n      type: 'minLength',\n      message: ' must be at least {{minLength}} characters long.',\n    },\n    {\n      type: 'minlength',\n      message: ' must be at least {{minLength}} characters long.',\n    },\n    {\n      type: 'notUnique',\n      message: ' already exists.',\n    },\n    {\n      type: 'date',\n      message: 'Date should be in the dd/mm/yyyy format',\n    },\n    {\n      type: 'used',\n      message: ' has already been used.',\n    },\n    { type: 'email', message: ' is invalid.' },\n    { type: 'pattern', message: ' is invalid.' },\n    { type: 'notFound', message: \" doesn't exist\" },\n    { type: 'custom' },\n  ],\n  address: [\n    { type: 'required', message: 'Address is required.' },\n    {\n      type: 'minlength',\n      message: 'Address must be at least 3 characters long.',\n    },\n  ],\n  addressLGA: [\n    {\n      type: 'required',\n      message: 'Local government of address is required.',\n    },\n    {\n      type: 'minlength',\n      message:\n        'Local government of address must be at least 2 characters long.',\n    },\n  ],\n  className: [\n    { type: 'required', message: 'Class name is required.' },\n    {\n      type: 'minlength',\n      message: 'Class name must be at least 2 characters long.',\n    },\n  ],\n  classSection: [\n    { type: 'required', message: 'Class section is required.' },\n    {\n      type: 'minlength',\n      message: 'Class section must be at least 1 character long.',\n    },\n  ],\n  email: [\n    { type: 'required', message: 'Email is required.' },\n    {\n      type: 'minlength',\n      message: 'Email must be at least 5 characters long.',\n    },\n    { type: 'pattern', message: 'Email must be valid.' },\n    { type: 'email', message: 'Email must be valid' },\n    {\n      type: 'notUnique',\n      message: 'Email already exists.',\n    },\n    {\n      type: 'equalToOther',\n      message: \"Alternate email can't be the same as email\",\n    },\n  ],\n  entityNumber: [\n    { type: 'required', message: ' is required.' },\n    {\n      type: 'invalid',\n      message: ' is invalid.',\n    },\n    { type: 'notFound', message: ' was not found.' },\n    {\n      type: 'notUnique',\n      message: ' already exists.',\n    },\n  ],\n  firstname: [\n    { type: 'required', message: 'First Name is required.' },\n    {\n      type: 'minlength',\n      message: 'Name must be at least 2 characters long.',\n    },\n  ],\n  lastname: [\n    { type: 'required', message: 'Last Name is required.' },\n    {\n      type: 'minlength',\n      message: 'Name must be at least 2 characters long.',\n    },\n  ],\n  lga: [\n    {\n      type: 'required',\n      message: 'Local government of origin is required.',\n    },\n    {\n      type: 'minlength',\n      message: 'Local government of origin must be at least 2 characters long.',\n    },\n  ],\n  maidenName: [\n    { type: 'required', message: 'Maiden Name is required.' },\n    {\n      type: 'minlength',\n      message: 'Maiden Name must be at least 2 characters long.',\n    },\n  ],\n\n  mobile: [\n    { type: 'required', message: 'Phone number is required.' },\n    {\n      type: 'minlength',\n      message: 'Phone number must be at least 11 characters long.',\n    },\n    {\n      type: 'notUnique',\n      message: 'Phone number already exists.',\n    },\n    {\n      type: 'equalToOther',\n      message: \"Alternate phone number can't be the same as phone number\",\n    },\n    {\n      type: 'invalid',\n      message: 'Phone number is invalid',\n    },\n    {\n      type: 'countryCode',\n      message: 'Country code is invalid',\n    },\n  ],\n  name: [\n    { type: 'required', message: ' is required.' },\n    {\n      type: 'pattern',\n      message: \" can only contain letters, numbers and '-'.\",\n    },\n    {\n      type: 'minlength',\n      message: ' must be at least 2 characters long.',\n    },\n  ],\n  numbers: [\n    {\n      type: 'pattern',\n      message: 'This field must be a number.',\n    },\n    { type: 'required', message: 'A value is required.' },\n  ],\n\n  occupation: [\n    { type: 'required', message: 'Occupation is required.' },\n    {\n      type: 'minlength',\n      message: 'Occupation must be at least 2 characters long.',\n    },\n  ],\n\n  othername: [\n    { type: 'required', message: 'Other Name is required.' },\n    {\n      type: 'minlength',\n      message: 'Name must be at least 2 characters long.',\n    },\n  ],\n  password: [\n    { type: 'required', message: 'Password is required.' },\n    {\n      type: 'minlength',\n      message: 'Password must be at least 6 characters long.',\n    },\n    {\n      type: 'maxlength',\n      message: 'Password must be at most 6 characters long.',\n    },\n    { type: 'passwordNotMatch', message: 'Passwords are not the same' },\n  ],\n  pattern: [\n    { type: 'required', message: 'Field is required.' },\n\n    { type: 'pattern', message: 'Field is invalid.' },\n  ],\n  required: [\n    {\n      type: 'required',\n      message: ' is required.',\n    },\n    {\n      type: 'minlength',\n      message: ' must be at least 2 characters long.',\n    },\n  ],\n  sex: [\n    {\n      type: 'required',\n      message: 'Sex is required.',\n    },\n  ],\n  subjectName: [\n    { type: 'required', message: 'Subject name is required.' },\n    {\n      type: 'minlength',\n      message: 'Subject name must be at least 2 characters long.',\n    },\n  ],\n  unique: [\n    {\n      type: 'notUnique',\n      message: ' already exists.',\n    },\n  ],\n  username: [\n    {\n      type: 'required',\n      message: 'is required.',\n    },\n    {\n      type: 'pattern',\n      message: \"Only letters,numbers and '_' are allowed.\",\n    },\n  ],\n  url: [\n    {\n      type: 'required',\n      message: 'URL is required.',\n    },\n    {\n      type: 'pattern',\n      message: 'It does not match a URL',\n    },\n  ],\n};\n","import { Injectable } from '@angular/core';\nimport { AES, enc } from 'crypto-js';\n\n/**\n * Encryption Decryption service\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class EncryptorService {\n  RESPONSE_AESKEY = 'prao7lqjpgymv60eltc6tbdiahe69wf4';\n  secret: string = this.RESPONSE_AESKEY;\n  plusDelimiter = '~---~~';\n\n  /**\n   * Encryption Decryption service\n   */\n  constructor() {}\n\n  encryptText = (data, key = this.secret) => {\n    let encText = AES.encrypt(JSON.stringify(data), key).toString();\n    // enc = enc.split('/').join(this.delimiter);\n    encText = encText.split('+').join(this.plusDelimiter);\n    return encText;\n  };\n  decryptText = (data: string, key = this.secret) => {\n    const encText = data.split(this.plusDelimiter).join('+');\n    return JSON.parse(AES.decrypt(encText, key).toString(enc.Utf8));\n  };\n  /**\n   * Encrypts an item\n   * @param data Item\n   * @returns Encrypted Object\n   */\n  encryptItem = (data) => {\n    try {\n      if (this.RESPONSE_AESKEY) {\n        return AES.encrypt(\n          JSON.stringify(data),\n          this.RESPONSE_AESKEY\n        ).toString();\n      }\n      throw new Error('AES and IV keys must be set');\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  /**\n   * Decrypts an encrypted item\n   * @param data Encrypted string\n   * @returns Decrypted Object\n   */\n  decryptItem = <T = any>(data: string) => {\n    try {\n      if (this.RESPONSE_AESKEY) {\n        // debugger\n        if (typeof data != 'string') return data as T;\n        const decryptedData = AES.decrypt(data, this.RESPONSE_AESKEY || '');\n        const d = JSON.parse(decryptedData.toString(enc.Utf8)) as T;\n        console.log(d);\n        return d;\n      }\n      throw new Error('AES and IV keys must be set');\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { Type } from '@angular/core';\nimport { LoadChildrenCallback, Route, Routes } from '@angular/router'; \nimport { IFormSchema } from '../models/form-schema.model';\nimport { EPageType } from '../models/index.model';\nexport namespace HHFunctions {\n  /**\n   *\n   * @param route\n   * @param indexComponent\n   * @param indexLazyModule\n   * @example\n   * ```ts\n   * EVFunctions.extendRoute(\n   *  {\n   *     path: '',\n   *     data: { title: 'CRM / Setups / Segment' },\n   *     loadChildren: () => import('./create-segment/create-segment.module')\n   *       .then((m) => m.CreateSegmentModule),\n   *  },\n   *  null,\n   *  () => import('./segments-index/segments-index.module')\n   *     .then((m) => m.SegmentsIndexModule));\n   * ```\n   * @returns\n   */\n  export function extendRoute(\n    route: Route,\n    indexComponent?: Type<any>,\n    indexLazyModule?: LoadChildrenCallback\n  ) {\n    const routes: Routes = [\n      {\n        path: '',\n        data: {\n          ...route.data,\n          title: route.data['title'],\n          type: EPageType.indexPage,\n        },\n        component: indexComponent,\n        loadChildren: indexLazyModule,\n      },\n      {\n        path: 'index',\n        data: {\n          ...route.data,\n          title: route.data['title'],\n          type: EPageType.indexPage,\n        },\n        component: indexComponent,\n        loadChildren: indexLazyModule,\n      },\n      {\n        path: 'add',\n        data: {\n          ...route.data,\n          title: pageTitler(route.data['title'], 'Add'),\n          type: EPageType.createPage,\n        },\n        component: route.component,\n        loadChildren: route.loadChildren,\n      },\n      {\n        path: 'edit',\n        data: {\n          ...route.data,\n          title: pageTitler(route.data['title'], 'Edit'),\n          type: EPageType.editPage,\n        },\n        component: route.component,\n        loadChildren: route.loadChildren,\n      },\n      {\n        path: 'view',\n        data: {\n          ...route.data,\n          title: pageTitler(route.data['title'], 'View'),\n          type: EPageType.viewPage,\n        },\n        component: route.component,\n        loadChildren: route.loadChildren,\n      },\n    ];\n    if (!indexComponent && !indexLazyModule) {\n      routes.splice(0, 2);\n    }\n    return routes;\n  }\n  export function strConcatenator(\n    field1: string,\n    field2: string,\n    joiner = ' '\n  ): string {\n    // debugger\n    // console.log('field1',field1)\n    field1 = field1?.toString()?.trim();\n    field2 = field2?.toString()?.trim();\n    if (field1 != null && field2 != null) return field1 + joiner + field2;\n    else return field1 || field2;\n  }\n  export function nameExtractor(obj: any) {\n    return (\n      obj?.name ||\n      obj?.fullName ||\n      obj?.fullname ||\n      strConcatenator(obj?.firstName, obj?.lastName)\n    ) as string;\n  }\n\n  function pageTitler(title: string, infix: string) {\n    if (!title) return '';\n    if (!infix) return title;\n    const split = title.split('/'),\n      lastSplit = split.pop(),\n      prefix = split.join('/');\n    return (prefix ? prefix + ' / ' : ' ') + infix + ' ' + lastSplit;\n  }\n  export function redirectRouteForUM(route: Route, prefix: string) {\n    const oPath = route?.path + '',\n      nPath = prefix + oPath;\n    route.path = nPath;\n    const routes: Routes = [\n      {\n        path: oPath,\n        redirectTo: nPath,\n      },\n      route,\n    ];\n    return routes;\n  } \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NumberToWordsService { \n  num: (x: any) => number;\n  isEmpty: (xs: any) => boolean;\n  not: (x: any) => boolean;\n  chunk: (n: any) => (xs: any) => any[];\n  comp: (f: any) => (g: any) => (x: any) => any;\n  reverse: (xs: any) => any;\n  arr: (x: any) => unknown[];\n  constructor() {\n    this.arr = (x) => Array.from(x);\n    this. num = (x) => Number(x) || 0;\n    const str = (x) => String(x);\n    this.isEmpty = (xs) => xs.length === 0;\n    const take = (n) => (xs) => xs.slice(0, n);\n    const drop = (n) => (xs) => xs.slice(n);\n    this.reverse = (xs) => xs.slice(0).reverse();\n    this.comp = (f) => (g) => (x) => f(g(x));\n    this.not = (x) => !x;\n    this.chunk = (n) => (xs) =>\n      this.isEmpty(xs) ? [] : [take(n)(xs), ...this.chunk(n)(drop(n)(xs))];\n  }\n  transform(value: any): string {\n    if (value && this.isInteger(value)) return this. numToWords(value);\n\n    return value;\n  }\n\n  isInteger = (x: any) => {\n    return x % 1 === 0;\n  };\n\n  numToWords = (n) => {\n    let a = [\n      '',\n      'one',\n      'two',\n      'three',\n      'four',\n      'five',\n      'six',\n      'seven',\n      'eight',\n      'nine',\n      'ten',\n      'eleven',\n      'twelve',\n      'thirteen',\n      'fourteen',\n      'fifteen',\n      'sixteen',\n      'seventeen',\n      'eighteen',\n      'nineteen',\n    ];\n    let b = [\n      '',\n      '',\n      'twenty',\n      'thirty',\n      'forty',\n      'fifty',\n      'sixty',\n      'seventy',\n      'eighty',\n      'ninety',\n    ];\n    let g = [\n      '',\n      'thousand',\n      'million',\n      'billion',\n      'trillion',\n      'quadrillion',\n      'quintillion',\n      'sextillion',\n      'septillion',\n      'octillion',\n      'nonillion',\n    ];\n    // this part is really nasty still\n    // it might edit this again later to show how Monoids could fix this up\n    let makeGroup = ([ones, tens, huns]) => {\n      return [\n        this.num(huns) === 0 ? '' : a[huns] + ' hundred ',\n        this.num(ones) === 0 ? b[tens] : (b[tens] && b[tens] + '-') || '',\n        a[tens + ones] || a[ones],\n      ].join('');\n    };\n    // \"thousands\" constructor; no real good names for this, i guess\n    let thousand = (group, i) => (group === '' ? group : `${group} ${g[i]}`);\n    // execute !\n    if (typeof n === 'number') return this.numToWords(String(n));\n    if (n === '0') return 'zero';\n    return this.comp(this.chunk(3))(this.reverse)(this.arr(n))\n      .map(makeGroup)\n      .map(thousand)\n      .filter(this.comp(this.not)(this.isEmpty))\n      .reverse()\n      .join(' ');\n  };\n}\n","import { CommonModule, DatePipe } from '@angular/common';\nimport { NgModule, Pipe, PipeTransform } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { EPageType } from '../models/index.model';\nimport { HHFunctions } from '../functions/base-functions';\nimport { UtilityService } from '../../services/utility.service';\nimport { NumberToWordsService } from '../../services/number-to-words.service';\n\n@Pipe({\n  name: 'numberToWords',\n  standalone: true,\n})\nexport class NumberToWordsPipe implements PipeTransform {\n  transform(value: any, suffix: string): string {\n    if (value && this.ntw.isInteger(value)) return this.ntw.numToWords(value) + suffix;\n\n    return value;\n  }\n  constructor(public ntw: NumberToWordsService) {}\n}\n\n@Pipe({\n  name: 'arraySplitter',\n  standalone: true,\n})\nexport class ArraySplitter implements PipeTransform {\n  transform<T>(arr: T[], arrLength: number, startIndex: number, endIndex?: number) {\n    return arr ? arr.slice(startIndex, endIndex ? endIndex + 1 : undefined) : [];\n  }\n}\n\n@Pipe({\n  name: 'gender',\n  standalone: true,\n})\nexport class GenderPipe implements PipeTransform {\n  transform(value: string) {\n    return value == 'M' ? 'Male' : value == 'F' ? 'Female' : value;\n  }\n}\n@Pipe({\n  name: 'round',\n  standalone: true,\n})\nexport class RoundPipe implements PipeTransform {\n  /**\n   * Use the Math.round function\n   */\n  transform(value: number) {\n    return Math.round(value);\n  }\n}\n@Pipe({\n  name: 'secondsToTime',\n  standalone: true,\n})\nexport class SecondsToTimePipe implements PipeTransform {\n  transform(value: number) {\n    const timeLeft = this.uS.secondsToHourMinSec(value);\n    return `${timeLeft.hours ? timeLeft.hours + 'hrs' : ''}\n  ${timeLeft.mins ? timeLeft.mins + 'min' : ''} ${timeLeft.secs ? timeLeft.secs + 's' : ''}`;\n  }\n  constructor(public uS: UtilityService) {}\n}\n\n@Pipe({\n  name: 'getValueLabel',\n  standalone: true,\n})\nexport class GetValueLabel implements PipeTransform {\n  /**\n   * Converts a string into a Select option\n   * @param value The value to search for in the options list\n   * @param options The list of items to search in\n   * @param labelField The field that holds the description field\n   * @param valueField The field that holds the value field\n   * @returns A concatenation of the value and description (value - description)\n   */\n  transform(\n    value: string,\n    options: any[],\n    labelField = 'description',\n    valueField = 'code'\n  ): string {\n    if (!value) return '';\n    if (!options) return value;\n    const item = options.find((x) => x[valueField] == value);\n    if (!item) return value;\n    return value + ' - ' + item[labelField] || item['title'];\n  }\n}\n\n@Pipe({\n  name: 'valueFormatter',\n  standalone: true,\n})\nexport class ValueFormatterPipe implements PipeTransform {\n  async transform(val, formatter: any) {\n    return formatter ? formatter(val) : val;\n  }\n}\n@Pipe({\n  name: 'functionCaller',\n  standalone: true,\n})\nexport class FunctionCaller implements PipeTransform {\n  /**\n   * Calls a function in the template\n   * @param func Function to be called\n   * @param args\n   * @returns\n   */\n  transform<T, P>(func: (...args: P[]) => T, ...args: P[]) {\n    return func ? func(...args) : null;\n  }\n}\n@Pipe({\n  name: 'functionCaller1',\n  standalone: true,\n})\nexport class FunctionCaller1 extends FunctionCaller {\n  override transform<T, P1>(func: (param: P1) => T, param: P1) {\n    return super.transform(func, param);\n    // return param ? func(param) : null;\n  }\n}\n@Pipe({\n  name: 'functionCaller2',\n  standalone: true,\n})\nexport class FunctionCaller2 extends FunctionCaller {\n  override transform<T, P1, P2>(func: (param1: P1, param2: P2) => T, param1: P1, param2: P2) {\n    return super.transform(func, param1, param2);\n    // console.log('using')\n    // if(func) debugger\n    return func ? func(param1, param2) : null;\n    // return param1 ? (param2 ? func(param1, param2) : null) : null;\n  }\n}\n@Pipe({\n  name: 'functionCaller3',\n  standalone: true,\n})\nexport class FunctionCaller3 implements PipeTransform {\n  transform<T, P1, P2, P3>(\n    func: (param1: P1, param2: P2, param3: P3) => T,\n    param1: P1,\n    param2: P2,\n    param3: P3\n  ) {\n    return func(param1, param2, param3);\n    // return param1 ? (param2 ? func(param1, param2) : null) : null;\n  }\n}\n@Pipe({\n  name: 'httpListCaller',\n  standalone: true,\n})\nexport class HttpListCaller implements PipeTransform {\n  // transform<T>(httpObservable: any) {\n  transform<T>(httpObservable: () => Observable<T>) {\n    // console.log('ran functionCaller', httpObservable);\n    return httpObservable();\n  }\n}\n\n@Pipe({\n  name: 'httpListCaller1',\n  standalone: true,\n})\nexport class HttpListCaller1 implements PipeTransform {\n  transform<T>(httpObservable: (param: any) => Observable<T>, param: any) {\n    // console.log('ran functionCaller1', httpObservable);\n    return httpObservable(param);\n    // return param ? httpObservable(param) : null;\n  }\n}\n@Pipe({\n  name: 'httpListCaller2',\n  standalone: true,\n})\nexport class HttpListCaller2 implements PipeTransform {\n  transform<T>(\n    httpObservable: (param1: string, param2: string) => Observable<T>,\n    param1: string,\n    param2: string\n  ) {\n    // console.log('ran httpListCaller2', httpObservable);\n    return httpObservable(param1, param2);\n    // return param1 ? (param2 ? httpObservable(param1, param2) : null) : null;\n  }\n}\n@Pipe({\n  name: 'isShowPage',\n  standalone: true,\n})\nexport class IsShowPage implements PipeTransform {\n  transform(type: EPageType) {\n    return type == EPageType.viewPage ? true : false;\n  }\n}\n@Pipe({\n  name: 'isClonePage',\n  standalone: true,\n})\nexport class IsClonePage implements PipeTransform {\n  transform(type: EPageType) {\n    return type == EPageType.clonePage ? true : null;\n  }\n}\n\n@Pipe({\n  name: 'filterArray',\n  standalone: true,\n})\nexport class FilterArrayPipe implements PipeTransform {\n  transform<T>(\n    arr: T[],\n    value: any,\n    key: keyof T,\n    filterFunction?: (value: T, index?: number, array?: T[]) => boolean\n  ) {\n    if (!arr) {\n      return [];\n    }\n    if (filterFunction) return arr.filter(filterFunction);\n    else return arr.filter((x) => x[key] == value);\n  }\n}\n\n@Pipe({\n  name: 'filterArrayByString',\n  standalone: true,\n})\nexport class FilterArrayByStringPipe implements PipeTransform {\n  /**\n   * Filter array using a pipe\n   * @param arr Array to filter\n   * @param value Value to filter for\n   * @param keys Fields to check for match in\n   * @param filterFunction Fitler function to use instead of value and keys\n   * @returns\n   */\n  transform<T>(\n    arr: T[],\n    value: string,\n    keys: (keyof T)[],\n    filterFunction?: (value: T, index?: number, array?: T[]) => boolean\n  ) {\n    if (!arr) {\n      return [];\n    }\n    if (!value) return arr;\n    if (filterFunction) return arr.filter(filterFunction);\n    else {\n      // debugger;\n      const vl = value?.toString()?.trim()?.toLowerCase();\n      const ret: T[] = [];\n      const addedMap: { [id: string]: boolean } = {};\n      for (const key of keys) {\n        for (const item of arr) {\n          if (addedMap[item['id']]) continue;\n          if ((<string>item[key])?.toString()?.toLowerCase()?.startsWith(vl)) {\n            ret.push(item);\n            addedMap[item['id']] = true;\n          }\n        }\n      }\n      for (const key of keys) {\n        for (const item of arr) {\n          if (addedMap[item['id']]) continue;\n          if ((<string>item[key])?.toString()?.toLowerCase()?.includes(vl)) {\n            ret.push(item);\n            addedMap[item['id']] = true;\n          }\n        }\n      }\n      return ret;\n    }\n  }\n}\n\n@Pipe({\n  name: 'filterFormArray',\n  standalone: true,\n})\nexport class FilterFormArrayPipe implements PipeTransform {\n  transform(arr: AbstractControl[], value: any, key = 'id') {\n    if (!arr || !arr.length) return arr;\n    debugger;\n    return arr.filter((x) => x.value[key] == value);\n  }\n}\n\n@Pipe({\n  name: 'sort',\n  standalone: true,\n})\nexport class SortPipe implements PipeTransform {\n  transform<T>(arr: T[], direction: 0 | 1 = 0, sortField?: keyof T) {\n    //    console.log('SORTTER', arr, direction, sortField);\n    // debugger;\n    if (!arr) {\n      return null;\n    }\n    if (direction > -1 && direction < 2) {\n      return this.sort(arr, direction, sortField as any);\n    } else {\n      return arr;\n    }\n  }\n  sort<T>(arr: T[], direction: 0 | 1, sortField?: keyof T) {\n    if (sortField) {\n      return arr.sort2(sortField, true, direction ? true : false);\n    } else {\n      return arr.sort((x: any, y: any) => (direction ? y - x : x - y));\n    }\n  }\n}\n@Pipe({\n  name: 'toAny',\n  standalone: true,\n})\nexport class ToAnyPipe implements PipeTransform {\n  transform(value: any, isArray = false) {\n    return isArray ? (value as any[]) : value;\n  }\n}\n\n@Pipe({\n  name: 'toAnyArray',\n  standalone: true,\n})\nexport class ToAnyArrayPipe implements PipeTransform {\n  transform(value: any) {\n    return value as any[];\n  }\n}\n\n@Pipe({\n  name: 'trimText',\n  standalone: true,\n})\nexport class TrimTextPipe implements PipeTransform {\n  /**\n   * Trims a string based on a specified length\n   * @param value String to trim\n   * @param length Length to begin trimming\n   * @returns Trimmed string\n   */\n  transform(value: string, length: number) {\n    return !value || length == null || value.length < length\n      ? value\n      : value.substring(0, length) + '...';\n  }\n}\n\n@Pipe({\n  name: 'xOrY',\n  standalone: true,\n})\nexport class XOrYPipe implements PipeTransform {\n  transform(x: string, y = '-') {\n    return this.uS.xOrY(x, y);\n  }\n  constructor(private uS: UtilityService) {}\n}\n\n@Pipe({\n  name: 'replaceAll',\n  standalone: true,\n})\nexport class ReplaceAllPipe implements PipeTransform {\n  transform(text: string, search: string, replacement: string) {\n    return text ? text.split(search).join(replacement) : text;\n  }\n}\n\n@Pipe({\n  name: 'valueOrX',\n  standalone: true,\n})\nexport class ValueOrXPipe implements PipeTransform {\n  /**\n   *\n   * @param value Variable that holds the value to be checked for emptiness\n   * @param replacement This is the value that will be set if the subject field is empty\n   * @returns Return the value or the replacement value if value is empty\n   */\n  transform<T>(value: T, replacement: string = '-') {\n    return value == null || value == undefined ? replacement : value;\n  }\n}\n\n@Pipe({\n  name: 'strConcatenator',\n  standalone: true,\n})\nexport class StrConcatenatorPipe implements PipeTransform {\n  transform<T>(text1: string, text2: string, joiner: string = ' - ') {\n    return HHFunctions.strConcatenator(text1, text2, joiner);\n  }\n}\n@Pipe({\n  name: 'customDate',\n  standalone: true,\n})\nexport class CustomDatePipe implements PipeTransform {\n  transform(date: string, showTime = false) {\n    let d = showTime ? 'dd MMM.' : 'dd MMM. YYYY';\n    let fulldate: string = '';\n    if (new Date(date).getDay() == new Date().getDay()) {\n      fulldate = 'Today';\n      d = '';\n    } else if (new Date(date).getDay() - new Date().getDay() == 1) {\n      fulldate = 'Yesterday';\n      d = '';\n    }\n    return (fulldate + this.datePipe.transform(date, showTime ? d + ' hh:mma' : d))?.trim();\n  }\n  transform2(date: string, formatStr: string) {\n    return this.datePipe.transform(date, formatStr);\n  }\n  constructor(public datePipe: DatePipe) {}\n}\n\nconst comps = [\n  ArraySplitter, \n  CustomDatePipe,\n  FilterArrayByStringPipe,\n  FilterArrayPipe,\n  FilterFormArrayPipe,\n  FunctionCaller,\n  FunctionCaller1,\n  FunctionCaller2,\n  FunctionCaller3,\n  GenderPipe,\n  GetValueLabel,\n  HttpListCaller,\n  HttpListCaller1,\n  HttpListCaller2,\n  IsClonePage,\n  IsShowPage,\n  NumberToWordsPipe,\n  ReplaceAllPipe,\n  RoundPipe,\n  SecondsToTimePipe,\n  SortPipe,\n  StrConcatenatorPipe,\n  ToAnyArrayPipe,\n  ToAnyPipe,\n  TrimTextPipe,\n  ValueFormatterPipe,\n  ValueOrXPipe,\n  XOrYPipe,\n];\nconst modules = [];\n@NgModule({\n  imports: [CommonModule, ...modules, ...comps],\n  exports: [...comps, ...modules],\n  providers: [DatePipe],\n})\nexport class UtilityPipesModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef as MatDialogRef, MAT_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styles: [\n        `\n      .que {\n        font-size: 100px;\n      }\n    `,\n    ],\n    standalone: true,\n})\nexport class ConfirmDialogComponent implements OnInit {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public text: string,\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>\n  ) {}\n\n  ngOnInit(): void {}\n  yes() {\n    this.dialogRef.close(true);\n  }\n  no() {\n    this.dialogRef.close(false);\n  }\n}\n","<div class=\"text-center\">\n  <div class=\"font-weight-bold d-inline-block bg-peimary text-light mt-3 rounded ps-4 pe-4 pt-1 pb-1\">\n    CONFIRM\n  </div>\n  <div class=\" \">\n    <span class=\"fa fa-warning que text-peimary\">\n\n    </span>\n  </div>\n\n  <div class=\"card-body overflow-auto pre-line\" [innerHTML]=\"text\">\n  </div>\n\n  <div class=\"p-1 p-md-4 \">\n    <div class=\"justify-content-between d-flex align-items-center\">\n      <div class=\"col-5 ps-0\">\n        <button class=\"btn btn-outline-danger m-0 w-100\" (click)=\"no()\">No</button>\n      </div>\n      <div class=\"col-5 pe-0 text-right\">\n        <button class=\"btn btn-outline-success m-0 w-100\" (click)=\"yes()\">Yes</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { lastValueFrom } from 'rxjs';\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmDialogService {\n  constructor(public dialog: MatDialog) {}\n  confirm(text: string) {\n    return lastValueFrom(\n      this.dialog\n        .open(ConfirmDialogComponent, {\n          data: text,\n          height: 'auto',\n          width: '450px',\n          autoFocus: false,\n        })\n        .afterClosed()\n    ).then((r) => {\n      if (r) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HHenvironment } from '../../environments/environment';\nimport mixpanel from 'mixpanel-browser';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MixPanelService {\n  protected readonly token: string;\n  identifier: string;\n  constructor() {\n    this.token = HHenvironment.mixPanelToken;\n    if (HHenvironment.production && this.token && this.identifier) this.init();\n  }\n  \n  /**\n   * Initialize mixpanel.\n   * @memberof MixpanelService\n   */\n  init(): void {\n    // debugger;\n    if (!this.token) return;\n    mixpanel.init(this.token);\n    mixpanel.identify(this.identifier);\n  }\n\n  /**\n   * Push new action to mixpanel.\n   *\n   * @param {string} actionName Name of the action to track.\n   * @param {*} [action={}] Actions object with custom properties.\n   * @memberof MixpanelService\n   */\n  track(actionName: string, config?: { status?: 0 | 1; action? }): void {\n    try {\n      if (HHenvironment.production && this.token)\n        mixpanel.track(\n          (actionName + (config?.status == 1 ? 'successful' : 'failed')).toUpperCase(),\n          config?.action\n        );\n    } catch (error) {\n      console.error(`Mixpanel failed`);\n      console.error(error);\n    }\n  }\n}\n","import { CurrencyPipe, DecimalPipe, Location, TitleCasePipe } from '@angular/common';\nimport { ElementRef, Injectable, QueryList } from '@angular/core';\nimport {\n  MatDialog as MatDialog,\n  MatDialogConfig as MatDialogConfig,\n} from '@angular/material/dialog';\nimport { MatSnackBar as MatSnackBar } from '@angular/material/snack-bar';\nimport { Title } from '@angular/platform-browser';\nimport {\n  Router,\n  NavigationExtras,\n  ActivatedRoute,\n  NavigationCancel,\n  NavigationEnd,\n  NavigationStart,\n} from '@angular/router';\nimport jfd from 'js-file-download';\nimport { Config } from '../config/index.config';\nimport { saveAs } from 'file-saver';\nimport { HHenvironment } from '../../environments/environment';\nimport { AbstractControl, FormArray, FormControl, UntypedFormArray } from '@angular/forms';\nimport { cloneDeep } from 'lodash-es';\nimport { isObservable, merge, Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, filter, map, mergeMap, tap } from 'rxjs/operators';\nimport { EValidationType, CustomValidationError, EPeriod } from '../shared/models/index.model';\nimport * as $ from 'jquery';\nimport { MixPanelService } from './mix-panel.service';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport Papa from 'papaparse';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { ConfirmDialogService } from '../shared/components/confirm-dialog/confirm-dialog.service';\nimport { TableCol } from '../shared/components/table-plain/table.model';\nimport { CustomDatePipe } from '../shared/pipes/utility.pipe';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilityService {\n  config = Config;\n  downloader = jfd;\n  $ = $;\n  eValidationType = EValidationType;\n  ePeriod = EPeriod;\n  environment = HHenvironment;\n  /**\n   * Emits true if mobile\n   */\n  mobileQueryChanged = new ReplaySubject<boolean>();\n  isMobile: boolean;\n\n  constructor(\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar,\n    public router: Router,\n    public titleS: Title,\n    public location: Location,\n    public numberPipe: DecimalPipe,\n    public currencyPipe: CurrencyPipe,\n    public titleCasePipe: TitleCasePipe,\n    public customDatePipe: CustomDatePipe,\n    public confirmDialogService: ConfirmDialogService,\n    public mixPanelService: MixPanelService,\n    public responsive: BreakpointObserver\n  ) {\n    responsive.observe([Breakpoints.HandsetPortrait]).subscribe((result) => {\n      const breakpoints = result.breakpoints;\n\n      if (breakpoints[Breakpoints.HandsetPortrait]) {\n        console.log('screens matches ' + Breakpoints.HandsetPortrait);\n        this.isMobile = true;\n        this.mobileQueryChanged.next(true);\n      } else {\n        this.isMobile = false;\n        this.mobileQueryChanged.next(false);\n      }\n    });\n  }\n\n  back = () => this.location.back();\n  imageTypes: { [type: string]: boolean } = {\n    'image/apng': true,\n    'image/avif': true,\n    'image/gif': true,\n    'image/jpeg': true,\n    'image/png': true,\n    'image/svg+xml': true,\n    'image/webp': true,\n  };\n  onlyOneInput(inputs: FormControl[]) {\n    const nInputs = inputs?.map((inp) => ({ id: this.genRandomID, inp })) || [];\n    merge(\n      ...nInputs.map((i) => i.inp.valueChanges.pipe(map((val) => ({ id: i.id, val }))))\n    ).subscribe((r) => {\n      // debugger\n      if (r.val)\n        nInputs.filter((x) => x.id != r.id).forEach((x) => x.inp.disable({ emitEvent: false }));\n      else nInputs.filter((x) => x.id != r.id).forEach((x) => x.inp.enable({ emitEvent: false }));\n    });\n  }\n\n  async copyString(str: string) {\n    try {\n      const elem = document.createElement('textarea');\n      elem.value = str;\n      document.body.appendChild(elem);\n      elem.select();\n      document.execCommand('copy');\n      document.body.removeChild(elem);\n      this.notify('Copied');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async copyObject(payload: Object) {\n    try {\n      return this.copyString(JSON.stringify(payload));\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  xOrY = (x, y = '-') => `${x == null ? y : x}`;\n  toTitleCase(text: string) {\n    return this.titleCasePipe.transform(text);\n  }\n\n  /**\n   * Convert Date string to Date Time string\n   * @param dateStr Date string\n   * @example '2022-01-25'\n   * @param config Configuration for the conversion\n   * @returns Returns a Date Time string\n   * @example '2022-01-25T00:00:00Z' or '2022-01-25 00:00:00'\n   */\n  dateToDateTime = (\n    dateStr: string,\n    config?: {\n      /**\n       * Use the yyyy-mm-dd hh:mm:ss format\n       */\n      omitT?: boolean;\n    }\n  ) => {\n    const omitT = !!config?.omitT;\n    if (!dateStr) return null;\n    if (dateStr.includes('T')) return dateStr;\n    return dateStr + (omitT ? ' 00:00:00' : 'T00:00:00Z');\n  };\n\n  /**\n   * Set an Object's field if the object exists or don't if the object doesn't\n   * @param obj Object holding the field\n   * @param fieldName Name of the field to set\n   * @param val Value to set the field with\n   * @returns Returns the object holding the data\n   */\n  setterWithNull<T>(obj: T, kvps: Partial<T>) {\n    if (!obj) return null;\n    for (const key in kvps) {\n      obj[key] = kvps[key];\n    }\n    return obj;\n  }\n\n  /**\n   * (Set an Object's field if the object exists or don't if the object doesn't) for multiple entries\n   * @param items Array of objects and their modifications\n   */\n  setterWithNullArray<T>(items: { obj: T; kvps: Partial<T> }[]) {\n    for (const item of items) {\n      this.setterWithNull(item.obj, item.kvps);\n    }\n  }\n\n  /**\n   * Handles the deletion of rows from a FormArray\n   * @param index Index of the row to delete\n   * @param fa The FormArray that holds the rows\n   * @param deleteService The deletion service to be called (It should be an anonymous function)\n   * @param addRowFunc The function (anonymous) that adds a new row to the FormArray\n   * @param emitEvent Specify whether to emit an event when manipulating the FormArray\n   * @returns\n   */\n  handleFormRowDelete = (\n    index: number,\n    fa: UntypedFormArray,\n    deleteService: (...args) => Promise<any> | Observable<any>,\n    addRowFunc: (...args) => any,\n    emitEvent = true\n  ) => {\n    return new Promise<any>((sub) => {\n      const id = cloneDeep(fa.controls[index]?.value?.id);\n      // debugger;\n      if (fa.controls.length == 1 && id) {\n        fa.removeAt(index, { emitEvent });\n        addRowFunc();\n      } else if (fa.controls.length > 1) fa.removeAt(index, { emitEvent });\n      else if (fa.controls.length == 1) fa.controls[0].reset();\n\n      if (id && deleteService) {\n        const req = deleteService(id);\n        if (req['toPromise']) {\n          sub(req['toPromise']());\n        } else {\n          sub(req as any);\n        }\n      } else {\n        sub(null);\n      }\n    });\n  };\n\n  formatCount = (num: number) => {\n    if (!num) {\n      return 0 + '';\n    } else {\n      // hundreds\n      if (num <= 999) {\n        return num + '';\n      }\n      // thousands\n      else if (num >= 1000 && num <= 9999) {\n        return this.numberPipe.transform(num / 1000, '1.0-3') + 'K';\n      } else if (num >= 10000 && num <= 999999) {\n        return this.numberPipe.transform(num / 1000, '1.0-1') + 'K';\n      }\n      // millions\n      else if (num >= 1000000 && num <= 9999999) {\n        return this.numberPipe.transform(num / 1000000, '1.0-3') + 'M';\n      } else if (num >= 10000000 && num <= 999999999) {\n        return this.numberPipe.transform(num / 1000000, '1.0-1') + 'M';\n      }\n      // billions\n      else if (num >= 1000000000 && num <= 999999999999) {\n        return this.numberPipe.transform(num / 1000000000, '1.0-3') + 'B';\n      } else return num + '';\n    }\n  };\n  /**\n   * Handles the deletion of rows from an array\n   * @param index Index of the row to delete\n   * @param arr The array that holds the rows\n   * @param deleteService The deletion service to be called (It should be an anonymous function)\n   * @param addRowFunc The function (anonymous) that adds a new row to the array\n   * @param cb The function to callback with the response of the deletion service as the input parameter\n   */\n  handleRowDelete = async <T>(\n    index: number,\n    arr: any[],\n    deleteService: (...args) => Promise<T> | Observable<T>,\n    addRowFunc: (...args) => any,\n    cb?: (any) => any\n  ) => {\n    const id = arr[index]?.id;\n    // debugger;\n\n    if (id && deleteService) {\n      const req = deleteService(id);\n      if (typeof req['toPromise'] == 'function')\n        cb ? cb(await req['toPromise']()) : req['toPromise']();\n      else cb ? cb(await req) : null;\n    }\n\n    if (arr.length == 1) {\n      arr.splice(index, 1);\n      addRowFunc();\n    } else if (arr.length > 1) arr.splice(index, 1);\n  };\n\n  /**\n   * To handle the patching of a FormArray\n   * @param arr The array that contains the data\n   * @param addFunc The function that performs addition of single entries\n   * @param formArr The FormArray that will hold the array's data\n   */\n  initPatchFormArray = (\n    arr: any[],\n    addFunc: (i: number, data?: any, formArr?: FormArray) => void,\n    formArr: FormArray\n  ) => {\n    // debugger\n    if (arr?.length) {\n      if (formArr.length) formArr.clear();\n      for (const item of arr) {\n        addFunc(formArr.length, item, formArr);\n      }\n    } else {\n      if (!formArr.length) addFunc(formArr.length, null, formArr);\n    }\n  };\n  private isPromise = (func) => {\n    return typeof func === 'object' && typeof func.then === 'function';\n  };\n  isAsync = (func) => {\n    return (\n      func.constructor.name === 'AsyncFunction' ||\n      (typeof func === 'function' && this.isPromise(func()))\n    );\n  };\n\n  isObservable = <T>(func) => {\n    // return typeof func === 'object' && typeof func.subscribe === 'function';\n    // return typeof func === 'object' && func instanceof Observable;\n    // return typeof func === 'object' && func instanceof Observable<T>;\n    return typeof func === 'object' && isObservable(func);\n    return typeof func === 'object' && typeof func.toPromise === 'function';\n  };\n  promisifyVal = <T>(val: T | Promise<T> | Observable<T>) => {\n    if (this.isAsync(val)) {\n      return Promise.resolve(val as Promise<T>);\n    } else if (this.isObservable(val)) {\n      return Promise.resolve((val as Observable<T>).toPromise());\n    } else {\n      return Promise.resolve(val as T);\n    }\n  };\n\n  /**\n   * @param arr Array of observables to fetch\n   * @returns An array of the responses merged together. It emits the merged responses as they are fetched and closes once alll the responses have been fetched\n   */\n  mergeArrObservables = <T>(arr: { $func: Observable<T[]> }[]) => {\n    return new Observable<T[]>((sub) => {\n      const ret: T[] = [];\n      let responseCount = 0;\n      merge(\n        ...arr.map((x) =>\n          x.$func?.pipe(\n            catchError((e) => {\n              console.error(e);\n              return of([]);\n            }),\n            tap((r) => {\n              responseCount++;\n            })\n          )\n        )\n      ).subscribe((r) => {\n        ret.push(...r);\n        sub.next(ret);\n        if (responseCount == arr.filter((x) => x.$func).length) {\n          // debugger\n          sub.complete();\n        }\n      });\n    });\n  };\n  removeDuplicate<T>(list: T[], keyField = 'code') {\n    if (!list) return null;\n    list = list.filter((x) => x);\n    const ret: T[] = [],\n      duplicateMap: { [x: string]: any } = {};\n    for (const item of list) {\n      if (duplicateMap[item[keyField]]) continue;\n      ret.push(item);\n      duplicateMap[item[keyField]] = item;\n    }\n    return ret;\n  }\n  get genRandomID() {\n    return this.generateUUID();\n    // return Math.round(Math.random() * 1000000000000000);\n  }\n\n  objIsEmpty = (obj, exclusionFields?: string[]) => {\n    if (!obj) return true;\n    for (const key in obj) {\n      if (exclusionFields?.includes(key)) continue;\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        if (obj[key]) return false;\n      }\n    }\n    return true;\n  };\n  dataGen = <T = any>(keys: string[], length = 10) => {\n    const ret: any[] = [];\n    for (let i = 0; i < length; i++) {\n      let t: any = {};\n      for (const key of keys) {\n        t[key] = this.textGen();\n      }\n      ret.push(t);\n    }\n    return ret as T[];\n  };\n  textGen = () => 'random' + Math.round(Math.random() * 1000);\n  trackByCode(index: number, item: any) {\n    return item?.code;\n  }\n  trackByID(index: number, item: any) {\n    return item?.id;\n  }\n  dialogOpener = (comp: any, config: MatDialogConfig, valueCB: (r) => any, noValueCB?: any) =>\n    this.dialogOpenerRef(comp, config)\n      .afterClosed()\n      .subscribe((r) => {\n        if (r != null && r != undefined) {\n          valueCB(r);\n        } else if (noValueCB) {\n          noValueCB();\n        }\n      });\n  dialogOpenerRef = (comp: any, config: MatDialogConfig) => this.dialog.open(comp, config);\n  findLabelByItem = (item, arr: any[], labelField?: string, keyField: string = 'code') => {\n    if (!item) return null;\n    const obj = arr?.find((x) => x[keyField] == item);\n    if (!obj) return item;\n    else return `${item} - ${obj[labelField || 'title'] || obj[labelField || 'description']}`;\n  };\n\n  go = (value: string, extra?: NavigationExtras) => {\n    this.router.navigate([value], extra);\n  };\n  /**\n   * Route to component\n   * @param route Route of path to component\n   * @param extra\n   */\n  goR = (route: string, extra?: NavigationExtras) => {\n    // if (!environment.activatedRoute) debugger;\n    this.router.navigate([route], {\n      relativeTo: HHenvironment.activatedRoute,\n      ...extra,\n    });\n    // debugger;\n  };\n  /**\n   * Route to the redirect component\n   * @param route Absolute path to redirect to\n   * @param config Configuration for the redirection\n   */\n  redirect = (\n    route: string,\n    config?: {\n      /**\n       * Specify if the redirect route is an app route or external route\n       */\n      isExternal?: boolean;\n      /**\n       * Specify if to open in a new tab or current tab\n       */\n      newTab?: boolean;\n    }\n  ) => {\n    // if (!environment.activatedRoute) debugger;\n    const queryParams = { i: (config?.isExternal ? 1 : 0) || 0, r: route };\n    if (config?.newTab) this.openInTab('/redirect', queryParams);\n    else\n      this.router.navigate([`/redirect`], {\n        relativeTo: HHenvironment.activatedRoute,\n        queryParams,\n      });\n    // debugger;\n  };\n  /**\n   * Open route in a new tab\n   * @param route Route path\n   */\n  openInTab(route: string, queryParams?: { [x: string]: string | number }) {\n    // debugger;\n    const _route = route + this.objectToQueryParams(queryParams);\n    HHenvironment.isEmbedMode ? this.goR(route, { queryParams }) : window.open(_route, '_blank');\n  }\n  /**\n   * Converts object to query parameters\n   * @param parameters Query object\n   * @returns\n   */\n  objectToQueryParams(parameters?: Object) {\n    if (!parameters) return '';\n    return (\n      '?' +\n      Object.keys(parameters)\n        .filter((key) => parameters[key]?.toString()?.trim() != null)\n        .map((key) => `${key}=${parameters[key]?.toString()?.trim()}`)\n        .join('&')\n    );\n  }\n  moneyParser = (amount: string | number, currency = HHenvironment.currency) => {\n    if (amount == 'NaN' || amount == undefined || amount == null) return undefined;\n    return this.currencyPipe.transform(amount, currency || ' ');\n  };\n  extractUpload(event: any) {\n    return (event.target.files as File[]) || [];\n  }\n\n  secondsToHourMinSec = (seconds: number) => {\n    if (!seconds) return { secs: null, hours: null, mins: null };\n    const hours = Math.floor(seconds / 3600) || 0,\n      secondsExHours = seconds % 3600 || 0,\n      mins = Math.floor(secondsExHours / 60) || 0,\n      secs = secondsExHours % 60;\n    return { hours, mins, secs };\n  };\n  minutesToDayHourMin = (minutes: number) => {\n    if (!minutes) return { days: null, hours: null, mins: null };\n    const days = Math.floor(minutes / 1440) || 0,\n      miniutesExDays = minutes % 1440 || 0,\n      hours = Math.floor(miniutesExDays / 60) || 0,\n      mins = miniutesExDays % 60 || 0;\n    return { days, hours, mins };\n  };\n  minutesToDayHourMinStr = (minutes: number) => {\n    if (!minutes) return null;\n    const ret = this.minutesToDayHourMin(minutes);\n    return `${ret.days} ${ret.hours}:${ret.mins}`.trim();\n  };\n  minutesToDayHourMinStr2 = (minutes: number) => {\n    if (!minutes) return null;\n    const ret = this.minutesToDayHourMin(minutes);\n    return `${ret.days}days ${ret.hours}hrs ${ret.mins}mins`.trim();\n  };\n  dayHourMinToHourMinutes = (dys: number, hrs: number, mins: number) => {\n    if (!dys && !hrs && !mins) return '';\n    const dysToHrs = (dys || 0) * 24;\n    hrs = (+hrs || 0) + dysToHrs;\n    return (hrs || '00') + ':' + (mins || '00');\n  };\n  disableOrEnableInputs = (controls: AbstractControl[], disable: boolean) => {\n    if (disable) this.disableInputs(controls);\n    else this.enableInputs(controls);\n  };\n  disableInputs = (controls: AbstractControl[]) => {\n    for (const control of controls) {\n      control?.disable({ emitEvent: false });\n    }\n  };\n  enableInputs = (controls: AbstractControl[]) => {\n    for (const control of controls) {\n      control?.enable({ emitEvent: false });\n    }\n  };\n  dayHourMinToMinutes = (dys: number, hrs: number, mins: number) => {\n    if (!dys && !hrs && !mins) return 0;\n    const dysToHrs = (dys || 0) * 24;\n    hrs = (+hrs || 0) + dysToHrs;\n    return (hrs || 0) * 60 + mins;\n  };\n  hourMinToMinutes = (hrs: number, mins: number) => {\n    if (!hrs && !mins) return null;\n    return (hrs || 0) * 60 + mins;\n  };\n  hourMinToMinutes2 = (hrsMins: string) => {\n    const [hrs, mins] = hrsMins?.split(':') || [0, 0];\n    return this.hourMinToMinutes(+hrs, +mins);\n  };\n  notify(message: string, cls: 0 | 1 | 2 | 3 = 1, duration = 10000, title = 'x') {\n    message = typeof message == 'string' ? message : cls == 0 ? 'An error occurred' : '';\n    return this.snackBar.open(message, title, {\n      duration,\n      horizontalPosition: 'right',\n      verticalPosition: 'top',\n      panelClass:\n        cls == 1\n          ? 'text-success'\n          : cls == 2\n          ? 'text-info'\n          : cls == 3\n          ? 'text-warning'\n          : 'text-danger',\n    });\n  }\n\n  scrollToTop = (timeout = 100) =>\n    setTimeout(() => {\n      document.querySelector('.ddd')?.scrollIntoView({ behavior: 'smooth' });\n      // this.uS.scrollToTop();\n    }, timeout);\n\n  /**\n   *\n   * @returns The current date time local that can be used to set the datetime-local input\n   */\n  getLocalDateTimeNow = () => {\n    const dt = new Date().toISOString().split('T');\n    return dt[0] + 'T' + dt[1].split(':').slice(0, 2).join(':');\n  };\n  /** @returns The current date local that can be used to set the date input */\n  localDateNow = () => {\n    return new Date().toISOString().split('T')[0];\n  };\n  dateFormat = (date: any, format = 1) => {\n    if (!date) return null;\n    const d = new Date(date);\n    if (format == 1) {\n      return d.toDateString();\n    } else if (format == 2) {\n      return d.getDate() + ' ' + Config.Months[d.getMonth()];\n    } else if (format == 3) {\n      return d.toDateString() + ', ' + this.timeFormat(d.toLocaleTimeString());\n    } else if (format == 4) {\n      return Config.Months[d.getMonth()] + ' ' + d.getDate();\n    } else {\n      return '';\n    }\n  };\n  toJavaDateString = (isoDateString: string = new Date().toISOString()) => {\n    if (!isoDateString) return null;\n    return `${isoDateString.slice(0, 19)}`;\n    return `${isoDateString.slice(0, 10)} ${isoDateString.slice(11, 19)}`;\n  };\n  timeFormat = (time?: any) => {\n    const timeArr: any[] = time.split(' ');\n    timeArr[0] = timeArr[0].split(':').splice(0, 2).join(':');\n    return timeArr.join(' ');\n  };\n  /**\n   * Fri Feb 03 2023, 23:59\n   * @param timestamp\n   * @returns\n   */\n  fullDateTime = (timestamp: string | number) => {\n    // debugger\n    return this.dateFormat(timestamp, 3);\n  };\n  /**\n   *\n   * @param timestamp\n   * @returns\n   */\n  fullDateTimeLean = (timestamp: string | number) => {\n    return this.customDatePipe.transform2(timestamp as any, 'dd/MM/yyyy hh:mm a');\n  };\n  dateFormatterUX = (date: any) => {\n    if (!date) return undefined;\n    return this.customDatePipe.transform(date, false);\n  };\n  dateFormatter = (date: any) => {\n    return this.dateFormat(date, 1);\n  };\n  dateTimeFormatter = (date: any) => {\n    return this.customDatePipe.transform(date, true);\n  };\n  daysFormatter = (days: number) => {\n    if (!days) {\n      return '-';\n    }\n    let yr: number,\n      mt: number,\n      dy: number,\n      ret: string,\n      _yr = 365,\n      _mt = 30;\n    if (days > _yr) {\n      yr = Math.floor(days / _yr);\n    }\n    if (days > _mt) {\n      mt = Math.floor((days % _yr) / _mt);\n    }\n    dy = (days % _yr) % _mt;\n    ret = `${yr ? this.pluarlizer(yr, 'yr') : ''} ${\n      mt ? this.pluarlizer(mt, 'mth') : ''\n    } ${this.pluarlizer(dy, 'dy')}`;\n    return ret;\n  };\n  monthsFormatter = (months: number) => {\n    if (!months) {\n      return '-';\n    }\n    let yr: number,\n      mt: number,\n      ret: string,\n      _yr = 12;\n    if (months > _yr) {\n      yr = Math.floor(months / _yr);\n    }\n    mt = months % _yr;\n    ret = `${yr ? this.pluarlizer(yr, 'yr') : ''} ${mt ? this.pluarlizer(mt, 'mth') : ''}`;\n    return ret;\n  };\n  pluarlizer = (val: number, txt: string, plural?: string) => {\n    plural = plural || txt + 's';\n    return val + (val == 1 ? txt : plural);\n  };\n  decimalToPercentage = (dec: number) => {\n    return dec * 100 + '%';\n  };\n  logForm = (form) => {\n    console.log('FORM', form, 'VALUES', form.value as any);\n  };\n\n  toCSV(data: any[], headerNames: string[], filename: string) {\n    const replacer = (key, value) => (value === null ? '' : value); // specify how you want to handle null values here\n\n    let csv = data.map((row) =>\n      headerNames.map((fieldName) => JSON.stringify(row[fieldName], replacer)).join(',')\n    );\n    csv.unshift(headerNames.join(','));\n    let csvArray = csv.join('\\r\\n');\n\n    var blob = new Blob([csvArray], { type: 'text/csv' });\n    saveAs(blob, filename + '.csv');\n  }\n\n  isPictureFormat(fileName: string) {\n    if (!fileName) return false;\n    const PICTURE_FORMATS = ['.jpg', '.jpeg', '.png', '.gif'];\n    return PICTURE_FORMATS.some((format) => fileName.endsWith(format));\n  }\n  objectToArray<T>(obj: any) {\n    const ret = [];\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        ret.push(obj[key]);\n      }\n    }\n    return ret as T[];\n  }\n  onlyUnique = <T>(value: T, index: number, self: T[]) => {\n    return self.indexOf(value) === index;\n  };\n\n  /**\n   * Delete null or undefined fields from an object\n   * @param obj Object to delete from\n   * @returns\n   */\n  deleteNull = <T>(obj: T) => {\n    for (const key in obj) {\n      if (typeof obj[key] == 'object' && obj != null) obj[key] = this.deleteNull(obj[key]);\n      if (obj[key] === null || obj[key] === undefined || obj[key] === '') delete obj[key];\n    }\n    if (!obj || !Object.keys(obj).length) return null;\n    else return obj;\n  };\n  /**\n   * Convert an object into textshowing the field and values\n   * @param obj\n   * @returns\n   */\n  objectToText = (obj) => {\n    return Object.entries(this.deleteNull(cloneDeep(obj)))\n      .map((r) => r[0] + ' ' + r[1])\n      .join(' / ');\n  };\n  /**\n   * Download file from link\n   * @param url Link to download file\n   * @param filename Name of file including extension\n   */\n  async downloadFromLink(url: string, filename: string) {\n    console.log('download link', url);\n    // debugger\n    let downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.target = '_blank';\n    downloadLink.setAttribute('download', filename);\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n  }\n\n  exportHTMLToPDF(\n    content: HTMLElement,\n    fileName: string,\n    config: {\n      width?: number;\n      height?: number;\n      orientation?: 'p' | 'portrait' | 'l' | 'landscape';\n    }\n  ) {\n    return html2canvas(content).then(async (canvas) => {\n      let fileWidth = config?.width;\n      let fileHeight = config?.height || (canvas.height * fileWidth) / canvas.width;\n      // fileHeight = canvas.height\n      // fileWidth = canvas.width\n      // debugger\n      console.log(canvas.width, canvas.height, [fileWidth, fileHeight]);\n      const FILEURI = canvas.toDataURL('image/png', 1);\n      let PDF = new jsPDF(config?.orientation || 'p', 'px', [fileWidth, fileHeight], true);\n      let position = 0;\n      PDF.addImage(FILEURI, 'PNG', 0, position, fileWidth, fileHeight);\n      return await PDF.save(fileName + '.pdf', {\n        returnPromise: true,\n      });\n    });\n  }\n\n  async exportHTMLsToPDF(\n    contents: QueryList<ElementRef<HTMLDivElement>>,\n    fileName: string,\n    config: {\n      width?: number;\n      height?: number;\n      orientation?: 'p' | 'portrait' | 'l' | 'landscape';\n    }\n  ) {\n    if (!contents) return;\n\n    let PDF = new jsPDF(config?.orientation || 'p', 'px');\n    let position = 0;\n    await Promise.all(\n      contents.map((el, i) => {\n        const content = el.nativeElement;\n        return html2canvas(content).then(async (canvas) => {\n          let fileWidth = config?.width;\n          let fileHeight = config?.height || (canvas.height * fileWidth) / canvas.width;\n          console.log(canvas.width, canvas.height, [fileWidth, fileHeight]);\n          const FILEURI = canvas.toDataURL('image/png', 1);\n          PDF.addPage();\n          PDF.addImage(FILEURI, 'PNG', 0, position, fileWidth, fileHeight);\n        });\n      })\n    );\n    return await PDF.save(fileName + '.pdf', {\n      returnPromise: true,\n    });\n  }\n\n  arrayToCSV(data: any[], filename: string, headerMap: TableCol[]) {\n    const csv = Papa.unparse(data, {\n      header: false,\n      columns: headerMap?.map((x) => x.f?.toString()),\n    });\n\n    this.downloader(\n      headerMap.map((fieldName) => fieldName.t).join(',') + `\\r\\n` + csv,\n      filename?.endsWith('.csv') ? filename : filename + '.csv'\n    );\n  }\n  noAccessNotify() {\n    this.notify(`Sorry, you don't have access to the module`, 0);\n  }\n  addDaysToDate(days: number, date: Date | string | number) {\n    if (!date) return undefined;\n    return new Date(new Date(date).getTime() + Config.TimeStampDay * +days)\n      .toISOString()\n      .split('T')[0];\n  }\n  validatePhonenumber(control: FormControl<string>): CustomValidationError {\n    return control.value?.startsWith('0')\n      ? /^\\d+$/.test(control?.value)\n        ? null\n        : { custom: `Telephone number must be in digits` }\n      : { custom: `Telephone number must start with 0 and 11 digits` };\n  }\n  get genPhoneNumber() {\n    return (\n      '0' +\n      new Array(10)\n        .fill(1)\n        .map((x) => Math.round(Math.random() * 9))\n        .join('')\n    );\n  }\n  generateUUID() {\n    let d = new Date().getTime();\n    let d2 =\n      (typeof performance !== 'undefined' && performance.now && performance.now() * 1000) || 0; //Time in microseconds since page-load or 0 if unsupported\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      let r = Math.random() * 16; //random number between 0 and 16\n      if (d > 0) {\n        //Use timestamp until depleted\n        r = (d + r) % 16 | 0;\n        d = Math.floor(d / 16);\n      } else {\n        //Use microseconds since page-load if supported\n        r = (d2 + r) % 16 | 0;\n        d2 = Math.floor(d2 / 16);\n      }\n      return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n  }\n\n  onRouteChange = (\n    route: ActivatedRoute,\n    router: Router,\n    onRouteChangeCB: (routeDataParams: any) => any\n  ) =>\n    router.events\n      .pipe(\n        tap((event) => {\n          if (event instanceof NavigationStart) {\n            HHenvironment.loading = true;\n          } else if (event instanceof NavigationCancel) {\n            HHenvironment.loading = false;\n          }\n        }),\n        filter((event) => event instanceof NavigationEnd),\n        tap((event) => {\n          HHenvironment.loading = false;\n        }),\n        map(() => route),\n        map((route) => {\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          // debugger\n          HHenvironment.activatedRoute = route;\n          return route;\n        }),\n        filter((route) => route.outlet === 'primary'),\n        mergeMap((route) => route.data)\n      )\n      .subscribe((params) => {\n        onRouteChangeCB(params);\n      });\n  confirm = this.confirmDialogService.confirm;\n  track = this.mixPanelService.track;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UtilityService } from './utility.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n  private _cache: { [x: string]: any } = {};\n\n  constructor(public uS: UtilityService) {}\n\n  get cache() {\n    return this._cache;\n  }\n\n  has = (key: string) => !!this._cache[key];\n\n  getItem = <T>(key: string) => this._cache[key] as T;\n\n  setItem<T>(key: string, data: T) {\n    this._cache[key] = data;\n    // return this._cache;\n  }\n\n  getAndSet<T>(key: string, newValue?: T | Promise<T> | Observable<T>) {\n    return new Observable<T>((next) => {\n      next.next(this.getItem(key));\n      if (newValue) {\n        this.uS.promisifyVal(newValue).then(async (res) => {\n          this.setItem(key, res);\n          next.next(res);\n          next.complete();\n        });\n      } else next.complete();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HHenvironment } from '../../environments/environment';\nimport { EncryptorService } from './encryptor.service';\n\n/**\n * Storage service\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n  /**\n   * Specify whether it is a production environment\n   */\n  get isProduction() {\n    return HHenvironment.production;\n  }\n\n  /**\n   * name of local storage location\n   */\n  get storageKey() {\n    return HHenvironment.storageKey;\n  }\n\n  constructor(protected eS: EncryptorService) {}\n\n  /**\n   * Encrypts an item\n   * @param data Item\n   * @returns Encrypted Object\n   */\n  encrypt = this.eS.encryptItem;\n\n  /**\n   * Decrypts an encrypted item\n   * @param data Encrypted string\n   * @returns Decrypted Object\n   */\n  decrypt = this.eS.decryptItem;\n\n  /**\n   * Saves an item to the app storage\n   * @param key Name of item\n   * @param data Item\n   * @returns Item\n   */\n  saveItem = <T>(key: string, data: T) => {\n    try {\n      window[this.storageKey].setItem(\n        key,\n        !(data == null || data == undefined)\n          ? this.isProduction\n            ? this.encrypt(data)\n            : JSON.stringify(data)\n          : ''\n      );\n      return data;\n    } catch (error) {\n      if (error.name == 'QuotaExceededError') {\n        this.clear();\n        return this.saveItem(key, data);\n      } else {\n        return null;\n      }\n    }\n  };\n\n  /**\n   * Saves an item to the app storage asynchronously\n   * @param key Name of item\n   * @param data Item\n   * @returns Item\n   */\n  saveItemA = <T>(key: string, data: T) =>\n    new Promise<T>((resolve) => {\n      resolve(this.saveItem(key, data));\n    });\n\n  /**\n   * Get an item from the app storage\n   * @param key name of item\n   * @param shouldThrow Whether to throw an error if it is not found\n   * @returns Item\n   */\n  getItem = <T = any>(key: string, shouldThrow = false) => {\n    if (!key) return null;\n    const encryptedRes = window[this.storageKey].getItem(key);\n    try {\n      return this.isProduction\n        ? encryptedRes\n          ? <T>this.decrypt(encryptedRes)\n          : null\n        : <T>JSON.parse(encryptedRes);\n    } catch (e) {\n      console.error(e);\n      this.saveItem('_temp' + key, encryptedRes);\n      this.removeItem(key);\n      if (shouldThrow) {\n        throw new Error('Item not found');\n      } else {\n        return null;\n      }\n    }\n  };\n\n  /**\n   * Get an item from the app storage asynchronously\n   * @param key name of item\n   * @param shouldThrow  Whether to throw an error if it is not found\n   * @returns item\n   */\n  getItemA = <T = any>(key: string, shouldThrow = false) => {\n    return new Promise<T>((resolve, reject) => {\n      try {\n        resolve(this.getItem(key, shouldThrow));\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  /**\n   * Remove and item from the app storage\n   * @param key name of item\n   * @returns\n   */\n  removeItem = (key: string) => {\n    try {\n      window[this.storageKey].removeItem(key);\n    } catch (error) {}\n  };\n\n  /**\n   * Clear the app storage\n   * @returns\n   */\n  clear = () => {\n    return window[this.storageKey].clear();\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { StorageService } from './storage.service';\nimport { UtilityService } from './utility.service';\nimport { CacheService } from './cache.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalCacheService extends CacheService {\n  private readonly cacheKey = 'cacheKey';\n  private readonly cacheCreatedDateKey = 'cacheCreatedDateKey';\n  private readonly validityDays = 7;\n  private readonly oneDayTimestamp = 86400000;\n  constructor(public sS: StorageService, public override uS: UtilityService) {\n    super(uS);\n    try {\n      const createdDate: number = sS.getItem(this.cacheCreatedDateKey);\n      if (!createdDate) this.sS.saveItem(this.cacheCreatedDateKey, Date.now());\n      else if (\n        createdDate + this.validityDays * this.oneDayTimestamp <=\n        Date.now()\n      ) {\n        this.sS.saveItem(this.cacheCreatedDateKey, Date.now());\n        this.sS.removeItem(this.cacheKey);\n      }\n      sS.getItemA(this.cacheKey).then((r) => {\n        try {\n          for (const key in r) {\n            if (Object.prototype.hasOwnProperty.call(r, key)) {\n              this.setItem(key, r[key]);\n            }\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n      this.sS.removeItem(this.cacheKey);\n    }\n  }\n  saveToLocal() {\n    // console.log('saving to cache', JSON.stringify(super.cache));\n    this.sS.saveItemA(this.cacheKey, super.cache);\n  }\n  override setItem<T>(key: string, data: T) {\n    super.setItem(key, data);\n    this.saveToLocal();\n  }\n\n  override getAndSet<T>(key: string, addFunc?: T | Promise<T> | Observable<T>) {\n    // debugger;\n    return super\n      .getAndSet<T>(key, addFunc)\n      .pipe(tap((r) => this.saveToLocal()));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EncryptorService } from './encryptor.service';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpEventType,\n  HttpHeaders,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, retry, tap } from 'rxjs/operators';\nimport { CacheService } from './cache.service';\nimport { LocalCacheService } from './local-cache.service';\nimport { HHenvironment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  protected get baseURL() {\n    return HHenvironment.apiBaseUrl;\n  }\n  private showRoutes = 0;\n  private get headers() {\n    return {\n      'Content-Type': 'application/json',\n    };\n  }\n  private get fileHeaders() {\n    return {\n      enctype: 'multipart/form-data',\n    };\n  }\n  private retryCount = 0;\n\n  constructor(\n    public eS: EncryptorService,\n    public http: HttpClient,\n    public cacheS: CacheService,\n    public lCacheS: LocalCacheService\n  ) {}\n\n  /**\n   * Encrypts an item\n   * @param data Item\n   * @returns Encrypted Object\n   */\n  encrypt = (obj: any) => {\n    if (!HHenvironment.encryptAPIRequests) return obj;\n    const ret = {\n      data: this.eS.encryptItem(obj),\n    };\n    console.log(ret);\n    return ret;\n  };\n\n  /**\n   * Decrypts an encrypted item\n   * @param data Encrypted string\n   * @returns Decrypted Object\n   */\n  decrypt = (obj: { data: string; status: 'success' | 'error' }) => {\n    if (!HHenvironment.encryptAPIRequests) return obj;\n    if (typeof obj?.data == 'string')\n      if (obj.status == 'success') return this.eS.decryptItem(obj?.data);\n      else throw this.eS.decryptItem(obj?.data);\n    else return obj;\n  };\n\n  private logRoutes(method: 'get' | 'post' | 'put' | 'delete', route, ...extras) {\n    if (this.showRoutes) {\n      console.log(method, route, ...extras);\n    }\n  }\n  private handleRequestError = (err: HttpErrorResponse) => {\n    // debugger;\n    const error = err.error.data\n      ? this.eS.decryptItem(err.error.data)\n      : { message: err.statusText };\n    return throwError(() => error?.message);\n  };\n\n  //#region PATCH\n  patch<T = any>(route: string, body?, extras?: IExtras): Observable<Resp<T>> {\n    this.logRoutes('post', route, body);\n    console.log(body);\n    return this.http\n      .patch(\n        encodeURI(this.baseURL + route),\n        !HHenvironment.encryptAPIRequests || extras?.dontEncrypt ? body : this.encrypt(body),\n        {\n          headers: new HttpHeaders(this.headers),\n          responseType: 'json',\n          ...extras?.options,\n        }\n      )\n      .pipe(\n        map((r: any) => (HHenvironment.encryptAPIRequests ? this.decrypt(r) : r)),\n        catchError(this.handleRequestError)\n      ) as Observable<any>;\n  }\n  patchFile<T = any>(route: string, body: FormData) {\n    return this.patch<T>(route, body, {\n      options: {\n        headers: new HttpHeaders(this.fileHeaders),\n        responseType: 'json',\n      },\n      dontEncrypt: true,\n    });\n  }\n  //#endregion\n\n  //#region POST\n  post<T = any>(route: string, body?, extras?: IExtras): Observable<Resp<T>> {\n    this.logRoutes('post', route, body);\n    console.log(body);\n    return this.http\n      .post(\n        encodeURI(this.baseURL + route),\n        !HHenvironment.encryptAPIRequests || extras?.dontEncrypt ? body : this.encrypt(body),\n        {\n          headers: new HttpHeaders(this.headers),\n          responseType: 'json',\n          ...extras?.options,\n        }\n      )\n      .pipe(\n        map((r: any) => (HHenvironment.encryptAPIRequests ? this.decrypt(r) : r)),\n        catchError(this.handleRequestError)\n      ) as Observable<any>;\n  }\n  postWithProgress<T = any>(route: string, body?: { [x: string]: File | any }) {\n    return new Observable<{ body?: T; progress?: number; uploaded?: boolean }>((sub) => {\n      const fd = new FormData();\n      this.logRoutes('post', route, body);\n\n      Object.keys(body).forEach((key) => fd.append(key, body[key]));\n      this.http\n        .post(encodeURI(this.baseURL + route), fd, {\n          headers: new HttpHeaders(this.fileHeaders),\n          reportProgress: true,\n          observe: 'events',\n        })\n        .subscribe({\n          next: (event) => {\n            // debugger\n            if (event.type === HttpEventType.UploadProgress)\n              sub.next({\n                progress: (100 * event.loaded) / event.total,\n                uploaded: event.loaded == event.total,\n              });\n            else if (event.type === HttpEventType.Response) {\n              // debugger\n              sub.next({\n                body: this.decrypt(event.body as any),\n                uploaded: true,\n              });\n            }\n          },\n          error: (error: HttpErrorResponse) => {\n            sub.error(error?.error?.message || error?.statusText);\n            sub.complete();\n          },\n        });\n    });\n  }\n\n  postFile<T = any>(route: string, body: FormData) {\n    return this.post<T>(route, body, {\n      options: {\n        headers: new HttpHeaders(this.fileHeaders),\n        responseType: 'json',\n      },\n      dontEncrypt: true,\n    });\n  }\n  postString(route: string, body?) {\n    return this.post<string>(route, body, {\n      options: {\n        headers: new HttpHeaders({\n          'Content-Type': 'text/plain',\n        }),\n        responseType: 'text',\n      },\n    });\n  }\n  //#endregion\n\n  //#region GET\n  get = <T = any>(route: string, parameters?: Object, extras?: IExtras): Observable<Resp<T>> => {\n    this.logRoutes('get', route, parameters);\n    return new Observable<Resp<T>>((res) => {\n      const query = route + this.getRequestParse(parameters);\n      // if (this.cacheS.has(query)) {\n      //   res.next(this.cacheS.getItem<T>(route));\n      // }\n      this.http\n        .get(this.baseURL + query, {\n          headers: new HttpHeaders(this.headers),\n          responseType: 'json',\n          ...extras?.options,\n        })\n        .pipe(\n          retry(this.retryCount),\n          map((r: any) => (extras?.dontDecryptResponse ? r : this.decrypt(r))),\n          tap((x) => (this.showRoutes ? console.log(x) : null)),\n          catchError(this.handleRequestError)\n        )\n        .toPromise()\n        .then((r) => {\n          res.next(r);\n          this.cacheS.setItem(query, r);\n          res.complete();\n        })\n        .catch((err) => res.error(err));\n    });\n  };\n\n  getText = <T = string>(route: string, parameters?: Object) =>\n    this.get<T>(route, parameters, {\n      options: {\n        headers: new HttpHeaders(this.headers),\n        responseType: 'text',\n      },\n    });\n  getFile = <T = string>(route: string, parameters?: Object) =>\n    this.get<T>(route, parameters, {\n      options: {\n        headers: new HttpHeaders(this.headers),\n        responseType: 'arrayBuffer',\n      },\n    });\n  getWithBody = <T = any>(route: string, body?: any, extras?: IExtras) => {\n    this.logRoutes('get', route);\n    // debugger\n    const req = new HttpRequest(\n      'GET',\n      this.baseURL + route,\n      HHenvironment.encryptAPIRequests ? this.encrypt(body) : body,\n      extras?.options || {\n        headers: new HttpHeaders(this.headers),\n        responseType: 'json',\n      }\n    );\n    return this.http.request<T>(req).pipe(\n      map((r: any) => (HHenvironment.encryptAPIRequests ? this.decrypt(r) : r)),\n      catchError(this.handleRequestError)\n    ) as Observable<Resp<T>>;\n  };\n\n  getFromlocal = <T = any>(route: string, parameters?: Object, options?: any) => {\n    return new Observable<Resp<T>>((res) => {\n      const query = route + this.getRequestParse(parameters);\n      if (this.lCacheS.has(query)) {\n        res.next(this.lCacheS.getItem(query));\n        res.complete();\n      } else\n        this.get(query, null, options)\n          .toPromise()\n          .then((r) => {\n            // if (!this.cS.has(route))\n            res.next(r);\n            this.lCacheS.setItem(query, r);\n            res.complete();\n          });\n    });\n  };\n  getWithLocalCache = <T = any>(route: string, parameters?: Object, options?: any) => {\n    return new Observable<Resp<T>>((res) => {\n      const query = route + this.getRequestParse(parameters);\n      if (this.lCacheS.has(query)) {\n        res.next(this.lCacheS.getItem(query));\n      }\n      this.get(query, null, options)\n        .toPromise()\n        .then((r) => {\n          // if (!this.cS.has(route))\n          res.next(r);\n          this.lCacheS.setItem(query, r);\n          res.complete();\n        })\n        .catch((e) => {\n          res.error(e);\n          res.complete();\n        });\n    });\n  };\n  getRequestParse(parameters?: Object) {\n    if (!parameters) return '';\n    return (\n      '?' +\n      Object.keys(parameters)\n        .filter((key) => parameters[key]?.toString()?.trim() != null)\n        .map((key) => `${key}=${parameters[key]?.toString()?.trim()}`)\n        .join('&')\n    );\n  }\n  getAll = <T = any>(\n    route: string,\n    query: { limit: number; [x: string]: any },\n    dataFieldName: string,\n    extras?: IExtras\n  ) => {\n    return new Observable<T[]>((sub) => {\n      let data: T[] = [];\n      // debugger;\n      const fetchdata = (page: number) =>\n        this.get<{\n          [x: string]: {\n            data: T[];\n            total: number;\n          };\n        }>(route, { ...query, page }).subscribe((r) => {\n          // debugger;\n          data = data.concat(r[dataFieldName]?.data);\n          sub.next(data);\n          // const d1 = data?.length;\n          // const d2 = !!data?.length;\n          // const d3 = r[dataFieldName];\n          // const d4 = r[dataFieldName]?.total;\n          // const d5 = data?.length <= r[dataFieldName]?.total;\n          // const d6 = !!data?.length && data?.length <= r[dataFieldName]?.total;\n          // debugger;\n          if (!!r[dataFieldName]?.data?.length && data?.length < r[dataFieldName]?.total)\n            fetchdata(++page);\n          else sub.complete();\n        });\n      fetchdata(1);\n    });\n  };\n  //#endregion\n\n  //#region PUT\n  put<T = any>(route: string, body?, extras?: IExtras): Observable<Resp<T>> {\n    this.logRoutes('put', route, body);\n    let query = route + '',\n      nbody = body;\n    if (extras?.requestType == 'queryParams') {\n      query += this.getRequestParse(body);\n      nbody = null;\n    }\n    console.log(body);\n    return this.http\n      .put(this.baseURL + query, extras?.dontEncrypt ? body : this.encrypt(nbody), {\n        headers: new HttpHeaders(this.headers),\n        responseType: 'json',\n        ...extras?.options,\n      })\n      .pipe(\n        map((r: any) => this.decrypt(r)),\n        catchError(this.handleRequestError)\n      ) as Observable<any>;\n  }\n\n  putFile<T = any>(route: string, body: FormData) {\n    return this.put<T>(route, body, {\n      options: {\n        headers: new HttpHeaders(this.fileHeaders),\n        responseType: 'json',\n      },\n      dontEncrypt: true,\n    });\n  }\n  //#endregion\n\n  //#region DELETE\n  delete = <T = any>(route: string, options?) => {\n    this.logRoutes('delete', route);\n    return this.http\n      .delete<T>(\n        this.baseURL + route,\n        options || {\n          headers: new HttpHeaders(this.headers),\n          responseType: 'json',\n        }\n      )\n      .pipe(\n        map((r: any) => this.decrypt(r)),\n        catchError(this.handleRequestError)\n      ) as Observable<any>;\n  };\n  deleteWithBody = <T = any>(route: string, body?: any, options?) => {\n    this.logRoutes('delete', route);\n    const req = new HttpRequest(\n      'DELETE',\n      this.baseURL + route,\n      HHenvironment.encryptAPIRequests ? this.encrypt(body) : body,\n      options || {\n        headers: new HttpHeaders(this.headers),\n        responseType: 'json',\n      }\n    );\n    return this.http.request<T>(req).pipe(\n      map((r: any) => this.decrypt(r)),\n      catchError(this.handleRequestError)\n    ) as Observable<any>;\n  };\n\n  deleteText = (route: string) =>\n    this.delete<string>(route, {\n      headers: new HttpHeaders(this.headers),\n      responseType: 'text',\n    });\n  //#endregion\n}\n\ninterface IExtras {\n  noFormat?: boolean;\n  dontEncrypt?: boolean;\n  dontDecryptResponse?: boolean;\n  options?: any;\n  requestType?: 'queryParams';\n}\n\nexport interface IResponse {\n  message: string;\n  result: any;\n  status: 'success' | 'error' | 'failure';\n  statusCode: 'SM000' | 'SM001' | 'SM002' | 'SM003';\n}\n\ntype Resp<T> = T & { status: 'success' | 'error'; data: T; message: string };\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject } from 'rxjs';\nimport { MenuItem } from '../shared/models/IMenuItem';\nimport { ApiService } from './api.service';\nimport { StorageService } from './storage.service';\nimport { HHenvironment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n  topMenu = HHenvironment.menus;\n  protected _currentTopMenu: MenuItem;\n  protected _pageName: string;\n  public get currentTopMenu(): MenuItem {\n    return this._currentTopMenu;\n  }\n  public set currentTopMenu(value: MenuItem) {\n    this._currentTopMenu = value;\n    // debugger\n  }\n  setFullscreenMode = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    public titleS: Title,\n    public apiS: ApiService,\n    public sS: StorageService\n  ) {}\n \n\n  setDefaultClass() {}\n  //#region pagename\n  get pageName() {\n    return this._pageName;\n  }\n  set pageName(value: string) {\n    this._pageName = value;\n    this.addTitle(this._pageName);\n  }\n  addTitle = (title) => {\n    HHenvironment.pageTitle = title;\n    this.titleS.setTitle(\n      (title ? title + ' | ' : '') +\n        HHenvironment.appName +\n        ' | ' +\n        HHenvironment.name\n    );\n  };\n  //#endregion\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HHenvironment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Config } from '../config/index.config';\n\n@Injectable()\nexport class AuthenticationInterceptorService implements HttpInterceptor {\n  constructor(public router: Router) {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n\n    if (HHenvironment.token && req.url.startsWith(HHenvironment.apiBaseUrl)) {\n      const reqAuth = req.clone({\n        url: req.url,\n        headers: req.headers\n          .set('Authorization', `Bearer ${HHenvironment?.token}`) \n      });\n      return next.handle(reqAuth).pipe(\n        tap({\n          next: (event: HttpEvent<any>) => {},\n          error: (e: HttpEvent<any>) => {\n            // debugger\n            if (e['status'] == 401 && location.pathname != '/auth/login' ) {\n              debugger;\n              console.error(`About to be loggeed out due to 401 `, e, req);\n              localStorage.clear();\n              sessionStorage.clear();\n              location.href = `/${Config.authBaseRoute}/login`;\n            }\n          },\n        })\n      );\n    } else return next.handle(req);\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService extends ErrorHandler {\n  constructor() {\n    super();\n  }\n\n  override handleError(error: any) {\n    // debugger\n    if (/Loading chunk [\\d]+ failed/.test(error?.message))\n      window.location.reload();\n    if (/NG0100: ExpressionChangedAfterItHasBeenCheckedError/.test(error?.message))\n      return;\n    else super.handleError(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HHenvironment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MultiTenantInterceptorService {\n  activeSubdomainSite = 'localhost';\n  whiteList = ['localhost', 'payer', 'www','orange-dev'];\n\n  constructor(public router: Router) {}\n\n  getActiveSite = () => {\n    if (HHenvironment.activeSubdomainSite) {\n      this.activeSubdomainSite = HHenvironment.activeSubdomainSite;\n    }\n    let url = location.hostname;\n    url = url.split('www.').filter((x) => x)[0];\n    url = url.split('iras.ng')[0];\n    url = url.split('.')[0];\n    if (url?.length > 0) this.activeSubdomainSite = url;\n    else this.activeSubdomainSite = null;\n    this.activeSubdomainSite = this.activeSubdomainSite?.toLowerCase();\n    return this.activeSubdomainSite;\n  };\n\n  // intercept = () => {\n  //   this.getActiveSite();\n  // };\n\n  isClientAdminSubdomain = () => {\n    this.getActiveSite();\n    return this.activeSubdomainSite\n      ? !this.whiteList.includes(this.activeSubdomainSite)\n      : false;\n  };\n  canViewGeneralSite = () => {\n    // debugger;\n    this.getActiveSite();\n    if (\n      !this.activeSubdomainSite ||\n      this.whiteList.includes(this.activeSubdomainSite)\n    )\n      return true;\n    else {\n      this.router.navigateByUrl('/dashboard');\n      return false;\n    }\n  };\n}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HHenvironment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators'; \n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestLoggerInterceptorService implements HttpInterceptor {\n  constructor() {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    HHenvironment.pageLoader.startPl();\n    return next.handle(req).pipe(\n      tap(\n        (event: HttpEvent<any>) => {\n          if (\n            event instanceof HttpResponse ||\n            event instanceof HttpErrorResponse\n          ) {\n            HHenvironment.pageLoader.stopPl();\n          }\n        },\n        (err) => {\n          HHenvironment.pageLoader.stopPl();\n        }\n      )\n    );\n  }\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable, timeout } from 'rxjs';\nimport { HHenvironment } from '../../environments/environment'; \nimport { Config } from '../config/index.config';\n\nexport const DEFAULT_TIMEOUT = new InjectionToken<number>('defaultTimeout');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestTimeoutInterceptorService {\n  constructor(@Inject(DEFAULT_TIMEOUT) protected defaultTimeout: number) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // if (+req.headers.get('timeout') || environment.requestTimeout)\n    //   console.log(\n    //     'timeout',\n    //     +req.headers.get('timeout') ,\n    //       environment.requestTimeout ,\n    //       this.defaultTimeout\n    //   );\n    // console.log(\n    //   +req.headers.get('timeout') ,\n    //     environment.requestTimeout ,\n    //     this.defaultTimeout\n    // );\n    const tout =\n      +req.headers.get('timeout') ||\n      HHenvironment.requestTimeout ||\n      this.defaultTimeout;\n    // console.log('timeout period',tout);\n    // return next.handle(req)\n    return next\n      .handle(req)\n      .pipe(timeout(new Date(Config.TimeStampDay * 365 + Date.now())));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SwUpdate, VersionReadyEvent } from '@angular/service-worker';\nimport { filter } from 'rxjs/operators';\nimport { UtilityService } from '../utility.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PromptUpdateService {\n  constructor(swUpdate: SwUpdate, public uS: UtilityService) {\n    swUpdate.versionUpdates\n      .pipe(\n        filter((evt): evt is VersionReadyEvent => evt.type === 'VERSION_READY')\n      )\n      .subscribe((evt) => {\n        this.prompter();\n      });\n  }\n  prompter(reason?: string) {\n    // document.location.reload();\n    return\n    \n  }\n}\n","import { ApplicationRef, Injectable } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { concat, interval } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { PromptUpdateService } from './prompt-update.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckForUpdateService {\n  constructor(\n    public appRef: ApplicationRef,\n    public updates: SwUpdate,\n    public puS: PromptUpdateService\n  ) {\n    this.init();\n  }\n\n  init(itvl?: number, cb?: any) {\n    // Allow the app to stabilize first, before starting\n    // polling for updates with `interval()`.\n    const appIsStable$ = this.appRef.isStable.pipe(\n      first((isStable) => {\n        console.log('checking for stability ', isStable);\n        return isStable === true;\n      })\n    );\n    // const everySixHours$ = interval(itvl ||  1000);\n    const everySixHours$ = interval(itvl || 30 * 60 * 1000);\n    const everySixHoursOnceAppIsStable$ = concat(appIsStable$, everySixHours$);\n\n    everySixHours$.subscribe(async () => {\n      try {\n        console.log('checking update');\n        // alert('checking update');\n        const updateFound = await this.updates.checkForUpdate();\n        if (updateFound) cb ? cb() : this.puS.prompter();\n        else console.log('found no update');\n      } catch (err) {\n        if (this.updates.isEnabled)\n          console.error('Failed to check for updates:', err);\n        else console.log('found no update');\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { UtilityService } from '../utility.service';\nimport { PromptUpdateService } from './prompt-update.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HandleUnrecoverableStateService {\n  constructor(\n    updates: SwUpdate,\n    public uS: UtilityService,\n    public puS: PromptUpdateService\n  ) {\n    updates.unrecoverable.subscribe((event) => {\n      console.log(event.reason);\n      alert(event.reason);\n      this.puS.prompter(\n        'An error occurred that we cannot recover from:\\n' + event.reason\n      );\n      \n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { UtilityService } from '../utility.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogUpdateService {\n  constructor(updates: SwUpdate, public uS: UtilityService) {\n    // console.log('logging');\n\n    updates.versionUpdates.subscribe((evt) => {\n      let message: string;\n      switch (evt.type) {\n        case 'VERSION_DETECTED':\n          message = `Downloading new app version`;\n          console.log(`${message}: ${evt.version.hash}`);\n          // this.uS.notify(message, 2);\n          break;\n        case 'VERSION_READY':\n          message = `New app version ready for use`;\n          console.log(`Current app version: ${evt.currentVersion.hash}`);\n          console.log(`${message}: ${evt.latestVersion.hash}`);\n          // this.uS.notify(message, 1);\n          break;\n        case 'VERSION_INSTALLATION_FAILED':\n          message = `Failed to install app version`;\n          console.log(`${message} '${evt.version.hash}': ${evt.error}`);\n          // this.uS.notify(message, 0);\n          break;\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { UtilityService } from '../utility.service';\nimport { CheckForUpdateService } from './check-for-update.service';\nimport { HandleUnrecoverableStateService } from './handle-unrecoverable-state.service';\nimport { LogUpdateService } from './log-update.service';\nimport { PromptUpdateService } from './prompt-update.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServiceWorkerService {\n  constructor(\n    public puS: PromptUpdateService,\n    public luS: LogUpdateService,\n    public huS: HandleUnrecoverableStateService,\n    public cfuS: CheckForUpdateService,\n    public uS: UtilityService\n  ) {}\n\n  async getUpdates(cb?) {\n    console.log('checking update 1');\n    const appIsStable$ = this.cfuS.appRef.isStable.pipe(\n      first((isStable) => {\n        console.log('checking for stability ', isStable);\n        return isStable === true;\n      })\n    );\n    console.log('checking update 2');\n\n    // appIsStable$.subscribe(async () => {\n      try {\n        console.log('checking update 3');\n        const updateFound = await this.cfuS.updates.checkForUpdate();\n        if (updateFound) this.puS.prompter();\n        // else this.uS.info(`No new versions were found`, 1);\n        if (cb) cb();\n      } catch (err) {\n        // this.uS.info(`Failed to check for updates`, 0);\n        console.error('Failed to check for updates:', err);\n          if (cb) cb();\n      }\n    // });\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { StorageService } from './storage.service';\nimport { HHenvironment } from '../../environments/environment';\ndeclare var Tawk_API: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TawkIoService {\n  private loaded: boolean;\n  private loadSubject: Subject<boolean> = new Subject<boolean>();\n  private renderer: Renderer2;\n\n  constructor(\n    private rendererFactory: RendererFactory2,\n    @Inject(DOCUMENT) private _document: Document,\n    private LocalStorageService: StorageService\n  ) {\n    if (HHenvironment?.tawkIOConfig?.propertyId) {\n      this.renderer = rendererFactory.createRenderer(null, null);\n      this.load();\n    }\n  }\n\n  private load() {\n    if (this.loaded) return;\n\n    const s = this.renderer.createElement('script');\n    s.type = 'text/javascript';\n    s.text =\n      'var Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date(); ' +\n      '(function(){ ' +\n      'var s1=document.createElement(\"script\"),s0=document.getElementsByTagName(\"script\")[0]; ' +\n      's1.async=true; ' +\n      `s1.src='https://embed.tawk.to/${HHenvironment.tawkIOConfig.propertyId}/${HHenvironment.tawkIOConfig.widgetId}'; ` +\n      \"s1.charset='UTF-8'; \" +\n      \"s1.setAttribute('crossorigin','*'); \" +\n      's0.parentNode.insertBefore(s1,s0); ' +\n      '})();';\n    this.renderer.appendChild(this._document.body, s);\n    Tawk_API.onLoad = this.loadedEvent.bind(this);\n  }\n\n  private loadedEvent() {\n    this.loaded = true;\n    this.loadSubject.next(this.loaded);\n  }\n\n  public UpdateTawkUser(user: any) {\n    this.loadedWrapper(() => {\n      this.updateAtrributes(user);\n    });\n  }\n\n  private loadedWrapper(func: any) {\n    if (!this.loaded) {\n      var sub = this.loadSubject.asObservable().subscribe({\n        next: () => {\n          func();\n          sub.unsubscribe();\n        },\n        error: () => {},\n      });\n    } else {\n      func();\n    }\n  }\n\n  public ExpandChatWindow(show: boolean = false) {\n    this.loadedWrapper(() => (show ? Tawk_API.maximize() : Tawk_API.minimize()));\n  }\n\n  public SetChatVisibility(show: boolean = false) {\n    this.loadedWrapper(() => (show ? Tawk_API.showWidget() : Tawk_API.hideWidget()));\n  }\n\n  private updateAtrributes(user: any) {\n    Tawk_API.setAttributes(\n      {\n        name: `${user.firstname} ${user.surname}`,\n        email: user.email,\n        id: user.id,\n      },\n      function (error) {}\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UtilityService } from './utility.service';\nimport { io, Socket } from 'socket.io-client';\nimport { ReplaySubject } from 'rxjs';\nimport { HHenvironment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WebsocketService {\n  readonly sockets = {\n    coreEV:HHenvironment.useWebSocket? new IRSocket():null,\n  };\n  constructor(public uS: UtilityService) {}\n\n  // addSocket(route: string) {\n  //   if (!route) return;\n  //   const ind = this.sockets.findIndex((x) => x.route == route);\n  //   if (ind > -1) {\n  //     this.sockets[ind] = new ETSSocket(route);\n  //   }\n  // }\n}\n\nexport class IRSocket {\n  get id() {\n    return this.socket?.id;\n  }\n  get isConnected() {\n    return this.socket?.connected;\n  }\n  route: string;\n  retryCount: number;\n  maxRetryCount: number = 5;\n  socket: Socket;\n  onConnectionError = new ReplaySubject();\n  onDisconnect = new ReplaySubject();\n  listeners: { [path: string]: ReplaySubject<any> } = {};\n  identifier:string\n  /**\n   *\n   * @param basePath Websocket url as a prefix. Defaults to use the base api to form a websocket URL\n   * @param path Path to the websocket to listen to.\n   */\n  constructor(basePath?: string, path?: string) {\n    this.retryCount = 0;\n    this.route =\n      basePath ||\n      HHenvironment.apiBaseUrl\n        ?.replace('https', 'wss')\n        ?.replace('http', 'ws')\n        .replace('/api/', '/');\n    // if (!this.route.endsWith('/')) this.route += '/';\n    if (this.route.endsWith('/')) this.route;\n    // console.log(this.route);\n    // debugger;\n    this.socket = io(this.route);\n    // this.socket = io();\n    this.socket.on('connect', () => {\n      // console.log(this.socket.connected); // true\n    });\n\n    this.socket.on('connect_error', (e) => {\n      if (this.retryCount < this.maxRetryCount) this.onConnectionError.next(e);\n      else {\n        setTimeout(() => {\n          this.retryCount++;\n          this.socket.connect();\n        }, 700);\n      }\n      // console.log(this.socket.connected); // true\n    });\n    this.addListener(path);\n    this.socket.on('disconnect', (e) => {\n      this.onDisconnect.next(e);\n      // console.log(this.socket.connected); // false\n    });\n  }\n\n  /**\n   *\n   * @param path\n   * @param identifier @defualt environment.user.user.id\n   * @returns\n   */\n  addListener<T = { percentage: number; status: boolean; id: string }>(\n    path: string,\n    identifier :string=this.identifier\n  ) {\n    if (path) {\n      if (!this.listeners[path]) {\n        this.listeners[path] = new ReplaySubject<T>();\n        console.log(path + (identifier ? '-' + identifier : ''));\n        this.socket.on(path + (identifier ? '-' + identifier : ''), (args) => {\n          console.log(args);\n          this.listeners[path].next(args);\n        });\n      }\n      return this.listeners[path] as ReplaySubject<T>;\n    } else return null;\n  }\n  removeListener(path: string) {\n    if (path) {\n      this.socket.off(path);\n      this.listeners[path]?.complete();\n      delete this.listeners[path];\n    }\n  }\n}\n","import { Loader } from './page-loader.class';\n\nexport class ProgressLoader extends Loader {\n  progress?: number;\n  timeAdded?: number;\n  constructor(obj?: ProgressLoader) {\n    super();\n    if (obj) Object.assign(this, obj);\n  }\n}\n\nexport class ProgressLoaders {\n  loaders: ProgressLoader[] = [];\n  constructor() {}\n\n  addLoader(loader?: ProgressLoader) {\n    loader = loader || new ProgressLoader();\n    loader.timeAdded = Date.now();\n    this.loaders.push(loader);\n    return loader;\n  }\n\n  /**\n   * Checks if all the loaders in the loaders array have stopped loaded\n   */\n  get isLoading() {\n    return this.loaders?.some((x) => x.isLoading);\n  }\n  get latestLoaderLoading() {\n    return this.loaders?.find((x) => x.isLoading);\n  }\n  get currentLoaderText(){\n    return this.latestLoaderLoading?.loaderText\n  }\n  resetLoaders() {\n    this.loaders = [];\n  }\n  stopAllLoaders() {\n    this.loaders?.forEach((x) => x.stopAllPls());\n  }\n}\n","import { MatCheckboxChange } from '@angular/material/checkbox';\nimport { ReplaySubject } from 'rxjs';\n\nexport class SelectionData<T> {\n  get selectedItem() {\n    return this.selectedItems[0];\n  }\n  selectedItems: T[] = [];\n  selectedMap: { [id: string]: boolean } = {};\n  sourceData: T[] = [];\n  get count() {\n    return this.selectedItems.length;\n  }\n  constructor(sourceArr: T[]) {\n    Object.assign(this.sourceData, sourceArr);\n  }\n\n  itemChanged(id: string, e: { checked: boolean }) {\n    if (e.checked) this.addSelectedItem(id);\n    else this.removeSelectedItem(id);\n  }\n  addSelectedItem(id: string) {\n    // debugger;\n    if (this.selectedMap[id]) return;\n    const item = this.sourceData?.find((x) => x['id'] == id);\n    if (item) {\n      this.selectedMap[id] = true;\n      this.selectedItems.push(item);\n    }\n  }\n  removeSelectedItem(id: string) {\n    this.selectedMap[id] = false;\n    this.selectedItems = this.selectedItems?.filter((x) => x['id'] != id);\n  }\n  reset() {\n    this.selectedItems = [];\n    this.selectedMap={}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ICodeTitle } from '../../models/index.model';\nimport { IOption, OptionLabelType } from './input.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InputService {\n  readonly defaultValue = {\n    showSeperateLabel: true,\n    showValidationMsg: true,\n  };\n\n  readonly optionLabellerFunctions: {\n    [x: string]: (option) => { label: string; value: string };\n  };\n  constructor() {\n    const labeller = this.labeller;\n    this.optionLabellerFunctions = {\n      bnk: (option: any) =>\n        labeller(\n          option?.accountName +\n            '  |  ' +\n            option?.accountNo +\n            '  |  ' +\n            option?.bankName +\n            '  |  ' +\n            option?.no,\n          null\n        ),\n      ccd: (option: any) => labeller(option?.companyCode, option?.description),\n      cd: (option: any) => labeller(option?.code, option?.description),\n      cdt: (option: any) => labeller(option?.code, option?.description || option?.title),\n      cf: (option: any) => labeller(option?.code, option?.fullName),\n      cmd: (option: any) => labeller(option?.company, option?.description),\n      cn: (option: any) => labeller(option?.code, option?.name),\n      ct: (option: ICodeTitle) => labeller(option?.code, option?.title),\n      gd: (option: any) => labeller(option?.group, option?.description),\n      ha: (option: any) => labeller(option?.hierAgentNo, option?.agentName),\n      id: (option: any) => labeller(option?.id, option?.description),\n      if: (option: any) => labeller(option?.id, option?.fullName),\n      ifl: (option: any) => labeller(option?.userId, `${option?.firstName} ${option?.lastName}`),\n      it: (option: any) => labeller(option?.id, option?.title),\n      md: (option: any) => labeller(option?.mktEventCode, option?.description),\n      pd: (option: any) => labeller(option?.payoutMethod, option?.description),\n      nf: (option: any) => labeller(option?.no, option?.fullName),\n      td: (option: any) => labeller(option?.type, option?.description),\n      ud: (option: any) => labeller(option?.userMenu, option?.description),\n      uf: (option: any) => labeller(option?.userName, option?.fullName),\n      vl: (option: any) => labeller(null, option?.label),\n      vv: (option: any) => labeller(option?.versionNo, option?.versionDate),\n    };\n  }\n  labeller = (field1: string, field2: string) => {\n    // debugger;\n    field1 = field1?.toString()?.trim();\n    field2 = field2?.toString()?.trim();\n    if (field1 != null && field2 != null) return { value: field1, label: field1 + ' - ' + field2 };\n    else return { value: field1, label: field1 || field2 };\n  };\n  optionsFormatter = (\n    options: any[],\n    valueField?: string,\n    formatter?,\n    labelType?: OptionLabelType,\n    labelField?: string,\n    autoPickValueField?: boolean\n  ) => {\n    if (!options?.length) return [];\n    if (formatter)\n      return options.map((option) => ({\n        value: valueField && option ? option[valueField] : option,\n        label: formatter(option),\n      }));\n    if (labelType)\n      return options.map((option) => {\n        const formattedOption = this.optionLabellerFunctions[labelType](option);\n\n        return {\n          value: valueField\n            ? option[valueField]\n            : autoPickValueField\n            ? formattedOption.value\n            : option,\n          label: formattedOption.label,\n        };\n      });\n    if (labelField)\n      return options.map((option) => ({\n        value: valueField ? option[valueField] : option,\n        label: option[labelField],\n      }));\n    return options.map((option) => ({ value: option, label: option }));\n  };\n\n  trackByValue(index, item: IOption) {\n    return item.value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Pipe, PipeTransform } from '@angular/core';\nimport { AbstractControl, FormsModule } from '@angular/forms';\nimport { IOption, OptionLabelType } from './input.component';\nimport { InputService } from './input.service';\nimport { ICodeTitle } from '../../models/index.model';\n\n@Pipe({\n    name: 'filterOptions',\n    standalone: true,\n})\nexport class FilterOptions implements PipeTransform {\n  transform(arr: any[] = [], query: string, field: string = 'label') {\n    query = query?.toLowerCase()?.trim();\n    arr = arr ? arr : [];\n    return [\n      ...arr.filter((x) => x[field].toLowerCase().startsWith(query)),\n      ...(arr\n        .filter((x) => !x[field].toLowerCase().startsWith(query))\n        ?.filter((x) => x[field].toLowerCase().includes(query)) || []),\n    ];\n  }\n}\n\n@Pipe({\n    name: 'optioner',\n    standalone: true\n})\nexport class OptionerPipe implements PipeTransform {\n  transform(\n    options: any[],\n    labelField,\n    idField?,\n    basic?: boolean\n  ): { value: any; label: string }[] {\n    if (options) {\n      if (labelField && idField) {\n        return basic\n          ? options.map((x) => ({\n              label: this.arrToStr(labelField, x),\n              value: x[idField],\n            }))\n          : options.map((x) => ({\n              label: this.arrToStr(labelField, x),\n              value: x,\n            }));\n      } else {\n        return options.map((x) => ({\n          label: x,\n          value: x,\n        }));\n      }\n    } else {\n      return [];\n    }\n  }\n  arrToStr(labelField: string, x) {\n    const fs = labelField.split('|');\n    if (fs.length > 1) {\n      let l = '';\n      fs.forEach((field) => {\n        l += x[field] + ' ';\n      });\n      return l;\n    } else {\n      return x[labelField];\n    }\n  }\n}\n\n@Pipe({\n    name: 'validationMsg',\n    standalone: true,\n})\nexport class ValidationMsg implements PipeTransform {\n  transform(message: string, prefix?: string, suffix?: string): string {\n    return (\n      (prefix ? prefix + ' ' : '') + message + (suffix ? ' ' + suffix : '')\n    );\n  }\n}\n\n@Pipe({\n    name: 'validator',\n    standalone: true,\n})\nexport class Validator implements PipeTransform {\n  transform(validation, control: AbstractControl, update?) {\n    return (\n      control &&\n      control?.hasError(validation?.type) &&\n      (control?.touched || control?.dirty)\n    );\n  }\n}\n@Pipe({\n    name: 'optionLabeller',\n    standalone: true,\n})\nexport class OptionLabeller implements PipeTransform {\n  transform(\n    option: any,\n    formatter?,\n    optionType?: OptionLabelType,\n    labelField?: string\n  ): string {\n    if (formatter) return formatter(option);\n    if (optionType) return this.iS.optionLabellerFunctions[optionType](option).label;\n    if (labelField) return option[labelField];\n    return option;\n  }\n  constructor(public iS: InputService) {}\n}\n@Pipe({\n    name: 'optionsFormatter',\n    standalone: true,\n})\nexport class OptionsFormatter implements PipeTransform {\n  transform(\n    options: any[],\n    valueField?: string,\n    formatter?,\n    optionType?: OptionLabelType,\n    labelField?: string\n  ): IOption[] {\n    return this.iS.optionsFormatter(\n      options,\n      valueField,\n      formatter,\n      optionType,\n      labelField\n    );\n  }\n  constructor(public iS: InputService) {}\n}\n\n@Pipe({\n    name: 'inputClass',\n    standalone: true\n})\nexport class InputClassPipe implements PipeTransform {\n  transform(\n    inpCl: string,\n    valid?: boolean,\n    invalid?: boolean,\n    showValidation?: boolean\n  ) {\n    let cls = inpCl + '  ';\n    if (showValidation) {\n      cls += valid ? ' bordercheck' : invalid ? ' borderuncheck' : '';\n    }\n    return cls;\n  }\n}\n\nconst comps = [\n  FilterOptions,\n  Validator,\n  ValidationMsg,\n  OptionerPipe,\n  OptionLabeller,\n  OptionsFormatter,\n  InputClassPipe,\n];\nconst modules = [FormsModule];\n@NgModule({\n    imports: [CommonModule, ...modules, ...comps],\n    exports: [...comps, ...modules],\n})\nexport class InputPipesModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n  Pipe,\n  PipeTransform,\n  forwardRef,\n} from '@angular/core';\nimport { AbstractControl, FormControl } from '@angular/forms'; \nimport { InputBasicComponent } from '../input.component';\nimport { NgIf, NgFor } from '@angular/common';\nimport { EValidationType, IValidationMessage } from '../../../models/index.model'; \nimport { configValidationMessages } from '../../../../config/validation-messages.config';\n\n@Pipe({\n  name: 'errorMessages',\n  standalone: true,\n})\nexport class ErrorMessagesPipe implements PipeTransform {\n  transform(\n    validations: IValidationMessage[],\n    label: string,\n    maxLength: number,\n    minLength: number,\n    control: FormControl\n  ): string {\n    let msg = validations\n      ?.filter((error) => control?.errors[error.type])\n      ?.map((error) =>\n        this.errMsgPipe.transform(\n          error,\n          label,\n          maxLength,\n          minLength,\n          control?.errors[error.type]\n        )\n      )\n      .join('\\n');\n    // debugger\n    return msg;\n  }\n  constructor(public errMsgPipe: ErrorMessagePipe) {}\n}\n\n@Pipe({\n  name: 'errorMessage',\n  standalone: true,\n})\nexport class ErrorMessagePipe implements PipeTransform {\n  transform(\n    errObj: IValidationMessage,\n    label?: string,\n    maxLength?: number,\n    minLength?: number,\n    controlMessage?: any\n  ): string {\n    let msg =\n      errObj.type == EValidationType.custom\n        ? controlMessage\n        : errObj.message\n        ? errObj.message.startsWith(' ')\n          ? (label || 'Field') + errObj.message\n          : errObj.message\n        : null;\n    msg = msg?.replace('{{maxLength}}', maxLength?.toString());\n    msg = msg?.replace('{{minLength}}', minLength?.toString());\n    return msg;\n  }\n}\n\n@Component({\n  selector: 'app-validation-message',\n  templateUrl: './validation-message.component.html',\n  styleUrls: ['./validation-message.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, ErrorMessagesPipe, ErrorMessagePipe],\n  providers: [ErrorMessagePipe],\n})\nexport class ValidationMessageComponent implements OnInit {\n  validationType: EValidationType;\n  @Input('validationKey') set _validationKey(v: EValidationType) {\n    // debugger;\n    this.validationType = v;\n    this.validations = configValidationMessages[this.validationType];\n  }\n  @Input('control') _control: AbstractControl;\n  @Input() input: InputBasicComponent;\n  @Input('label') _label: string;\n  @Input() minLength: number;\n  @Input() maxLength: number;\n  @Input() customMessage: 'Value is invalid';\n  validations: IValidationMessage[];\n  constructor() {}\n\n  ngOnInit(): void {\n    if (!this.validationType) this._validationKey = EValidationType.normal;\n  }\n  get label() {\n    return this._label || this.input?.label;\n  }\n  get control() {\n    return this._control || this.input?.control;\n  }\n}\n","<div class=\"text-danger\">\n  <ng-container *ngIf=\"control?.errors && (control?.dirty || control?.touched)\">\n    <ng-container *ngFor=\"let error of validations\">\n      <span class=\"me-2\" *ngIf=\"control?.errors[error.type] as controlMessage\"> \n        {{((error|errorMessage:label:maxLength:minLength:controlMessage)||customMessage)}}\n      </span>\n    </ng-container>\n  </ng-container>\n</div>\n","import { Injectable } from '@angular/core';\nimport { SVGIconType } from './svg-icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SvgIconService {\n  icons: { [icon in SVGIconType]: string } = {\n    add: `<svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5 1V9M9 5H1\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    attachment: `<svg width=\"17\" height=\"18\" viewBox=\"0 0 17 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14.3125 9.61605L7.90169 16.0269C7.19842 16.7301 6.24459 17.1252 5.25002 17.1252C4.25546 17.1252 3.30162 16.7301 2.59836 16.0269C1.89509 15.3236 1.5 14.3698 1.5 13.3752C1.5 12.3806 1.89509 11.4268 2.59836 10.7235L11.715 1.60688C11.9472 1.37477 12.2229 1.19067 12.5263 1.06509C12.8296 0.939516 13.1548 0.874923 13.4831 0.875C13.8114 0.875077 14.1365 0.939824 14.4399 1.06554C14.7432 1.19126 15.0187 1.37549 15.2509 1.60771C15.483 1.83993 15.6671 2.1156 15.7926 2.41897C15.9182 2.72234 15.9828 3.04747 15.9827 3.3758C15.9827 3.70413 15.9179 4.02924 15.7922 4.33255C15.6665 4.63586 15.4822 4.91143 15.25 5.14355L6.12669 14.2669C5.89001 14.4938 5.57366 14.6178 5.24581 14.6136C4.91797 14.6095 4.60488 14.4767 4.37402 14.2438C4.14317 14.011 4.01303 13.6968 4.01166 13.3689C4.01029 13.0411 4.13779 12.7258 4.36669 12.491L10.875 5.98271M6.13419 14.2585L6.12586 14.2669\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    back: `<svg width=\"20\" height=\"10\" viewBox=\"0 0 20 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.75 8.75L1 5M1 5L4.75 1.25M1 5H19\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    'back-2': `<svg width=\"16\" height=\"18\" viewBox=\"0 0 16 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14.75 16.5L7.25 9L14.75 1.5M8.75 16.5L1.25 9L8.75 1.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    billing: `<svg width=\"18\" height=\"22\" viewBox=\"0 0 18 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17.25 5.375C17.25 7.653 13.556 9.5 9 9.5C4.444 9.5 0.75 7.653 0.75 5.375M17.25 5.375C17.25 3.097 13.556 1.25 9 1.25C4.444 1.25 0.75 3.097 0.75 5.375M17.25 5.375V16.625C17.25 18.903 13.556 20.75 9 20.75C4.444 20.75 0.75 18.903 0.75 16.625V5.375M17.25 5.375V9.125M0.75 5.375V9.125M17.25 9.125V12.875C17.25 15.153 13.556 17 9 17C4.444 17 0.75 15.153 0.75 12.875V9.125M17.25 9.125C17.25 11.403 13.556 13.25 9 13.25C4.444 13.25 0.75 11.403 0.75 9.125\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    'billing-2': `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 16.5V9.625M12.125 16.5V9.625M5.875 16.5V9.625M1.5 6.5L9 1.5L16.5 6.5M15.25 16.5V7.61C13.1824 7.2863 11.0928 7.12414 9 7.125C6.87417 7.125 4.78667 7.29167 2.75 7.61V16.5M1.5 16.5H16.5M9 4.625H9.00667V4.63167H9V4.625Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    close: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1 13L13 1M1 1L13 13\" stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    country: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1 1V2M1 13V9M1 9L2.84667 8.538C4.23627 8.1907 5.70427 8.35197 6.98533 8.99267L7.05733 9.02867C8.31279 9.65614 9.74849 9.82363 11.1147 9.502L13.1907 9.014C12.9364 6.68788 12.9353 4.34103 13.1873 2.01467L11.114 2.50267C9.74795 2.82393 8.31252 2.6562 7.05733 2.02867L6.98533 1.99267C5.70427 1.35197 4.23627 1.1907 2.84667 1.538L1 2M1 9V2\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    calendar: `<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2.9375 0.75V2.0625M9.0625 0.75V2.0625M0.75 9.9375V3.375C0.75 3.0269 0.888281 2.69306 1.13442 2.44692C1.38056 2.20078 1.7144 2.0625 2.0625 2.0625H9.9375C10.2856 2.0625 10.6194 2.20078 10.8656 2.44692C11.1117 2.69306 11.25 3.0269 11.25 3.375V9.9375M0.75 9.9375C0.75 10.2856 0.888281 10.6194 1.13442 10.8656C1.38056 11.1117 1.7144 11.25 2.0625 11.25H9.9375C10.2856 11.25 10.6194 11.1117 10.8656 10.8656C11.1117 10.6194 11.25 10.2856 11.25 9.9375M0.75 9.9375V5.5625C0.75 5.2144 0.888281 4.88056 1.13442 4.63442C1.38056 4.38828 1.7144 4.25 2.0625 4.25H9.9375C10.2856 4.25 10.6194 4.38828 10.8656 4.63442C11.1117 4.88056 11.25 5.2144 11.25 5.5625V9.9375\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    comment: `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.25 5.875H12.75M5.25 8.375H9M0.875 9.63334C0.875 10.9667 1.81083 12.1283 3.13083 12.3225C4.07167 12.4608 5.0225 12.5667 5.98333 12.6383C6.275 12.66 6.54167 12.8133 6.70417 13.0558L9 16.5L11.2958 13.0558C11.3764 12.9361 11.4831 12.8362 11.608 12.7639C11.733 12.6915 11.8727 12.6486 12.0167 12.6383C12.971 12.5671 13.9224 12.4617 14.8692 12.3225C16.1892 12.1283 17.125 10.9675 17.125 9.6325V4.6175C17.125 3.2825 16.1892 2.12167 14.8692 1.9275C12.9258 1.64226 10.9642 1.49938 9 1.5C7.00667 1.5 5.04667 1.64584 3.13083 1.9275C1.81083 2.12167 0.875 3.28334 0.875 4.6175V9.6325V9.63334Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    copy: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 4.5V3C10 2.60218 9.84196 2.22064 9.56066 1.93934C9.27936 1.65804 8.89782 1.5 8.5 1.5H3C2.60218 1.5 2.22064 1.65804 1.93934 1.93934C1.65804 2.22064 1.5 2.60218 1.5 3V8.5C1.5 8.89782 1.65804 9.27936 1.93934 9.56066C2.22064 9.84196 2.60218 10 3 10H4.5M10 4.5H11C11.3978 4.5 11.7794 4.65804 12.0607 4.93934C12.342 5.22064 12.5 5.60218 12.5 6V11C12.5 11.3978 12.342 11.7794 12.0607 12.0607C11.7794 12.342 11.3978 12.5 11 12.5H6C5.60218 12.5 5.22064 12.342 4.93934 12.0607C4.65804 11.7794 4.5 11.3978 4.5 11V10M10 4.5H6C5.60218 4.5 5.22064 4.65804 4.93934 4.93934C4.65804 5.22064 4.5 5.60218 4.5 6V10\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    dashboard: `<svg width=\"22\" height=\"16\" viewBox=\"0 0 22 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.25 2.125C1.25 1.504 1.754 1 2.375 1H8.375C8.996 1 9.5 1.504 9.5 2.125V5.875C9.5 6.496 8.996 7 8.375 7H2.375C2.07663 7 1.79048 6.88147 1.5795 6.6705C1.36853 6.45952 1.25 6.17337 1.25 5.875V2.125ZM13.25 3.625C13.25 3.004 13.754 2.5 14.375 2.5H19.625C20.246 2.5 20.75 3.004 20.75 3.625V11.875C20.75 12.496 20.246 13 19.625 13H14.375C14.0766 13 13.7905 12.8815 13.5795 12.6705C13.3685 12.4595 13.25 12.1734 13.25 11.875V3.625ZM2.75 11.125C2.75 10.504 3.254 10 3.875 10H9.125C9.746 10 10.25 10.504 10.25 11.125V13.375C10.25 13.996 9.746 14.5 9.125 14.5H3.875C3.57663 14.5 3.29048 14.3815 3.0795 14.1705C2.86853 13.9595 2.75 13.6734 2.75 13.375V11.125Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    'dashboard-2': `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.125 3C1.125 2.50272 1.32254 2.02581 1.67417 1.67417C2.02581 1.32254 2.50272 1.125 3 1.125H4.875C5.37228 1.125 5.84919 1.32254 6.20082 1.67417C6.55246 2.02581 6.75 2.50272 6.75 3V4.875C6.75 5.37228 6.55246 5.84919 6.20082 6.20082C5.84919 6.55246 5.37228 6.75 4.875 6.75H3C2.50272 6.75 2.02581 6.55246 1.67417 6.20082C1.32254 5.84919 1.125 5.37228 1.125 4.875V3ZM1.125 11.125C1.125 10.6277 1.32254 10.1508 1.67417 9.79917C2.02581 9.44754 2.50272 9.25 3 9.25H4.875C5.37228 9.25 5.84919 9.44754 6.20082 9.79917C6.55246 10.1508 6.75 10.6277 6.75 11.125V13C6.75 13.4973 6.55246 13.9742 6.20082 14.3258C5.84919 14.6775 5.37228 14.875 4.875 14.875H3C2.50272 14.875 2.02581 14.6775 1.67417 14.3258C1.32254 13.9742 1.125 13.4973 1.125 13V11.125ZM9.25 3C9.25 2.50272 9.44754 2.02581 9.79917 1.67417C10.1508 1.32254 10.6277 1.125 11.125 1.125H13C13.4973 1.125 13.9742 1.32254 14.3258 1.67417C14.6775 2.02581 14.875 2.50272 14.875 3V4.875C14.875 5.37228 14.6775 5.84919 14.3258 6.20082C13.9742 6.55246 13.4973 6.75 13 6.75H11.125C10.6277 6.75 10.1508 6.55246 9.79917 6.20082C9.44754 5.84919 9.25 5.37228 9.25 4.875V3ZM9.25 11.125C9.25 10.6277 9.44754 10.1508 9.79917 9.79917C10.1508 9.44754 10.6277 9.25 11.125 9.25H13C13.4973 9.25 13.9742 9.44754 14.3258 9.79917C14.6775 10.1508 14.875 10.6277 14.875 11.125V13C14.875 13.4973 14.6775 13.9742 14.3258 14.3258C13.9742 14.6775 13.4973 14.875 13 14.875H11.125C10.6277 14.875 10.1508 14.6775 9.79917 14.3258C9.44754 13.9742 9.25 13.4973 9.25 13V11.125Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    delete: `<svg width=\"14\" height=\"16\" viewBox=\"0 0 14 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.82667 6.0001L8.596 12.0001M5.404 12.0001L5.17333 6.0001M11.8187 3.8601C12.0467 3.89477 12.2733 3.93144 12.5 3.97077M11.8187 3.86077L11.1067 13.1154C11.0776 13.4923 10.9074 13.8442 10.63 14.1009C10.3527 14.3577 9.9886 14.5002 9.61067 14.5001H4.38933C4.0114 14.5002 3.64735 14.3577 3.36999 14.1009C3.09262 13.8442 2.92239 13.4923 2.89333 13.1154L2.18133 3.8601M11.8187 3.8601C11.0492 3.74378 10.2758 3.6555 9.5 3.59544M1.5 3.9701C1.72667 3.93077 1.95333 3.8941 2.18133 3.8601M2.18133 3.8601C2.95076 3.74378 3.72416 3.6555 4.5 3.59544M9.5 3.59544V2.98477C9.5 2.1981 8.89333 1.5421 8.10667 1.51744C7.36908 1.49386 6.63092 1.49386 5.89333 1.51744C5.10667 1.5421 4.5 2.19877 4.5 2.98477V3.59544M9.5 3.59544C7.83581 3.46682 6.16419 3.46682 4.5 3.59544\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    'down-chevron': `<svg width=\"12\" height=\"7\" viewBox=\"0 0 12 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.6665 1L5.99984 5.66667L1.33317 1\" stroke=\"currentColor\" stroke-width=\"1.8\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    dispatch: `<svg width=\"18\" height=\"16\" viewBox=\"0 0 18 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.50008 6.33333H0.666748V1.33578C0.666748 0.874192 1.04617 0.5 1.49325 0.5H16.5069C16.9634 0.5 17.3334 0.8649 17.3334 1.33578V6.33333H16.5001V14.6679C16.5001 15.1275 16.1293 15.5 15.6722 15.5H2.32791C1.87071 15.5 1.50008 15.1271 1.50008 14.6679V6.33333ZM14.8334 6.33333H3.16675V13.8333H14.8334V6.33333ZM2.33341 2.16667V4.66667H15.6667V2.16667H2.33341ZM6.50008 8H11.5001V9.66667H6.50008V8Z\" fill=\"currentColor\"/></svg>`,\n\n    grid: `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.125 3C1.125 2.50272 1.32254 2.02581 1.67417 1.67417C2.02581 1.32254 2.50272 1.125 3 1.125H4.875C5.37228 1.125 5.84919 1.32254 6.20082 1.67417C6.55246 2.02581 6.75 2.50272 6.75 3V4.875C6.75 5.37228 6.55246 5.84919 6.20082 6.20082C5.84919 6.55246 5.37228 6.75 4.875 6.75H3C2.50272 6.75 2.02581 6.55246 1.67417 6.20082C1.32254 5.84919 1.125 5.37228 1.125 4.875V3ZM1.125 11.125C1.125 10.6277 1.32254 10.1508 1.67417 9.79917C2.02581 9.44754 2.50272 9.25 3 9.25H4.875C5.37228 9.25 5.84919 9.44754 6.20082 9.79917C6.55246 10.1508 6.75 10.6277 6.75 11.125V13C6.75 13.4973 6.55246 13.9742 6.20082 14.3258C5.84919 14.6775 5.37228 14.875 4.875 14.875H3C2.50272 14.875 2.02581 14.6775 1.67417 14.3258C1.32254 13.9742 1.125 13.4973 1.125 13V11.125ZM9.25 3C9.25 2.50272 9.44754 2.02581 9.79917 1.67417C10.1508 1.32254 10.6277 1.125 11.125 1.125H13C13.4973 1.125 13.9742 1.32254 14.3258 1.67417C14.6775 2.02581 14.875 2.50272 14.875 3V4.875C14.875 5.37228 14.6775 5.84919 14.3258 6.20082C13.9742 6.55246 13.4973 6.75 13 6.75H11.125C10.6277 6.75 10.1508 6.55246 9.79917 6.20082C9.44754 5.84919 9.25 5.37228 9.25 4.875V3ZM9.25 11.125C9.25 10.6277 9.44754 10.1508 9.79917 9.79917C10.1508 9.44754 10.6277 9.25 11.125 9.25H13C13.4973 9.25 13.9742 9.44754 14.3258 9.79917C14.6775 10.1508 14.875 10.6277 14.875 11.125V13C14.875 13.4973 14.6775 13.9742 14.3258 14.3258C13.9742 14.6775 13.4973 14.875 13 14.875H11.125C10.6277 14.875 10.1508 14.6775 9.79917 14.3258C9.44754 13.9742 9.25 13.4973 9.25 13V11.125Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    email: `<svg width=\"16\" height=\"12\" viewBox=\"0 0 16 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14.5 2.5V9.5C14.5 9.89782 14.342 10.2794 14.0607 10.5607C13.7794 10.842 13.3978 11 13 11H3C2.60218 11 2.22064 10.842 1.93934 10.5607C1.65804 10.2794 1.5 9.89782 1.5 9.5V2.5M14.5 2.5C14.5 2.10218 14.342 1.72064 14.0607 1.43934C13.7794 1.15804 13.3978 1 13 1H3C2.60218 1 2.22064 1.15804 1.93934 1.43934C1.65804 1.72064 1.5 2.10218 1.5 2.5M14.5 2.5V2.662C14.5 2.9181 14.4345 3.16994 14.3096 3.39353C14.1848 3.61712 14.0047 3.80502 13.7867 3.93933L8.78667 7.016C8.55014 7.16169 8.2778 7.23883 8 7.23883C7.7222 7.23883 7.44986 7.16169 7.21333 7.016L2.21333 3.94C1.99528 3.80569 1.81525 3.61779 1.69038 3.3942C1.56551 3.1706 1.49997 2.91876 1.5 2.66267V2.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    error: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7 5V7.5M13 7C13 7.78793 12.8448 8.56815 12.5433 9.2961C12.2417 10.0241 11.7998 10.6855 11.2426 11.2426C10.6855 11.7998 10.0241 12.2417 9.2961 12.5433C8.56815 12.8448 7.78793 13 7 13C6.21207 13 5.43185 12.8448 4.7039 12.5433C3.97595 12.2417 3.31451 11.7998 2.75736 11.2426C2.20021 10.6855 1.75825 10.0241 1.45672 9.2961C1.15519 8.56815 1 7.78793 1 7C1 5.4087 1.63214 3.88258 2.75736 2.75736C3.88258 1.63214 5.4087 1 7 1C8.5913 1 10.1174 1.63214 11.2426 2.75736C12.3679 3.88258 13 5.4087 13 7ZM7 9.5H7.00533V9.50533H7V9.5Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    export: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1 10V11.5C1 11.8978 1.15804 12.2794 1.43934 12.5607C1.72064 12.842 2.10218 13 2.5 13H11.5C11.8978 13 12.2794 12.842 12.5607 12.5607C12.842 12.2794 13 11.8978 13 11.5V10M4 4L7 1M7 1L10 4M7 1V10\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    enforcement: `<svg width=\"18\" height=\"22\" viewBox=\"0 0 18 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0.75 12.5L11.25 1.25L9 9.5H17.25L6.75 20.75L9 12.5H0.75Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    flag: `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.5 1.5V2.75M1.5 2.75L3.80833 2.1725C5.54534 1.73837 7.38034 1.93996 8.98167 2.74083L9.07167 2.78583C10.6406 3.57025 12.4349 3.77991 14.1425 3.37833L16.7342 2.76833C16.4191 5.67629 16.4205 8.60984 16.7383 11.5175L14.1433 12.1275C12.4356 12.5295 10.641 12.3202 9.07167 11.5358L8.98167 11.4908C7.38034 10.69 5.54534 10.4884 3.80833 10.9225L1.5 11.5M1.5 2.75V11.5M1.5 16.5V11.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n    facebook: `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.001 0C4.47813 0 0.000976562 4.47715 0.000976562 10C0.000976562 14.9913 3.65783 19.1283 8.4385 19.8785V12.8906H5.89941V10H8.4385V7.79688C8.4385 5.29063 9.9314 3.90625 12.2156 3.90625C13.3097 3.90625 14.4541 4.10156 14.4541 4.10156V6.5625H13.1931C11.9509 6.5625 11.5635 7.33334 11.5635 8.1242V10H14.3369L13.8936 12.8906H11.5635V19.8785C16.3441 19.1283 20.001 14.9913 20.001 10C20.001 4.47715 15.5238 0 10.001 0Z\" fill=\"currentColor\"/></svg>`,\n\n    filter: `<svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0.5C0 0.367392 0.0526784 0.240215 0.146447 0.146447C0.240215 0.0526784 0.367392 0 0.5 0H11.5C11.6326 0 11.7598 0.0526784 11.8536 0.146447C11.9473 0.240215 12 0.367392 12 0.5C12 0.632608 11.9473 0.759785 11.8536 0.853553C11.7598 0.947322 11.6326 1 11.5 1H0.5C0.367392 1 0.240215 0.947322 0.146447 0.853553C0.0526784 0.759785 0 0.632608 0 0.5ZM0 4C0 3.86739 0.0526784 3.74022 0.146447 3.64645C0.240215 3.55268 0.367392 3.5 0.5 3.5H11.5C11.6326 3.5 11.7598 3.55268 11.8536 3.64645C11.9473 3.74022 12 3.86739 12 4C12 4.13261 11.9473 4.25979 11.8536 4.35355C11.7598 4.44732 11.6326 4.5 11.5 4.5H0.5C0.367392 4.5 0.240215 4.44732 0.146447 4.35355C0.0526784 4.25979 0 4.13261 0 4ZM5.5 7.5C5.5 7.36739 5.55268 7.24021 5.64645 7.14645C5.74022 7.05268 5.86739 7 6 7H11.5C11.6326 7 11.7598 7.05268 11.8536 7.14645C11.9473 7.24021 12 7.36739 12 7.5C12 7.63261 11.9473 7.75979 11.8536 7.85355C11.7598 7.94732 11.6326 8 11.5 8H6C5.86739 8 5.74022 7.94732 5.64645 7.85355C5.55268 7.75979 5.5 7.63261 5.5 7.5Z\" fill=\"currentColor\"/></svg>`,\n\n    hashtag: `<svg width=\"12\" height=\"14\" viewBox=\"0 0 12 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2.0625 4.8125H10.8125M1.1875 9.1875H9.9375M8.8875 1.3125L6.6125 12.6875M5.3875 1.3125L3.1125 12.6875\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    home: `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.5 15.6659C15.5 15.8869 15.4122 16.0989 15.2559 16.2552C15.0996 16.4115 14.8877 16.4993 14.6667 16.4993H1.33333C1.11232 16.4993 0.900358 16.4115 0.744078 16.2552C0.587798 16.0989 0.5 15.8869 0.5 15.6659V6.90758C0.499912 6.78059 0.528848 6.65526 0.584597 6.54117C0.640346 6.42707 0.721433 6.32722 0.821667 6.24925L7.48833 1.06425C7.63462 0.950455 7.81467 0.888672 8 0.888672C8.18533 0.888672 8.36538 0.950455 8.51167 1.06425L15.1783 6.24925C15.2786 6.32722 15.3597 6.42707 15.4154 6.54117C15.4712 6.65526 15.5001 6.78059 15.5 6.90758V15.6659ZM13.8333 14.8326V7.31425L8 2.77758L2.16667 7.31425V14.8326H13.8333Z\" fill=\"currentColor\"/></svg>`,\n\n    image: `<svg width=\"22\" height=\"18\" viewBox=\"0 0 22 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.25 12.75L6.409 7.591C6.61793 7.38206 6.86597 7.21633 7.13896 7.10325C7.41194 6.99018 7.70452 6.93198 8 6.93198C8.29548 6.93198 8.58806 6.99018 8.86104 7.10325C9.13403 7.21633 9.38207 7.38206 9.591 7.591L14.75 12.75M13.25 11.25L14.659 9.841C14.8679 9.63206 15.116 9.46633 15.389 9.35325C15.6619 9.24018 15.9545 9.18198 16.25 9.18198C16.5455 9.18198 16.8381 9.24018 17.111 9.35325C17.384 9.46633 17.6321 9.63206 17.841 9.841L20.75 12.75M2.75 16.5H19.25C19.6478 16.5 20.0294 16.342 20.3107 16.0607C20.592 15.7794 20.75 15.3978 20.75 15V3C20.75 2.60218 20.592 2.22064 20.3107 1.93934C20.0294 1.65804 19.6478 1.5 19.25 1.5H2.75C2.35218 1.5 1.97064 1.65804 1.68934 1.93934C1.40804 2.22064 1.25 2.60218 1.25 3V15C1.25 15.3978 1.40804 15.7794 1.68934 16.0607C1.97064 16.342 2.35218 16.5 2.75 16.5ZM13.25 5.25H13.258V5.258H13.25V5.25ZM13.625 5.25C13.625 5.34946 13.5855 5.44484 13.5152 5.51517C13.4448 5.58549 13.3495 5.625 13.25 5.625C13.1505 5.625 13.0552 5.58549 12.9848 5.51517C12.9145 5.44484 12.875 5.34946 12.875 5.25C12.875 5.15054 12.9145 5.05516 12.9848 4.98484C13.0552 4.91451 13.1505 4.875 13.25 4.875C13.3495 4.875 13.4448 4.91451 13.5152 4.98484C13.5855 5.05516 13.625 5.15054 13.625 5.25V5.25Z\" stroke=\"#BDBDBD\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    info: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.5 7C0.5 3.41 3.41 0.5 7 0.5C10.59 0.5 13.5 3.41 13.5 7C13.5 10.59 10.59 13.5 7 13.5C3.41 13.5 0.5 10.59 0.5 7ZM6.304 6.03867C7.068 5.65667 7.92867 6.34733 7.72133 7.176L7.24867 9.06667L7.27667 9.05333C7.39414 9.00169 7.52698 8.99719 7.64768 9.04077C7.76839 9.08435 7.86771 9.17267 7.9251 9.28745C7.98249 9.40223 7.99355 9.53468 7.956 9.65739C7.91844 9.7801 7.83514 9.88367 7.72333 9.94667L7.69667 9.96133C6.932 10.3433 6.07133 9.65267 6.27867 8.824L6.752 6.93333L6.724 6.94667C6.66503 6.97944 6.60003 6.99994 6.53292 7.00693C6.46581 7.01393 6.39798 7.00726 6.33352 6.98734C6.26905 6.96743 6.20929 6.93467 6.15782 6.89105C6.10635 6.84742 6.06424 6.79383 6.03403 6.7335C6.00382 6.67317 5.98613 6.60735 5.98204 6.54C5.97794 6.47266 5.98751 6.40518 6.01018 6.34163C6.03285 6.27808 6.06815 6.21978 6.11394 6.17023C6.15974 6.12069 6.21509 6.08092 6.27667 6.05333L6.304 6.03867ZM7 5C7.13261 5 7.25979 4.94732 7.35355 4.85355C7.44732 4.75979 7.5 4.63261 7.5 4.5C7.5 4.36739 7.44732 4.24021 7.35355 4.14645C7.25979 4.05268 7.13261 4 7 4C6.86739 4 6.74022 4.05268 6.64645 4.14645C6.55268 4.24021 6.5 4.36739 6.5 4.5C6.5 4.63261 6.55268 4.75979 6.64645 4.85355C6.74022 4.94732 6.86739 5 7 5Z\" fill=\"currentColor\"/></svg>`,\n\n    linkedin: `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.3362 15.339H12.6707V11.1622C12.6707 10.1662 12.6505 8.8845 11.2817 8.8845C9.892 8.8845 9.6797 9.9683 9.6797 11.0887V15.339H7.0142V6.75H9.5747V7.9207H9.6092C9.967 7.2457 10.837 6.53325 12.1367 6.53325C14.8375 6.53325 15.337 8.3108 15.337 10.6245L15.3362 15.339ZM4.00373 5.57475C3.14573 5.57475 2.45648 4.88025 2.45648 4.026C2.45648 3.1725 3.14648 2.47875 4.00373 2.47875C4.85873 2.47875 5.55173 3.1725 5.55173 4.026C5.55173 4.88025 4.85798 5.57475 4.00373 5.57475ZM5.34023 15.339H2.66723V6.75H5.34023V15.339ZM16.6697 0H1.32923C0.594976 0 0.000976562 0.5805 0.000976562 1.29675V16.7033C0.000976562 17.4202 0.594976 18 1.32923 18H16.6675C17.401 18 18.001 17.4202 18.001 16.7033V1.29675C18.001 0.5805 17.401 0 16.6675 0H16.6697Z\" fill=\"currentColor\"/></svg>`,\n\n    list: `<svg width=\"19\" height=\"14\" viewBox=\"0 0 19 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.625 1.75C0.625 1.45163 0.743527 1.16548 0.954505 0.954505C1.16548 0.743527 1.45163 0.625 1.75 0.625C2.04837 0.625 2.33452 0.743527 2.5455 0.954505C2.75647 1.16548 2.875 1.45163 2.875 1.75C2.875 2.04837 2.75647 2.33452 2.5455 2.5455C2.33452 2.75647 2.04837 2.875 1.75 2.875C1.45163 2.875 1.16548 2.75647 0.954505 2.5455C0.743527 2.33452 0.625 2.04837 0.625 1.75ZM5.5 1.75C5.5 1.55109 5.57902 1.36032 5.71967 1.21967C5.86032 1.07902 6.05109 1 6.25 1H18.25C18.4489 1 18.6397 1.07902 18.7803 1.21967C18.921 1.36032 19 1.55109 19 1.75C19 1.94891 18.921 2.13968 18.7803 2.28033C18.6397 2.42098 18.4489 2.5 18.25 2.5H6.25C6.05109 2.5 5.86032 2.42098 5.71967 2.28033C5.57902 2.13968 5.5 1.94891 5.5 1.75ZM0.625 7C0.625 6.70163 0.743527 6.41548 0.954505 6.2045C1.16548 5.99353 1.45163 5.875 1.75 5.875C2.04837 5.875 2.33452 5.99353 2.5455 6.2045C2.75647 6.41548 2.875 6.70163 2.875 7C2.875 7.29837 2.75647 7.58452 2.5455 7.7955C2.33452 8.00647 2.04837 8.125 1.75 8.125C1.45163 8.125 1.16548 8.00647 0.954505 7.7955C0.743527 7.58452 0.625 7.29837 0.625 7ZM5.5 7C5.5 6.80109 5.57902 6.61032 5.71967 6.46967C5.86032 6.32902 6.05109 6.25 6.25 6.25H18.25C18.4489 6.25 18.6397 6.32902 18.7803 6.46967C18.921 6.61032 19 6.80109 19 7C19 7.19891 18.921 7.38968 18.7803 7.53033C18.6397 7.67098 18.4489 7.75 18.25 7.75H6.25C6.05109 7.75 5.86032 7.67098 5.71967 7.53033C5.57902 7.38968 5.5 7.19891 5.5 7ZM0.625 12.25C0.625 11.9516 0.743527 11.6655 0.954505 11.4545C1.16548 11.2435 1.45163 11.125 1.75 11.125C2.04837 11.125 2.33452 11.2435 2.5455 11.4545C2.75647 11.6655 2.875 11.9516 2.875 12.25C2.875 12.5484 2.75647 12.8345 2.5455 13.0455C2.33452 13.2565 2.04837 13.375 1.75 13.375C1.45163 13.375 1.16548 13.2565 0.954505 13.0455C0.743527 12.8345 0.625 12.5484 0.625 12.25ZM5.5 12.25C5.5 12.0511 5.57902 11.8603 5.71967 11.7197C5.86032 11.579 6.05109 11.5 6.25 11.5H18.25C18.4489 11.5 18.6397 11.579 18.7803 11.7197C18.921 11.8603 19 12.0511 19 12.25C19 12.4489 18.921 12.6397 18.7803 12.7803C18.6397 12.921 18.4489 13 18.25 13H6.25C6.05109 13 5.86032 12.921 5.71967 12.7803C5.57902 12.6397 5.5 12.4489 5.5 12.25Z\" fill=\"currentColor\"/></svg>`,\n\n    notification: `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 22.5001C13.6569 22.5001 15 21.1569 15 19.5001C15 19.472 14.9996 19.444 14.9988 19.416C14.9922 19.1741 14.7823 18.9981 14.5403 18.9953L9.47169 18.9378C9.22965 18.9351 9.01585 19.1063 9.00379 19.348C9.00127 19.3984 9 19.4491 9 19.5001C9 21.1569 10.3431 22.5001 12 22.5001Z\" fill=\"currentColor\"/><path d=\"M5 9C5 5.13401 8.13401 1.5 12 1.5C15.866 1.5 19 5.13401 19 9V11.4607C19 12.7578 19.5547 13.9931 20.5242 14.8549C21.5645 15.7796 20.9104 17.5 19.5185 17.5H4.48147C3.08955 17.5 2.43545 15.7796 3.47579 14.8549C4.4453 13.9931 5 12.7578 5 11.4607V9Z\" fill=\"currentColor\"/></svg>`,\n\n    organisation: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.5 13H12.5M2 1H12M2.5 1V13M11.5 1V13M5 3.5H6M5 5.5H6M5 7.5H6M8 3.5H9M8 5.5H9M8 7.5H9M5 13V10.75C5 10.336 5.336 10 5.75 10H8.25C8.664 10 9 10.336 9 10.75V13\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    password: `<svg width=\"12\" height=\"16\" viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 7V4.5C9 3.70435 8.68393 2.94129 8.12132 2.37868C7.55871 1.81607 6.79565 1.5 6 1.5C5.20435 1.5 4.44129 1.81607 3.87868 2.37868C3.31607 2.94129 3 3.70435 3 4.5V7M2.5 14.5H9.5C9.89782 14.5 10.2794 14.342 10.5607 14.0607C10.842 13.7794 11 13.3978 11 13V8.5C11 8.10218 10.842 7.72064 10.5607 7.43934C10.2794 7.15804 9.89782 7 9.5 7H2.5C2.10218 7 1.72064 7.15804 1.43934 7.43934C1.15804 7.72064 1 8.10218 1 8.5V13C1 13.3978 1.15804 13.7794 1.43934 14.0607C1.72064 14.342 2.10218 14.5 2.5 14.5Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    payment: `<svg width=\"22\" height=\"18\" viewBox=\"0 0 22 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.25 5.25H20.75M1.25 6H20.75M4.25 11.25H10.25M4.25 13.5H7.25M3.5 16.5H18.5C19.0967 16.5 19.669 16.2629 20.091 15.841C20.5129 15.419 20.75 14.8467 20.75 14.25V3.75C20.75 3.15326 20.5129 2.58097 20.091 2.15901C19.669 1.73705 19.0967 1.5 18.5 1.5H3.5C2.90326 1.5 2.33097 1.73705 1.90901 2.15901C1.48705 2.58097 1.25 3.15326 1.25 3.75V14.25C1.25 14.8467 1.48705 15.419 1.90901 15.841C2.33097 16.2629 2.90326 16.5 3.5 16.5Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    printer: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.00016 11.6663H1.00016C0.823352 11.6663 0.653782 11.5961 0.528758 11.4711C0.403734 11.3461 0.333496 11.1765 0.333496 10.9997V4.33301C0.333496 4.1562 0.403734 3.98663 0.528758 3.8616C0.653782 3.73658 0.823352 3.66634 1.00016 3.66634H3.00016V0.999674C3.00016 0.822863 3.0704 0.653294 3.19542 0.52827C3.32045 0.403246 3.49002 0.333008 3.66683 0.333008H10.3335C10.5103 0.333008 10.6799 0.403246 10.8049 0.52827C10.9299 0.653294 11.0002 0.822863 11.0002 0.999674V3.66634H13.0002C13.177 3.66634 13.3465 3.73658 13.4716 3.8616C13.5966 3.98663 13.6668 4.1562 13.6668 4.33301V10.9997C13.6668 11.1765 13.5966 11.3461 13.4716 11.4711C13.3465 11.5961 13.177 11.6663 13.0002 11.6663H11.0002V12.9997C11.0002 13.1765 10.9299 13.3461 10.8049 13.4711C10.6799 13.5961 10.5103 13.6663 10.3335 13.6663H3.66683C3.49002 13.6663 3.32045 13.5961 3.19542 13.4711C3.0704 13.3461 3.00016 13.1765 3.00016 12.9997V11.6663ZM3.00016 10.333V9.66634C3.00016 9.48953 3.0704 9.31996 3.19542 9.19494C3.32045 9.06991 3.49002 8.99967 3.66683 8.99967H10.3335C10.5103 8.99967 10.6799 9.06991 10.8049 9.19494C10.9299 9.31996 11.0002 9.48953 11.0002 9.66634V10.333H12.3335V4.99967H1.66683V10.333H3.00016ZM4.3335 1.66634V3.66634H9.66683V1.66634H4.3335ZM4.3335 10.333V12.333H9.66683V10.333H4.3335ZM2.3335 5.66634H4.3335V6.99967H2.3335V5.66634Z\" fill=\"currentColor\"/></svg>`,\n\n    profile: `<svg width=\"18\" height=\"22\" viewBox=\"0 0 18 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12.75 5C12.75 5.99456 12.3549 6.94839 11.6516 7.65165C10.9484 8.35491 9.99454 8.75 8.99998 8.75C8.00541 8.75 7.05159 8.35491 6.34833 7.65165C5.64506 6.94839 5.24998 5.99456 5.24998 5C5.24998 4.00544 5.64506 3.05161 6.34833 2.34835C7.05159 1.64509 8.00541 1.25 8.99998 1.25C9.99454 1.25 10.9484 1.64509 11.6516 2.34835C12.3549 3.05161 12.75 4.00544 12.75 5V5ZM1.50098 19.118C1.53311 17.1504 2.33731 15.2742 3.74015 13.894C5.14299 12.5139 7.03206 11.7405 8.99998 11.7405C10.9679 11.7405 12.857 12.5139 14.2598 13.894C15.6626 15.2742 16.4668 17.1504 16.499 19.118C14.1464 20.1968 11.5881 20.7535 8.99998 20.75C6.32398 20.75 3.78398 20.166 1.50098 19.118Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    profiles: `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.5001 14.94C12.2109 15.1464 12.9474 15.2508 13.6876 15.25C14.8779 15.2517 16.0528 14.9803 17.1218 14.4567C17.1534 13.7098 16.9406 12.9729 16.5158 12.3578C16.0909 11.7427 15.4771 11.2828 14.7674 11.0479C14.0576 10.813 13.2907 10.8159 12.5827 11.0562C11.8748 11.2964 11.2645 11.7609 10.8443 12.3792M11.5001 14.94V14.9375C11.5001 14.01 11.2626 13.1375 10.8451 12.3792M11.5001 14.94V15.0283C9.89633 15.9942 8.05894 16.5032 6.18677 16.5C4.24427 16.5 2.42677 15.9625 0.875102 15.0283L0.874268 14.9375C0.873629 13.7579 1.26561 12.6116 1.98842 11.6794C2.71123 10.7472 3.72375 10.082 4.86634 9.78883C6.00894 9.49564 7.21662 9.59107 8.29899 10.0601C9.38136 10.5291 10.2768 11.345 10.8443 12.3792M9.0001 4.3125C9.0001 5.05842 8.70379 5.77379 8.17634 6.30124C7.64889 6.82868 6.93352 7.125 6.1876 7.125C5.44168 7.125 4.72631 6.82868 4.19886 6.30124C3.67142 5.77379 3.3751 5.05842 3.3751 4.3125C3.3751 3.56658 3.67142 2.85121 4.19886 2.32376C4.72631 1.79632 5.44168 1.5 6.1876 1.5C6.93352 1.5 7.64889 1.79632 8.17634 2.32376C8.70379 2.85121 9.0001 3.56658 9.0001 4.3125V4.3125ZM15.8751 6.1875C15.8751 6.76766 15.6446 7.32406 15.2344 7.7343C14.8242 8.14453 14.2678 8.375 13.6876 8.375C13.1074 8.375 12.551 8.14453 12.1408 7.7343C11.7306 7.32406 11.5001 6.76766 11.5001 6.1875C11.5001 5.60734 11.7306 5.05094 12.1408 4.6407C12.551 4.23047 13.1074 4 13.6876 4C14.2678 4 14.8242 4.23047 15.2344 4.6407C15.6446 5.05094 15.8751 5.60734 15.8751 6.1875V6.1875Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    reconcilitation: `<svg width=\"18\" height=\"12\" viewBox=\"0 0 18 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0.875 11.0009L6.5 5.37589L10.0883 8.96505C11.1256 6.91988 12.837 5.29536 14.9333 4.36589L17.2167 3.34922M17.2167 3.34922L12.2667 1.44922M17.2167 3.34922L15.3167 8.30005\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    refresh: `<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.76667 2.23329C8.80001 1.26663 7.47334 0.666626 6.00001 0.666626C3.05334 0.666626 0.67334 3.05329 0.67334 5.99996C0.67334 8.94663 3.05334 11.3333 6.00001 11.3333C8.48667 11.3333 10.56 9.63329 11.1533 7.33329H9.76667C9.22001 8.88663 7.74001 9.99996 6.00001 9.99996C3.79334 9.99996 2.00001 8.20663 2.00001 5.99996C2.00001 3.79329 3.79334 1.99996 6.00001 1.99996C7.10667 1.99996 8.09334 2.45996 8.81334 3.18663L6.66667 5.33329H11.3333V0.666626L9.76667 2.23329Z\" fill=\"currentColor\"/></svg>`,\n\n    reporting: `<svg width=\"18\" height=\"22\" viewBox=\"0 0 18 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 11H9.75M6 14H9.75M6 17H9.75M12.75 17.75H15C15.5967 17.75 16.169 17.5129 16.591 17.091C17.0129 16.669 17.25 16.0967 17.25 15.5V5.108C17.25 3.973 16.405 3.01 15.274 2.916C14.9 2.88498 14.5256 2.85831 14.151 2.836M8.35 2.836C8.285 3.046 8.25 3.269 8.25 3.5C8.25 3.914 8.586 4.25 9 4.25H13.5C13.6989 4.25 13.8897 4.17098 14.0303 4.03033C14.171 3.88968 14.25 3.69891 14.25 3.5C14.2501 3.27491 14.2164 3.05109 14.15 2.836M8.35 2.836C8.49203 2.3767 8.77738 1.97493 9.16426 1.68954C9.55115 1.40414 10.0192 1.25011 10.5 1.25H12C13.012 1.25 13.867 1.918 14.15 2.836M8.35 2.836C7.974 2.859 7.6 2.886 7.226 2.916C6.095 3.01 5.25 3.973 5.25 5.108V7.25M5.25 7.25H1.875C1.254 7.25 0.75 7.754 0.75 8.375V19.625C0.75 20.246 1.254 20.75 1.875 20.75H11.625C12.246 20.75 12.75 20.246 12.75 19.625V8.375C12.75 7.754 12.246 7.25 11.625 7.25H5.25ZM3.75 11H3.758V11.008H3.75V11ZM3.75 14H3.758V14.008H3.75V14ZM3.75 17H3.758V17.008H3.75V17Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    report: `<svg width=\"14\" height=\"18\" viewBox=\"0 0 14 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13.25 10.875V8.6875C13.25 7.94158 12.9537 7.22621 12.4262 6.69876C11.8988 6.17132 11.1834 5.875 10.4375 5.875H9.1875C8.93886 5.875 8.7004 5.77623 8.52459 5.60041C8.34877 5.4246 8.25 5.18614 8.25 4.9375V3.6875C8.25 2.94158 7.95368 2.22621 7.42624 1.69876C6.89879 1.17132 6.18342 0.875 5.4375 0.875H3.875M4.5 12.75V13.375M7 10.875V13.375M9.5 9V13.375M5.75 0.875H1.6875C1.17 0.875 0.75 1.295 0.75 1.8125V16.1875C0.75 16.705 1.17 17.125 1.6875 17.125H12.3125C12.83 17.125 13.25 16.705 13.25 16.1875V8.375C13.25 6.38588 12.4598 4.47822 11.0533 3.0717C9.64678 1.66518 7.73912 0.875 5.75 0.875V0.875Z\" stroke=\"#9FC7FF\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    revenue: `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.75 5C7.51387 5 6.3055 5.36656 5.27769 6.05331C4.24988 6.74007 3.4488 7.71619 2.97576 8.85823C2.50271 10.0003 2.37894 11.2569 2.62009 12.4693C2.86125 13.6817 3.45651 14.7953 4.33059 15.6694C5.20466 16.5435 6.31831 17.1388 7.53069 17.3799C8.74307 17.6211 9.99974 17.4973 11.1418 17.0242C12.2838 16.5512 13.2599 15.7501 13.9467 14.7223C14.6334 13.6945 15 12.4861 15 11.25H8.75V5Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M11.25 8.75H17.5C17.5 7.0924 16.8415 5.50268 15.6694 4.33058C14.4973 3.15848 12.9076 2.5 11.25 2.5V8.75Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    search: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13 13L9.53537 9.53537M9.53537 9.53537C10.4731 8.59765 10.9999 7.32583 10.9999 5.9997C10.9999 4.67357 10.4731 3.40175 9.53537 2.46403C8.59765 1.52632 7.32583 0.999512 5.9997 0.999512C4.67357 0.999512 3.40175 1.52632 2.46403 2.46403C1.52632 3.40175 0.999512 4.67357 0.999512 5.9997C0.999512 7.32583 1.52632 8.59765 2.46403 9.53537C3.40175 10.4731 4.67357 10.9999 5.9997 10.9999C7.32583 10.9999 8.59765 10.4731 9.53537 9.53537V9.53537Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    settings: `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.99503 3.28333C8.07003 2.83167 8.4617 2.5 8.92003 2.5H11.0809C11.5392 2.5 11.9309 2.83167 12.0059 3.28333L12.1834 4.35083C12.2359 4.6625 12.4442 4.9225 12.7209 5.07583C12.7825 5.10917 12.8434 5.145 12.9042 5.18167C13.1742 5.345 13.5042 5.39583 13.8 5.285L14.8142 4.905C15.022 4.82684 15.2509 4.82498 15.4599 4.89976C15.669 4.97454 15.8447 5.1211 15.9559 5.31333L17.0359 7.18583C17.1467 7.37809 17.1858 7.60344 17.1461 7.8218C17.1065 8.04017 16.9906 8.23737 16.8192 8.37833L15.9834 9.0675C15.7392 9.2675 15.6184 9.57833 15.6242 9.89417C15.6255 9.96499 15.6255 10.0358 15.6242 10.1067C15.6184 10.4217 15.7392 10.7317 15.9825 10.9317L16.82 11.6217C17.1734 11.9133 17.265 12.4167 17.0367 12.8133L15.955 14.6858C15.8441 14.878 15.6685 15.0246 15.4596 15.0996C15.2507 15.1745 15.022 15.1729 14.8142 15.095L13.8 14.715C13.5042 14.6042 13.175 14.655 12.9034 14.8183C12.8429 14.8551 12.7818 14.8906 12.72 14.925C12.4442 15.0775 12.2359 15.3375 12.1834 15.6492L12.0059 16.7158C11.9309 17.1683 11.5392 17.5 11.0809 17.5H8.9192C8.46086 17.5 8.0692 17.1683 7.9942 16.7167L7.8167 15.6492C7.76503 15.3375 7.5567 15.0775 7.28003 14.9242C7.21824 14.8901 7.15711 14.8548 7.0967 14.8183C6.82586 14.655 6.4967 14.6042 6.20003 14.715L5.18586 15.095C4.97814 15.1729 4.7495 15.1747 4.54061 15.0999C4.33172 15.0251 4.15612 14.8787 4.04503 14.6867L2.9642 12.8142C2.85331 12.6219 2.81424 12.3966 2.85391 12.1782C2.89358 11.9598 3.00944 11.7626 3.18086 11.6217L4.01753 10.9325C4.26086 10.7325 4.3817 10.4217 4.37586 10.1058C4.37456 10.035 4.37456 9.96416 4.37586 9.89333C4.3817 9.57833 4.26086 9.26833 4.01753 9.06833L3.18086 8.37833C3.00965 8.23741 2.89392 8.04036 2.85426 7.82219C2.81459 7.60401 2.85354 7.37884 2.9642 7.18667L4.04503 5.31417C4.15602 5.12178 4.33171 4.97505 4.54079 4.90011C4.74987 4.82518 4.97877 4.82691 5.1867 4.905L6.20003 5.285C6.4967 5.39583 6.82586 5.345 7.0967 5.18167C7.1567 5.145 7.21836 5.10917 7.28003 5.075C7.5567 4.9225 7.76503 4.6625 7.8167 4.35083L7.99503 3.28333V3.28333Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M12.5 10C12.5 10.663 12.2366 11.2989 11.7678 11.7678C11.2989 12.2366 10.663 12.5 10 12.5C9.33696 12.5 8.70107 12.2366 8.23223 11.7678C7.76339 11.2989 7.5 10.663 7.5 10C7.5 9.33696 7.76339 8.70107 8.23223 8.23223C8.70107 7.76339 9.33696 7.5 10 7.5C10.663 7.5 11.2989 7.76339 11.7678 8.23223C12.2366 8.70107 12.5 9.33696 12.5 10V10Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    street: `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.5 4.62525V11.5003M11.5 6.50025V13.3753M11.9192 16.2903L15.9817 14.2594C16.2992 14.1011 16.5 13.7761 16.5 13.4211V3.01692C16.5 2.32025 15.7667 1.86692 15.1433 2.17859L11.9192 3.79025C11.655 3.92275 11.3442 3.92275 11.0808 3.79025L6.91917 1.71025C6.78901 1.6452 6.64551 1.61133 6.5 1.61133C6.35449 1.61133 6.21098 1.6452 6.08083 1.71025L2.01833 3.74109C1.7 3.90025 1.5 4.22525 1.5 4.57942V14.9836C1.5 15.6803 2.23333 16.1336 2.85667 15.8219L6.08083 14.2103C6.345 14.0778 6.65583 14.0778 6.91917 14.2103L11.0808 16.2911C11.345 16.4228 11.6558 16.4228 11.9192 16.2911V16.2903Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    stacks: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.75025 5.6875L1.3125 7L3.75025 8.3125M3.75025 5.6875L7 7.4375L10.2497 5.6875M3.75025 5.6875L1.3125 4.375L7 1.3125L12.6875 4.375L10.2497 5.6875M10.2497 5.6875L12.6875 7L10.2497 8.3125M10.2497 8.3125L12.6875 9.625L7 12.6875L1.3125 9.625L3.75025 8.3125M10.2497 8.3125L7 10.0625L3.75025 8.3125\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    success: `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5 7.5L6.5 9L9 5.5M13 7C13 7.78793 12.8448 8.56815 12.5433 9.2961C12.2417 10.0241 11.7998 10.6855 11.2426 11.2426C10.6855 11.7998 10.0241 12.2417 9.2961 12.5433C8.56815 12.8448 7.78793 13 7 13C6.21207 13 5.43185 12.8448 4.7039 12.5433C3.97595 12.2417 3.31451 11.7998 2.75736 11.2426C2.20021 10.6855 1.75825 10.0241 1.45672 9.2961C1.15519 8.56815 1 7.78793 1 7C1 5.4087 1.63214 3.88258 2.75736 2.75736C3.88258 1.63214 5.4087 1 7 1C8.5913 1 10.1174 1.63214 11.2426 2.75736C12.3679 3.88258 13 5.4087 13 7Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    telephone: `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.5 4.5C1.5 10.0227 5.97733 14.5 11.5 14.5H13C13.3978 14.5 13.7794 14.342 14.0607 14.0607C14.342 13.7794 14.5 13.3978 14.5 13V12.0853C14.5 11.7413 14.266 11.4413 13.932 11.358L10.9833 10.6207C10.69 10.5473 10.382 10.6573 10.2013 10.8987L9.55467 11.7607C9.36667 12.0113 9.042 12.122 8.748 12.014C7.65659 11.6128 6.66544 10.9791 5.84319 10.1568C5.02094 9.33456 4.38725 8.34341 3.986 7.252C3.878 6.958 3.98867 6.63333 4.23933 6.44533L5.10133 5.79867C5.34333 5.618 5.45267 5.30933 5.37933 5.01667L4.642 2.068C4.60143 1.9058 4.50781 1.7618 4.37604 1.65889C4.24426 1.55598 4.08187 1.50006 3.91467 1.5H3C2.60218 1.5 2.22064 1.65804 1.93934 1.93934C1.65804 2.22064 1.5 2.60218 1.5 3V4.5Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    twitter: `<svg width=\"22\" height=\"18\" viewBox=\"0 0 22 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M21.2125 2.65605C20.4491 2.99375 19.6395 3.21555 18.8106 3.31411C19.6839 2.79132 20.3374 1.9689 20.6493 1.00005C19.8287 1.48761 18.9305 1.83077 17.9938 2.01461C17.2031 1.17106 16.098 0.693029 14.9418 0.694339C12.6326 0.694339 10.7597 2.56661 10.7597 4.87683C10.7597 5.20458 10.7973 5.52242 10.8676 5.82909C7.39048 5.65404 4.31008 3.99005 2.24678 1.45941C1.87529 2.09767 1.68006 2.82318 1.68105 3.56167C1.68105 5.01259 2.41961 6.29324 3.5415 7.043C2.87738 7.022 2.22789 6.84264 1.64719 6.51973C1.64655 6.5373 1.64654 6.55487 1.64654 6.57148C1.64654 8.5984 3.0882 10.2892 5.002 10.6731C4.64281 10.7703 4.27233 10.8194 3.90022 10.8191C3.62997 10.8191 3.36772 10.7942 3.1128 10.7453C3.64532 12.4065 5.18886 13.6159 7.0196 13.6491C5.53813 14.8118 3.70869 15.4426 1.82543 15.4399C1.49212 15.4402 1.15909 15.4205 0.828125 15.3811C2.74004 16.6102 4.96552 17.2625 7.23842 17.2601C14.9316 17.2601 19.138 10.8875 19.138 5.36111C19.138 5.1803 19.1336 4.99886 19.1256 4.81997C19.9443 4.22845 20.651 3.49567 21.2125 2.65605Z\" fill=\"currentColor\"/></svg>`,\n\n    up: `<svg width=\"10\" height=\"12\" viewBox=\"0 0 10 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.66663 4.66669L4.99996 1.33335M4.99996 1.33335L8.33329 4.66669M4.99996 1.33335V10.6667\" stroke=\"currentColor\" stroke-width=\"1.8\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    upload: `<svg width=\"36\" height=\"31\" viewBox=\"0 0 36 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13 2.25H9.52C8.71825 2.25015 7.93765 2.50725 7.29274 2.98358C6.64783 3.45992 6.17256 4.1304 5.93667 4.89667L1.91667 17.9617C1.80656 18.3185 1.75039 18.6899 1.75 19.0633V26C1.75 26.9946 2.14509 27.9484 2.84835 28.6516C3.55161 29.3549 4.50544 29.75 5.5 29.75H30.5C31.4946 29.75 32.4484 29.3549 33.1516 28.6516C33.8549 27.9484 34.25 26.9946 34.25 26V19.0633C34.25 18.69 34.1933 18.3183 34.0833 17.9617L30.0667 4.89667C29.8308 4.1304 29.3555 3.45992 28.7106 2.98358C28.0657 2.50725 27.2851 2.25015 26.4833 2.25H23M1.75 18.5H8.18333C8.87966 18.5002 9.56219 18.6942 10.1545 19.0604C10.7467 19.4266 11.2253 19.9505 11.5367 20.5733L11.9633 21.4267C12.2748 22.0498 12.7537 22.5738 13.3463 22.94C13.9388 23.3062 14.6217 23.5001 15.3183 23.5H20.6817C21.3783 23.5001 22.0612 23.3062 22.6537 22.94C23.2463 22.5738 23.7252 22.0498 24.0367 21.4267L24.4633 20.5733C24.7748 19.9502 25.2537 19.4262 25.8463 19.06C26.4388 18.6938 27.1217 18.4999 27.8183 18.5H34.25M18 1V14.75M18 14.75L13 9.75M18 14.75L23 9.75\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    user: `<svg width=\"12\" height=\"16\" viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.49982 4C8.49982 4.66304 8.23643 5.29893 7.76759 5.76777C7.29875 6.23661 6.66286 6.5 5.99982 6.5C5.33678 6.5 4.7009 6.23661 4.23205 5.76777C3.76321 5.29893 3.49982 4.66304 3.49982 4C3.49982 3.33696 3.76321 2.70107 4.23205 2.23223C4.7009 1.76339 5.33678 1.5 5.99982 1.5C6.66286 1.5 7.29875 1.76339 7.76759 2.23223C8.23643 2.70107 8.49982 3.33696 8.49982 4V4ZM1.00049 13.412C1.02191 12.1002 1.55805 10.8494 2.49327 9.92936C3.4285 9.00929 4.68788 8.49365 5.99982 8.49365C7.31176 8.49365 8.57114 9.00929 9.50637 9.92936C10.4416 10.8494 10.9777 12.1002 10.9992 13.412C9.43075 14.1312 7.72525 14.5023 5.99982 14.5C4.21582 14.5 2.52249 14.1107 1.00049 13.412Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    'user-card': `<svg width=\"16\" height=\"12\" viewBox=\"0 0 16 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 4H12.5M10 6H12.5M10 8H12.5M3 11H13C13.3978 11 13.7794 10.842 14.0607 10.5607C14.342 10.2794 14.5 9.89782 14.5 9.5V2.5C14.5 2.10218 14.342 1.72064 14.0607 1.43934C13.7794 1.15804 13.3978 1 13 1H3C2.60218 1 2.22064 1.15804 1.93934 1.43934C1.65804 1.72064 1.5 2.10218 1.5 2.5V9.5C1.5 9.89782 1.65804 10.2794 1.93934 10.5607C2.22064 10.842 2.60218 11 3 11ZM7 4.25C7 4.41415 6.96767 4.5767 6.90485 4.72835C6.84203 4.88001 6.74996 5.01781 6.63388 5.13388C6.51781 5.24996 6.38001 5.34203 6.22835 5.40485C6.0767 5.46767 5.91415 5.5 5.75 5.5C5.58585 5.5 5.4233 5.46767 5.27165 5.40485C5.11999 5.34203 4.98219 5.24996 4.86612 5.13388C4.75004 5.01781 4.65797 4.88001 4.59515 4.72835C4.53233 4.5767 4.5 4.41415 4.5 4.25C4.5 3.91848 4.6317 3.60054 4.86612 3.36612C5.10054 3.1317 5.41848 3 5.75 3C6.08152 3 6.39946 3.1317 6.63388 3.36612C6.8683 3.60054 7 3.91848 7 4.25ZM7.86267 8.474C7.2122 8.82047 6.48632 9.00114 5.74933 9C5.0128 9.00092 4.2874 8.82025 3.63733 8.474C3.79619 8.0415 4.08396 7.66817 4.46178 7.40445C4.83959 7.14072 5.28925 6.99931 5.75 6.99931C6.21075 6.99931 6.66041 7.14072 7.03822 7.40445C7.41604 7.66817 7.70381 8.0415 7.86267 8.474Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n\n    validation: `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7 10.75L9.25 13L13 7.75M19 10C19 11.268 18.37 12.39 17.407 13.068C17.5108 13.6608 17.4701 14.2698 17.2886 14.8436C17.107 15.4173 16.7899 15.9388 16.364 16.364C15.9388 16.7899 15.4173 17.107 14.8436 17.2886C14.2698 17.4701 13.6608 17.5108 13.068 17.407C12.7222 17.8995 12.2629 18.3014 11.7288 18.5787C11.1948 18.856 10.6017 19.0005 10 19C8.732 19 7.61 18.37 6.932 17.407C6.33923 17.5107 5.73021 17.47 5.15649 17.2885C4.58276 17.1069 4.06122 16.7898 3.636 16.364C3.21013 15.9388 2.89298 15.4173 2.71142 14.8436C2.52987 14.2698 2.48925 13.6608 2.593 13.068C2.10052 12.7222 1.69862 12.2629 1.42133 11.7288C1.14403 11.1948 0.999511 10.6017 1 10C1 8.732 1.63 7.61 2.593 6.932C2.48925 6.33923 2.52987 5.73019 2.71142 5.15645C2.89298 4.58271 3.21013 4.06117 3.636 3.636C4.06122 3.21019 4.58276 2.8931 5.15649 2.71154C5.73021 2.52999 6.33923 2.48933 6.932 2.593C7.27785 2.10058 7.73722 1.69873 8.27126 1.42144C8.80529 1.14415 9.39827 0.999595 10 1C11.268 1 12.39 1.63 13.068 2.593C13.6608 2.48933 14.2698 2.52999 14.8435 2.71154C15.4172 2.8931 15.9388 3.21019 16.364 3.636C16.7898 4.06122 17.1069 4.58276 17.2885 5.15649C17.47 5.73021 17.5107 6.33923 17.407 6.932C17.8995 7.27779 18.3014 7.73715 18.5787 8.2712C18.856 8.80525 19.0005 9.39825 19 10V10Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>`,\n  };\n  constructor() {}\n\n  getSVG(icon: string) {\n    // const ret:{icon?:IconType}={}\n    return { icon: this.icons[icon] };\n  }\n\n  registerSVGIcons = (icons: { iconName: string; svgStr: string }[]) => {\n    for (const item of icons) {\n      this.icons[item.iconName] = item.svgStr;\n    }\n  };\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { SVGIconType } from './svg-icon.model';\nimport { SvgIconService } from './svg-icon.service';\n\n@Component({\n    selector: 'svg-icon',\n    templateUrl: './svg-icon.component.html',\n    styleUrls: ['./svg-icon.component.scss'],\n    standalone: true,\n})\nexport class SvgIconComponent implements OnInit {\n  @Input() class: string='svg-icon';\n  config = { color: `currentColor`, onhover: `var(--primary)` };\n  // config = { color: `#828282`, onhover: `var(--primary)` };\n  icon: string;\n  @Input('icon') set _icon(v: string) {\n    this.icon = this.svgIconS.getSVG(v).icon;\n    if(this.icon)\n    this.icon = this.icon.replaceAllSubStr('{{color}}', this.config.color);\n    //  if(v) debugger\n    this.ngAfterViewInit();\n  }\n  @ViewChild('iconTag') iconRef: ElementRef<HTMLSpanElement>;\n  constructor(public svgIconS: SvgIconService) {}\n\n  ngOnInit(): void {}\n  ngAfterViewInit(): void {\n    if (this.icon && this.iconRef?.nativeElement)\n      this.iconRef.nativeElement.innerHTML = this.icon;\n  }\n}","<span class=\"{{class}} svg-icon\" #iconTag>\n    <!-- {{icon}} -->\n    <!-- <img class=\"svg-icon\" src=\"{{icon}}\"> -->\n</span>","import { Injectable } from '@angular/core';\n\nimport { BtnType, IconType } from '../../models/index.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BtnService {\n  btnClasses: { [x in BtnType]?: string } = {\n    primary: 'btn btn-primary w-100',\n    secondary: 'btn btn-secondary   w-100',\n    light: 'btn btn-light  w-100',\n    outline: 'btn btn-outline-primary w-100',\n    'outline-light': 'btn btn-outline-light w-100',\n    clear: 'btn btn-clear w-100',\n    'clear-pm': 'btn btn-clear text-primary w-100',\n    'dark-outline': 'btn btn-outline-dark w-100',\n    'outline-nm': 'btn btn-outline-primary w-100',\n    dark: 'btn btn-dark w-100',\n    danger: 'btn btn-danger w-100',\n    'danger-outline': 'btn btn-outline-danger w-100',\n    close: 'btn  text-danger',\n    success: 'btn btn-success w-100',\n  };\n  constructor() {}\n  getIcon = (iconType: IconType) => {\n    let icon,\n      iconString,\n      iconPosition = 'left';\n    switch (iconType) {\n      case 'calendar':\n        iconString = 'fas fa-calendar-alt';\n        break;\n\n      case 'close':\n        iconString = 'fa fa-close';\n        break;\n\n      case 'link':\n        iconString = 'fas fa-chain';\n        break;\n      default:\n        icon = null;\n        break;\n    }\n    return { icon, iconPosition, iconString };\n  };\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { UntypedFormArray, FormControl, FormGroup, FormArray } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { IFormSchema } from '../../models/form-schema.model';\nimport { IconType, BtnType, BtnGroup, IBtn } from '../../models/index.model';\nimport { SVGIconType } from '../svg-icon/svg-icon.model';\nimport { BtnService } from './btn.service';\nimport { SvgIconComponent } from '../svg-icon/svg-icon.component';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass, NgIf, NgFor } from '@angular/common';\n\n@Component({\n  selector: 'app-btn,btn',\n  templateUrl: './btn.component.html',\n  styleUrls: ['./btn.component.scss'],\n  standalone: true,\n  imports: [\n    NgClass,\n    NgIf,\n    MatTooltipModule,\n    MatMenuModule,\n    MatBadgeModule,\n    SvgIconComponent,\n    NgFor,\n  ],\n}) // Inherited\nexport class BtnComponent implements OnInit {\n  /** To be passed when to check for specific invalid form fields */\n  @Input() formSchema: IFormSchema<typeof this.form>[];\n  formIsInvalid: boolean;\n  @Input('icon') set _icon(v: SVGIconType | 'edit' | 'more') {\n    // const res = this.btnS.getIcon(v);\n    // this.iconPosition = res.iconPosition;\n    // this.icon = res.icon;\n    // this.customIcon = res.iconString;\n    switch (v) {\n      case 'edit':\n        this.customIcon = 'fa fa-pen';\n        break;\n      case 'more':\n        this.customIcon = 'fa fa-ellipsis-v';\n        break;\n\n      default:\n        this.icon = v;\n        break;\n    }\n  }\n  @Input('type') set _type(v: BtnType) {\n    // debugger\n    this._mclass = this.btnS.btnClasses[v || 'primary'];\n  }\n  @Input('group') set _group(v: BtnGroup) {\n    switch (v) {\n      case 'add':\n        this._type = 'outline';\n        // this._icon = 'add';\n        this.iconBtn = true;\n        break;\n      case 'clone':\n        this._type = 'secondary';\n        // this._icon = 'clone';\n        this.text = 'Clone';\n        break;\n      case 'create':\n        this._type = 'outline';\n        // this._icon = 'add';\n        this.text = 'Create';\n        break;\n      case 'close':\n        this._type = 'danger-outline';\n        this.customIcon = this.btnS.getIcon('close').iconString;\n        this.iconBtn = true;\n        break;\n      case 'delete':\n        this._type = 'danger-outline';\n        // this._icon = 'delete';\n        this.iconBtn = true;\n        break;\n      case 'download':\n        this._type = 'secondary';\n        // this._icon = 'download';\n        this.iconBtn = true;\n        break;\n      case 'edit':\n        this._type = 'secondary';\n        // this._icon = 'edit';\n        this.iconBtn = true;\n        break;\n      case 'link':\n        this._type = 'secondary';\n        this.customIcon = 'fa fa-link';\n        this.iconBtn = true;\n        break;\n      case 'search':\n        this._type = 'secondary';\n        // this._icon = 'search';\n        this.iconBtn = true;\n        break;\n      case 'show':\n        this._type = 'secondary';\n        // this._icon = 'show';\n        this.text = 'Show';\n        break;\n      case 'submit':\n        this._type = 'primary';\n        this.text = 'Submit';\n        break;\n    }\n  }\n  _mclass: string;\n  @Input() actionType: 'submit' | 'button' | 'reset' = 'button';\n  @Input() animate = false;\n  @Input() badge: string | number;\n  @Input() class: string;\n  @Input() customIcon: string;\n  @Input() disabled = false;\n  @Input() form: FormGroup | FormControl | FormArray;\n  @Input() help: string;\n  @Input() iconBtn = false;\n  @Input() lite: boolean;\n  @Input() loading: boolean;\n  @Input() mclass: string;\n  @Input() showHelpIcon = true;\n  @Input() mini: boolean;\n  @Input() text: string;\n  @Input() valid = true;\n  @Input() subButtons: IBtn[];\n  @Input() onFormInvalid: keyof typeof OnFormInvalid = OnFormInvalid.disable;\n  @Output() mclick = new EventEmitter();\n  icon: any;\n  iconPosition: string = 'left';\n  constructor(public btnS: BtnService) {}\n\n  ngOnInit(): void {\n    if (!this._mclass) this._type = 'primary';\n    let formSub: Subscription;\n    if (this.form && this.formSchema?.length)\n      formSub = this.form.statusChanges.subscribe((r) => {\n        // this.cdr.detectChanges();\n        // if (this.form instanceof FormGroup) {\n        //   debugger;\n        //   this.formIsInvalid = false;\n        //   for (const x of this.formSchema) {\n        //     const isValid = this.form.controls[x.field].valid;\n        //     if (!isValid) {\n        //       this.formIsInvalid = true;\n        //       break;\n        //     }\n        //   }\n        // }\n\n        this.formIsInvalid = this.formSchema.some(\n          (f) => (<FormGroup>this.form).controls[f.field?.toString()]?.invalid\n        );\n      });\n    else formSub?.unsubscribe();\n  }\n  checkForm() {\n    if (this.isDisabled && this.form) {\n      this.form.markAllAsTouched();\n      // this.cdr.detectChanges();\n      console.log(this.form);\n      console.log(this.form.getRawValue());\n    }\n  }\n  click($event?) {\n    // debugger\n    if (!this.isDisabled && !this.loading) this.mclick.emit($event);\n  }\n  get isDisabled() {\n    return (\n      this.disabled ||\n      !this.valid ||\n      this.formIsInvalid ||\n      (!this.formSchema && (this.form?.invalid || this.form?.pending))\n    );\n  }\n  /**\n   * Set loader state\n   * @param value Loader state\n   */\n  setLoader(value: boolean) {\n    this.loading = value;\n  }\n}\nenum OnFormInvalid {\n  disable = 'disable',\n  warn = 'warn',\n}\n","<span class=\"  text-center d-flex  align-items-center justify-content-center\" [ngClass]=\"{mini}\" (click)=\"checkForm()\">\n  <i *ngIf=\"showHelpIcon && help\" class=\"fa fa-info-circle me-2 text-primary\" [matTooltip]=\"help\"></i>\n  <button [matMenuTriggerFor]=\"subButtons?.length?menu:null\" type=\"{{actionType}}\" class=\"{{mclass}} {{_mclass}} \"\n    [disabled]=\"isDisabled\" [matBadge]=\"badge\" [ngClass]=\"{'changecolor': valid,'btn-raised':animate,   'd-flex justify-content-center':\n    !text}\" (click)=\"click($event)\" [matTooltip]=\"showHelpIcon?null:(help)\">\n    <div class=\"w-100\" [hidden]=\"loading\">\n      <span [ngClass]=\"{'pe-1 ms-1':!iconBtn}\" *ngIf=\"iconPosition=='left' && (icon||customIcon)\">\n        <svg-icon *ngIf=\"icon\" [icon]=\"icon\"></svg-icon>\n        <i *ngIf=\"customIcon\" class=\"{{customIcon}}\"></i>\n      </span>\n      <ng-container *ngIf=\"text; else elseTemplate\">\n        {{text}}\n      </ng-container>\n      <ng-template #elseTemplate>\n        <span appTranslator>\n          <ng-content></ng-content>\n        </span>\n      </ng-template>\n      <span [ngClass]=\"{'ps-1':!iconBtn}\" *ngIf=\"iconPosition=='right'\">\n        <svg-icon *ngIf=\"icon\" [icon]=\"icon\"></svg-icon>\n      </span>\n    </div>\n    <ng-container *ngIf=\"loading\">\n      <div class=\"lds-ellipsis\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </ng-container>\n  </button>\n</span>\n<mat-menu #menu=\"matMenu\" xPosition=\"after\" class=\"rounded-16\">\n  <button mat-button mat-menu-item (click)=\"isDisabled?item.action():null\"\n    *ngFor=\"let item of subButtons\">{{item.label}}</button>\n</mat-menu>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgIf, NgTemplateOutlet } from '@angular/common';\n\n@Component({\n    selector: 'info-icon',\n    templateUrl: './info-icon.component.html',\n    styleUrls: ['./info-icon.component.scss'],\n    standalone: true,\n    imports: [\n        NgIf,\n        NgTemplateOutlet,\n        MatTooltipModule,\n    ],\n})\nexport class InfoIconComponent implements OnInit {\n  @Input() text: string;\n  @Input() coloured = true;\n  @Input() left =false;\n  @Input() right = true;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<span class=\"d-flex align-items-center\">\n  <ng-container *ngIf=\"left && text\">\n    <ng-container *ngTemplateOutlet=\"iconTag\"></ng-container>\n  </ng-container>\n  <ng-content></ng-content>\n  <ng-container *ngIf=\"right && text\">\n    <ng-container *ngTemplateOutlet=\"iconTag\"></ng-container>\n  </ng-container>\n</span>\n\n\n<ng-template #iconTag>\n  <i class=\"fa fa-info-circle\" [matTooltip]=\"text\" matTooltipClass=\" \"></i>\n</ng-template>","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatFormFieldAppearance, MatFormFieldModule } from '@angular/material/form-field';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { EValidationType, InputType, IValidationMessage } from '../../models/index.model';\nimport { SVGIconType } from '../svg-icon/svg-icon.model';\nimport { InputService } from './input.service';\nimport { MatSelectModule } from '@angular/material/select';\nimport {\n  MatCheckboxChange,\n  MatCheckboxModule,\n  _MatCheckboxRequiredValidatorModule,\n} from '@angular/material/checkbox';\nimport {\n  MatSlideToggleChange,\n  MatSlideToggleModule,\n  _MatSlideToggleRequiredValidatorModule,\n} from '@angular/material/slide-toggle';\nimport { ToAnyPipe } from '../../pipes/utility.pipe';\nimport { InputClassPipe } from './inputs-pipes.pipe';\nimport {\n  ValidationMessageComponent,\n  ErrorMessagesPipe,\n} from './validation-message/validation-message.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { SvgIconComponent } from '../svg-icon/svg-icon.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { BtnComponent } from '../btn/btn.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { InfoIconComponent } from '../info-icon/info-icon.component';\nimport { NgClass, NgIf, NgSwitch, NgSwitchCase, NgFor, NgSwitchDefault } from '@angular/common';\nimport { configValidationMessages } from '../../../config/validation-messages.config';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  standalone: true,\n  imports: [\n    NgClass,\n    FormsModule,\n    ReactiveFormsModule,\n    NgIf,\n    InfoIconComponent,\n    NgSwitch,\n    NgSwitchCase,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    BtnComponent,\n    MatSlideToggleModule,\n    _MatSlideToggleRequiredValidatorModule,\n    MatCheckboxModule,\n    _MatCheckboxRequiredValidatorModule,\n    NgFor,\n    MatInputModule,\n    SvgIconComponent,\n    MatSelectModule,\n    MatOptionModule,\n    MatTooltipModule,\n    NgSwitchDefault,\n    ValidationMessageComponent,\n    InputClassPipe,\n    ToAnyPipe,\n    ErrorMessagesPipe,\n  ],\n})\nexport class InputBasicComponent<\n  TFormGroup extends {\n    [K in keyof TFormGroup]: AbstractControl<any, any>;\n  } = any,\n  TControl = string,\n  TOption = any\n> implements OnInit\n{\n  @Input() accept?: string;\n  @Input() autocomplete?: boolean = true;\n  @Input() autoPickValueField?: boolean;\n  @Input() clearOnDisable?: boolean = false;\n  @Input() cls?: string;\n  @Input() colored?: boolean = true;\n  @Input() checked?: boolean = false; //optional checked option for checkboxes\n  @Input() contextData?: any;\n  @Input() dashboardInput?: boolean;\n  @Input() debug?: boolean;\n  @Input() decimalPoints?: number;\n  @Input() endLabel?: string;\n  @Input() endLabelTooltip?: string;\n  @Input() files?: File[];\n  form?: FormGroup<TFormGroup>;\n  validationType?: EValidationType;\n  validations?: IValidationMessage[];\n  /** FormGroup */\n  @Input({ required: true, alias: 'form' }) set _form(v: FormGroup<TFormGroup>) {\n    this.form = v;\n    this.control = this.form ? this.form.controls[this.name as any] : null;\n  }\n  @Input() noFormat?: boolean;\n  @Input() hide?: boolean;\n  @Input() hint?: string;\n  @Input() icon?: SVGIconType;\n  @Input() id?: string = 'id' + Math.round(Math.random() * 1000000);\n  @Input() inpCl?: string = 'control-bg-gray';\n  @Input() label?: string;\n  @Input() labelLink?: string;\n  @Input() labelField?: keyof TOption;\n  @Input() labelType?: OptionLabelType; //use this to pick a preset value label group for the options\n  @Input() lblCl?: string = '2';\n  @Input() light?: boolean = true;\n  @Input() loading?: boolean;\n  @Input() max?: number;\n  @Input() min?: number;\n  @Input() mini?: boolean;\n  @Input() multiple?: boolean;\n  name?: keyof TFormGroup;\n  control?: FormControl<TControl>;\n  /** FormControlName */\n  @Input('name') set _name(v: keyof TFormGroup) {\n    if (!this.form) this.form = new FormGroup({ [v]: new FormControl() }) as any;\n    this.name = v;\n    this.control = this.form.controls[this.name as any];\n  }\n  @Input() optionFormatter?: (item: TOption) => string;\n  @Input() optionsInitFunc?: () => Observable<TOption[]>;\n  @Input() placeholder?: string;\n  @Input() prefix?: string;\n  @Input() startField?: string;\n  @Input() endField?: string;\n  @Input() readonly?: boolean;\n  @Input() required?: boolean;\n  @Input() noPaste?: boolean;\n  @Input() showEmptyOption?: boolean = false;\n  @Input() showLabel?: boolean;\n  @Input() showSeperateLabel?: boolean = this.iS.defaultValue.showSeperateLabel;\n  @Input() showValidation?: boolean = false;\n  @Input() showValidationMsg?: boolean =  this.iS.defaultValue.showValidationMsg;\n  @Input() showValidationIcon?: boolean;\n  @Input() small?: boolean;\n  @Input() stacked?: boolean = true;\n  @Input() suffix?: string;\n  @Input() theme?: InputTheme = 1;\n  @Input() translateOptions?: boolean = false;\n  @Input() valueField?: keyof TOption; //use this to choose a field in the option for modeling\n  @Input() vms?: IValidationMessage[];\n  @Input() xsmall: boolean;\n  @Output() mchange = new EventEmitter();\n  @Output() validityChecked = new EventEmitter();\n  @Output() mSelectOptionChange = new EventEmitter();\n  @Output() mContextChange = new EventEmitter();\n  disabled?: boolean;\n  options?: IOption[];\n  options$? = new ReplaySubject<IOption[]>();\n  rawOptions?: any[];\n  showPassword?: boolean;\n  type?: InputType;\n  viewInited?: boolean;\n  forcePatched?: boolean;\n  selectionObject?: TOption;\n  oType?: InputType;\n  @Input() appearance: MatFormFieldAppearance = 'outline';\n  @Input('validationKey') set _validationKey(v: EValidationType) {\n    // debugger;\n    this.validationType = v;\n    this.validations = configValidationMessages[this.validationType];\n  }\n  @Input('disabled') set _disabled(v: boolean) {\n    if (this.debug) debugger;\n    this.disabled = v;\n    if (this.control?.parent?.disabled) return;\n    if (v) {\n      if (this.clearOnDisable) this.control?.reset();\n      this.control?.disable();\n    } else if (this.control?.disabled) {\n      this.control?.enable();\n    }\n  }\n  @Input() customSelectChangeAction: (\n    val: string | number,\n    options: any[],\n    rawOptions: any[]\n  ) => any;\n  @Input('options') set _options(v: TOption[]) {\n    // debugger\n    // console.log('options', v);\n    if (!v && this.optionsInitFunc) return;\n    this.rawOptions = v;\n    this.options = this.iS.optionsFormatter(\n      v,\n      this.valueField as string,\n      this.optionFormatter,\n      this.labelType,\n      this.labelField as string,\n      this.autoPickValueField\n    );\n    // debugger\n    this.options$.next(this.options);\n  }\n  @Input('type') set _type(v: InputType) {\n    this.oType = v;\n    if (v == 'percentage') {\n      this.type = 'number';\n      this.max = 100;\n      this.min = 0;\n    } else this.type = v;\n    // if (this.forcePatched) {\n    //   this.control.reset();\n    //   this.forcePatched = false;\n    // }\n    // if (v == 'checkbox' && (this.value == null || this.value == undefined)) {\n    //   this.control?.patchValue(false);\n    //   this.forcePatched = true;\n    // }\n  }\n  __value: string | number;\n  @Input('mvalue') set _value(v: string | number) {\n    this.__value = v;\n  }\n  @ViewChild('inp') inpTag: ElementRef<HTMLInputElement>;\n  imagePaths?: string[];\n  constructor(public iS: InputService) {}\n\n  ngOnInit(): void {\n    if (this.showLabel == null) this.showLabel = !!this.label;\n    if (this.autoPickValueField) {\n      this.labelType = 'cdt';\n      this.valueField = 'code' as any;\n    }\n    if (this.min == 0 && this.max == 100) this.oType = 'percentage';\n    if (this.type == 'viewer' && (this.noFormat == null || this.noFormat == undefined))\n      this.noFormat = true;\n\n    if (!this.validationType) this._validationKey = EValidationType.normal;\n\n    this.control?.valueChanges.subscribe((r) => {\n      // this.validityChecked.emit(r);\n      this.mchange.emit(r);\n    });\n\n    if (this.optionsInitFunc) {\n      this.optionsInitFunc().subscribe((r) => {\n        this._options = r;\n        // this.optionsMap[scheme.field] = r;\n      });\n    }\n  }\n  ngAfterViewInit(): void {\n    // this.viewInited = true;\n    if (this.noPaste) document.getElementById(this.id).onpaste = (e) => e.preventDefault();\n  }\n  disableControl(control: AbstractControl = this.control) {\n    if (!this.disabled) return;\n    control?.disable({ emitEvent: false });\n  }\n  get isRequired() {\n    return this.required || this.control?.hasValidator(Validators.required);\n  }\n  change(e: any | MatCheckboxChange | MatSlideToggleChange) {\n    // debugger;\n    let val = e;\n    if (e instanceof MatCheckboxChange || e instanceof MatSlideToggleChange) {\n      val = e.checked;\n    } else {\n      val = e.value || (e?.target?.value as any);\n    }\n    if (this.type == 'number') {\n      if (this.max && +val > this.max) {\n        this.control.setValue(this.max as any);\n      } else if (this.min != null && this.min != undefined && +val < this.min) {\n        this.control.setValue(this.min as any);\n      }\n      if (this.decimalPoints != undefined && this.decimalPoints != null)\n        this.control.setValue(+(+val).toFixed(this.decimalPoints) as any);\n    }\n    this.__value = this.control.value as any;\n    // this.mchange.emit(this.control.value);\n    // debugger\n    if (this.rawOptions) {\n      this.selectionObject = this.rawOptions.find((x) => x[this.valueField] == this.__value);\n      this.mSelectOptionChange.emit(this.selectionObject);\n    }\n    if (this.customSelectChangeAction) {\n      this.mContextChange.emit(\n        this.customSelectChangeAction(this.control.value as any, this.options, this.rawOptions)\n      );\n    }\n  }\n\n  get valid() {\n    return this.control?.valid && this.control?.touched;\n  }\n  get invalid() {\n    return this.control?.invalid && this.control?.touched;\n  }\n  get value() {\n    return this.control?.value;\n  }\n  get hasValue() {\n    return !!this.control?.value?.toString()?.trim();\n  }\n  get invalidCheckbox() {\n    return this.invalid && this.type == 'checkbox';\n  }\n  upload(e) {\n    this.files = Array.from(e.target.files);\n    this.control?.patchValue(this.files[0] as any);\n    this.mchange.emit(e);\n    this.imagePaths = [];\n    this.files.forEach((f) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.imagePaths.push(e.target.result as string);\n      };\n      reader.readAsDataURL(f);\n    });\n  }\n  log() {\n    console.log(this.form);\n  }\n}\ntype InputTheme = 1 | 2;\nexport type OptionLabelType =\n  | 'bnk'\n  | 'ccd'\n  | 'cd'\n  | 'cdt'\n  | 'cf'\n  | 'cmd'\n  | 'cn'\n  | 'ct'\n  | 'gd'\n  | 'ha'\n  | 'id'\n  | 'if'\n  | 'ifl'\n  | 'it'\n  | 'md'\n  | 'pd'\n  | 'nf'\n  | 'td'\n  | 'title'\n  | 'ud'\n  | 'uf'\n  | 'vl'\n  | 'vv';\nexport interface IOption {\n  value: any;\n  label: string;\n}\n","<div class=\"  {{type}}  \" [ngClass]=\"{showValidation,dashboardInput}\" [formGroup]=\"form\">\n  <div class=\"d-flex align-items-center mb-8\" *ngIf=\"showSeperateLabel\" (click)=\"log()\">{{label}}\n    <span *ngIf=\"hint\" class=\"ms-8\">\n      <info-icon [text]=\"hint\" />\n    </span>\n  </div>\n  <ng-container [ngSwitch]=\"type\">\n    <!-- TOGGLE -->\n    <ng-container *ngSwitchCase=\"'date-range'\">\n      <mat-form-field [appearance]=\"appearance\" class=\"custom-input\">\n        <mat-date-range-input [formGroup]=\"control|toAny\" [rangePicker]=\"picker\">\n          <input formControlName=\"{{startField}}\" matStartDate placeholder=\"Start date\">\n          <input formControlName=\"{{endField}}\" matEndDate placeholder=\"End date\">\n        </mat-date-range-input>\n        <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\n        <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker>\n          <mat-date-range-picker-actions>\n            <app-btn text=\"Cancel\" type=\"outline\" matDatepickerCancel></app-btn>\n            <div class=\"ms-8\">\n\n            </div>\n            <app-btn text=\"Apply\" matDatepickerApply></app-btn>\n          </mat-date-range-picker-actions>\n        </mat-date-range-picker>\n      </mat-form-field>\n    </ng-container>\n    <!-- TOGGLE -->\n    <ng-container *ngSwitchCase=\"'toggle'\">\n      <mat-slide-toggle [formControlName]=\"name|toAny\" [required]=\"required\" (change)=\"change($event)\">{{label}}\n      </mat-slide-toggle>\n    </ng-container>\n    <!-- CHECKBOX -->\n    <ng-container *ngSwitchCase=\"'checkbox'\">\n      <mat-checkbox #mc class=\"circle-checkbox\" [formControlName]=\"name|toAny\" [required]=\"required\"\n        (change)=\"change($event)\">\n        {{label}}\n      </mat-checkbox>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'checkedbox'\">\n      <input type=\"checkbox\" class=\"{{ inpCl }} d-inline-block form-control width-unset\" [checked]=\"checked\"\n        [attr.data-debug]=\"debug\" [attr.data-noformat]=\"noFormat\" [required]=\"required\" [readonly]=\"readonly\"\n        (change)=\"change($event)\" />\n    </ng-container>\n    <!-- FILE -->\n    <ng-container *ngSwitchCase=\"'file'\">\n      <input type=\"file\" id=\"{{ id }}\" class=\"p-8 {{inpCl | inputClass: valid:invalid:showValidation}}\"\n        (change)=\"upload($event)\" [accept]=\"accept\" [attr.multiple]=\"multiple\" />\n      <div *ngFor=\"let imagePath of imagePaths\">\n        <img src=\"{{imagePath}}\" alt=\"{{label}} image\" class=\"image-preview mt-8\">\n      </div>\n    </ng-container>\n    <!-- Date -->\n    <ng-container *ngSwitchCase=\"'date'\">\n      <mat-form-field [appearance]=\"appearance\" class=\"custom-input\">\n        <input matInput [matDatepicker]=\"datepicker\" (selectionChange)=\"change($event)\" [required]=\"required\"\n          [min]=\"min\" [max]=\"max\" placeholder=\"{{placeholder||label}}\" [formControlName]=\"name|toAny\" id=\"{{ id }}\">\n        <mat-datepicker-toggle matIconSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\n        <mat-datepicker #datepicker>\n          <mat-datepicker-actions>\n            <app-btn text=\"Cancel\" type=\"outline\" matDatepickerCancel></app-btn>\n            <div class=\"ms-8\">\n\n            </div>\n            <app-btn text=\"Apply\" matDatepickerApply></app-btn>\n          </mat-datepicker-actions>\n        </mat-datepicker>\n      </mat-form-field>\n    </ng-container>\n    <!-- SELECT -->\n    <ng-container *ngSwitchCase=\"'select'\">\n      <mat-form-field [appearance]=\"appearance\" class=\"custom-input\">\n        <div matPrefix class=\"prefix-icon\" *ngIf=\"icon\">\n          <svg-icon [icon]=\"icon\" (click)=\"log()\"></svg-icon>\n        </div>\n        <mat-select (selectionChange)=\"change($event)\" [required]=\"required\" placeholder=\"{{placeholder||label}}\"\n          [formControlName]=\"name|toAny\" id=\"{{ id }}\">\n          <mat-option *ngIf=\"showEmptyOption\" selected></mat-option>\n          <mat-option *ngFor=\"let item of options; trackBy: iS.trackByValue\" [value]=\"item.value\" #inp>\n            {{ item.label }}\n          </mat-option>\n        </mat-select>\n\n        <div matSuffix *ngIf=\"showValidation\">\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"valid\">\n              <span class=\"suffix-success\">\n                <svg-icon icon=\"success\"></svg-icon>\n              </span>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"invalid\">\n              <span class=\"suffix-error\" [matTooltip]=\"validations|errorMessages:label:max:min:control\">\n                <svg-icon icon=\"error\"></svg-icon>\n              </span>\n            </ng-container>\n          </ng-container>\n        </div>\n      </mat-form-field>\n    </ng-container>\n    <!-- TEXTAREA -->\n    <ng-container *ngSwitchCase=\"'textarea'\">\n      <textarea [formControlName]=\"name|toAny\" id=\"{{ id }}\" [class]=\"inpCl | inputClass: valid:invalid:showValidation\"\n        placeholder=\"{{label}}\" [attr.data-noformat]=\"noFormat\" [required]=\"required\" [readonly]=\"readonly\"\n        (change)=\"change($event)\"></textarea>\n    </ng-container>\n    <!-- Radio -->\n    <ng-container *ngSwitchCase=\"'radio'\">\n      <input type=\"radio\" [formControlName]=\"name|toAny\" id=\"{{ id }}\" [readonly]=\"readonly\" (change)=\"change($event)\"\n        [attr.data-noformat]=\"noFormat\" [value]=\"__value\" />\n    </ng-container>\n    <!-- Viewer -->\n    <ng-container *ngSwitchCase=\"'viewer'\">\n      <input type=\"text\" id=\"{{ id }}\" placeholder=\"{{ placeholder }}\" [attr.data-noformat]=\"noFormat\"\n        [class]=\"inpCl | inputClass: valid:invalid:showValidation\" [readonly]=\"true\" [value]=\"value\" />\n    </ng-container>\n    <!-- DEFAULT -->\n    <ng-container *ngSwitchDefault>\n      <mat-form-field [appearance]=\"appearance\">\n        <div matPrefix class=\"prefix-icon\" *ngIf=\"icon\">\n          <svg-icon [icon]=\"icon\" (click)=\"log()\"></svg-icon>\n        </div>\n        <div matPrefix class=\"prefix-text\" *ngIf=\"prefix\">\n          {{prefix}}\n        </div>\n        <input matInput type=\"{{showPassword?'text':type}}\" [formControlName]=\"name|toAny\" id=\"{{ id }}\"\n          [readonly]=\"readonly || disabled\" (change)=\"change($event)\" placeholder=\"{{placeholder||label}}\">\n\n        <div matSuffix class=\"d-flex align-items-center\" *ngIf=\"showValidation||type=='password'\">\n          <ng-container *ngIf=\"type=='password'\">\n            <span class=\"pointer showPassword\" (click)=\"showPassword=!showPassword\">\n              {{!showPassword?'Show':'hide'}}\n            </span>\n          </ng-container>\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"valid\">\n              <span class=\"suffix-success ms-8\">\n                <svg-icon icon=\"success\"></svg-icon>\n              </span>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"invalid\">\n              <span class=\"suffix-error ms-8\" [matTooltip]=\"validations|errorMessages:label:max:min:control\">\n                <svg-icon icon=\"error\"></svg-icon>\n              </span>\n            </ng-container>\n          </ng-container>\n        </div>\n      </mat-form-field>\n    </ng-container>\n  </ng-container>\n</div>\n<div *ngIf=\"showValidationMsg\">\n  <app-validation-message #vmTag [label]=\"label\" [control]=\"control\" [maxLength]=\"max\" [minLength]=\"min\"></app-validation-message>\n</div>","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { IOption } from '../input/input.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AutocompleteService {\n  constructor() {}\n  filterOptions(query: string, options: IOption[]) {\n    return new Observable<IOption[]>((sub) => {\n      const filterValue = this.normalizeValue(query);\n      sub.next(\n        filterValue\n          ? options?.filter((option) =>\n              this.normalizeValue(option.label)?.includes(filterValue)\n            )\n          : options\n      );\n    });\n  }\n\n  normalizeValue(value: string): string {\n    return value?.toString()?.toLowerCase().replace(/\\s/g, '');\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { AbstractControl, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent, MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { merge, Observable, of } from 'rxjs';\nimport { debounceTime, filter, mergeMap, startWith } from 'rxjs/operators';\nimport { InputBasicComponent, IOption } from '../input/input.component';\nimport { InputService } from '../input/input.service';\nimport { AutocompleteService } from './autocomplete.service';\nimport { ToAnyPipe } from '../../pipes/utility.pipe';\nimport { InputClassPipe } from '../input/inputs-pipes.pipe';\nimport { ValidationMessageComponent } from '../input/validation-message/validation-message.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { SvgIconComponent } from '../svg-icon/svg-icon.component';\nimport { InfoIconComponent } from '../info-icon/info-icon.component';\nimport { NgIf, NgFor, NgClass } from '@angular/common';\n\n@Component({\n    selector: 'app-autocomplete',\n    templateUrl: './autocomplete.component.html',\n    styleUrls: ['../input/input.component.scss', './autocomplete.component.scss'],\n    standalone: true,\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        NgIf,\n        InfoIconComponent,\n        SvgIconComponent,\n        MatAutocompleteModule,\n        MatOptionModule,\n        NgFor,\n        MatTooltipModule,\n        NgClass,\n        ValidationMessageComponent,\n        InputClassPipe,\n        ToAnyPipe,\n    ],\n})\nexport class AutocompleteComponent<\n  TFormGroup extends {\n    [K in keyof TFormGroup]: AbstractControl<any, any>;\n  } = any,\n  TControl = any,\n  TOption = any\n> extends InputBasicComponent<TFormGroup, TControl, TOption> {\n  filteredOptions: IOption[];\n  @Input() validate = true;\n  @Input() filterFunc: (...args) => Observable<any[]>;\n  constructor(\n    public override iS: InputService,\n    public autoS: AutocompleteService\n  ) {\n    super(iS);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.control?.addValidators(this.includesOption.bind(this));\n    this.control?.valueChanges.subscribe((r) => {\n      // debugger\n      super.change({ target: { value: r } });\n    });\n    // this.options$.subscribe((r) => {\n    //   if (this.debug) debugger;\n    //   (this.control as FormControl)?.patchValue(this.control?.value,{emitEvent:false});\n    //   if (this.control.disabled) this.control.disable({ emitEvent: false });\n    // });\n\n    merge(this.control.valueChanges.pipe(startWith('')), this.options$)\n      .pipe(\n        // filter((r) => !this.filterFunc),\n        mergeMap((r) =>\n          this.autoS.filterOptions(this.control.value as any, this.options)\n        )\n      )\n      .subscribe((r) => {\n        this.filteredOptions = r;\n      });\n    this.control.valueChanges\n      .pipe(startWith(''))\n      .pipe(\n        debounceTime(1000),\n        filter((r) => !!this.filterFunc),\n        mergeMap((r) =>\n          this.filterFunc(this.control.value as any, this.options)\n        )\n      )\n      .subscribe((r) => {\n        this._options = r as any[];\n      });\n  }\n\n  selected($event: MatAutocompleteSelectedEvent) {\n    this.filteredOptions = this.options;\n  }\n  \n  displayWith = (val: string) => {\n    return this.options?.find((x) => x.value == val)?.label || val;\n  };\n\n  includesOption = (control: AbstractControl) => {\n    const val = control?.value;\n    if (!val) return null;\n    if (!this.options || this.options.length === 0) return null;\n    // debugger\n    if (this.options.find((x) => x.value == val)) return null;\n    else return { notFound: true };\n  };\n}\n","<div class=\"row align-items-center\">\n  <div class=\"{{stacked?'col-12':'col-md'}} position-relative\">\n    <form [formGroup]=\"form|toAny\">\n\n      <div class=\"d-flex align-items-center mb-8\" *ngIf=\"showSeperateLabel\">{{label}}\n        <span *ngIf=\"hint\" class=\"ms-8\">\n          <info-icon [text]=\"hint\" />\n        </span>\n      </div>\n      <div class=\"position-relative\">\n        <div class=\"prefix-icon\" *ngIf=\"icon\">\n          <svg-icon [icon]=\"icon\" (click)=\"log()\"></svg-icon>\n        </div>\n        <input type=\"text\" data-noformat=\"true\" [formControlName]=\"name|toAny \" placeholder=\"{{placeholder||label}}\"\n          id=\"{{id}}\" [class]=\"inpCl|inputClass:valid:invalid:showValidation\" [required]=\"required\"\n          [readonly]=\"readonly\" #trigger=\"matAutocompleteTrigger\" [matAutocomplete]=\"auto\" #inp>\n        <i class=\"input-icon fa fa-chevron-down\" (click)=\"$event.stopPropagation(); trigger.openPanel()\"></i>\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayWith\" (optionSelected)=\"selected($event)\">\n          <mat-option *ngIf=\"showEmptyOption\" [value]=\"null\">\n\n          </mat-option>\n          <mat-option *ngFor=\"let item of filteredOptions ; trackBy:iS.trackByValue\" [value]=\"item.value\">\n            <div class=\"option\" [matTooltip]=\"item.label\" [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\" #ele>\n              {{item.label}}</div>\n          </mat-option>\n        </mat-autocomplete>\n        <ng-container *ngIf=\"control?.dirty && showValidation && showValidationIcon \">\n          <div [ngClass]=\"{valid:control?.valid}\" class=\" validity-icon\"><i class=\"fa fa-check\"></i></div>\n          <div [ngClass]=\"{pending:control?.pending}\" class=\" validity-icon\"><i class=\"fa fa-spinner fa-spin\"></i></div>\n          <div [ngClass]=\"{invalid:control?.invalid}\" class=\" validity-icon\"><i class=\"fa fa-times\"></i></div>\n        </ng-container>\n      </div>\n    </form>\n  </div>\n</div>\n<app-validation-message *ngIf=\"showValidationMsg\" [control]=\"control\" [label]=\"label\"></app-validation-message>","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { QueryParamsHandling, RouterLink } from '@angular/router'; \nimport { BtnComponent } from '../btn.component';\nimport { BtnService } from '../btn.service';\nimport { ToAnyPipe } from '../../../pipes/utility.pipe';\nimport { MatRippleModule } from '@angular/material/core';\nimport { NgIf, NgTemplateOutlet, NgClass } from '@angular/common';\n\n@Component({\n    selector: 'app-btn-lg',\n    templateUrl: './btn-lg.component.html',\n    styleUrls: ['./btn-lg.component.scss'],\n    standalone: true,\n    imports: [\n        NgIf,\n        MatRippleModule,\n        RouterLink,\n        NgTemplateOutlet,\n        NgClass,\n        ToAnyPipe,\n    ],\n})\nexport class BtnLgComponent extends BtnComponent {\n  @Input() queryParamsHandling: QueryParamsHandling;\n  @Input() route: string;\n  @Input() value: string | number;\n  @Input() subText: string;\n  @Input() subValue: string | number;\n  constructor( \n    public override btnS: BtnService, \n  ) {\n    super(  btnS, );\n  }\n \n}\n","<span class=\"section-cards\">\n  <ng-container *ngIf=\"route; else elseTemplate\">\n    <button matRipple class=\"btn-large\" routerLink=\"{{route}}\" [queryParamsHandling]='queryParamsHandling'>\n      <ng-container *ngTemplateOutlet=\"btnContent\">\n      </ng-container>\n    </button>\n  </ng-container>\n  <ng-template #elseTemplate>\n    <button matRipple class=\"btn-large\">\n      <ng-container *ngTemplateOutlet=\"btnContent\">\n      </ng-container>\n    </button>\n  </ng-template>\n\n\n</span>\n<ng-template #btnContent>\n  <div>\n    <div class=\"title\" [innerHTML]=\"text\"> </div>\n    <div class=\"text\" [ngClass]=\"{detach:!!subText}\"[innerHTML]=\"value|toAny\"> </div>\n    <div class=\"sub-title\" *ngIf=\"subText\" [innerHTML]=\"subText\"> </div>\n    <div class=\"sub-text\" *ngIf=\"subValue\" [innerHTML]=\"subValue|toAny\"> </div>\n  </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { QueryParamsHandling, RouterLink } from '@angular/router';\nimport { BtnComponent } from '../btn.component';\nimport { BtnService } from '../btn.service';\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\n\n@Component({\n  selector: 'app-btn-link',\n  templateUrl: './btn-link.component.html',\n  styleUrls: ['./btn-link.component.scss'],\n  standalone: true,\n  imports: [NgSwitch, NgSwitchCase, RouterLink, NgSwitchDefault],\n})\nexport class BtnLinkComponent extends BtnComponent {\n  @Input() mqueryParamsHandling: QueryParamsHandling;\n  @Input() route: string;\n  @Input() params: { [x: string]: string | number | boolean };\n  @Input() emailTo: string;\n  constructor(public override btnS: BtnService) {\n    super(btnS);\n  }\n}\n","\n<ng-container [ngSwitch]=\"true\">\n    <ng-container *ngSwitchCase=\"!!route?.length\">\n    <a [routerLink]=\"[route]\" [queryParams]=\"params\" class=\"{{mclass}} {{_mclass}}\">{{text}}</a>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"!!emailTo?.length\">\n        <a href=\"mailto:{{emailTo}}\"class=\"{{mclass}} {{_mclass}}\">{{text}}</a>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n    <a class=\"{{mclass}} {{_mclass}}\">{{text}}</a>\n    </ng-container>\n</ng-container>","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent, MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipInputEvent, MatChipsModule } from '@angular/material/chips';\nimport { merge, Observable } from 'rxjs';\nimport { debounceTime, filter, map, mergeMap, startWith } from 'rxjs/operators';\nimport { AutocompleteService } from '../autocomplete/autocomplete.service';\nimport { InputBasicComponent, IOption } from '../input/input.component';\nimport { InputService } from '../input/input.service';\nimport { FunctionCaller1 } from '../../pipes/utility.pipe';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgFor, NgIf, AsyncPipe } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n    selector: 'chip-list-autocomplete',\n    templateUrl: './chip-list-autocomplete.component.html',\n    styleUrls: ['./chip-list-autocomplete.component.scss'],\n    standalone: true,\n    imports: [\n        MatFormFieldModule,\n        MatChipsModule,\n        NgFor,\n        MatIconModule,\n        FormsModule,\n        MatAutocompleteModule,\n        ReactiveFormsModule,\n        MatOptionModule,\n        NgIf,\n        AsyncPipe,\n        FunctionCaller1,\n    ],\n})\nexport class ChipListAutocompleteComponent<\n  TFormGroup extends {\n    [K in keyof TFormGroup]: AbstractControl<any, any>;\n  } = any,\n  TOption = any\n> extends InputBasicComponent<TFormGroup, string[], TOption> {\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  autoCompleteCtrl = new FormControl('');\n\n  @Input() filterFunc: (...args) => Observable<any[]>;\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\n  filteredOptions: IOption[];\n  @Input() addedDataFormatter: (param: string) => Observable<string>;\n  message: string;\n\n  constructor(\n    public override iS: InputService,\n    public autoS: AutocompleteService\n  ) {\n    super(iS);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n\n    merge(this.autoCompleteCtrl.valueChanges.pipe(startWith('')), this.options$)\n      .pipe(\n        // filter((r) => !this.filterFunc),\n        mergeMap((r) =>\n          this.autoS.filterOptions(\n            this.autoCompleteCtrl.value as any,\n            this.options\n          )\n        )\n      )\n      .subscribe((r) => {\n        this.filteredOptions = r;\n      });\n    this.autoCompleteCtrl.valueChanges\n      .pipe(startWith(''))\n      .pipe(\n        debounceTime(1000),\n        filter((r) => !!this.filterFunc),\n        mergeMap((r) => this.filterFunc(this.autoCompleteCtrl.value))\n      )\n      .subscribe((r) => {\n        this._options = r as any[];\n      });\n  }\n\n  override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n  }\n\n  add(event: MatChipInputEvent): void {\n    // const value = (event.value || '').trim();\n    // // Add our fruit\n    // if (value) {\n    //   this.control?.value.push(value);\n    // }\n    // // Clear the input value\n    // event.chipInput!.clear();\n    // this.autoCompleteCtrl.setValue(null);\n  }\n\n  remove(index: number): void {\n    this.control?.value.splice(index, 1);\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    delete this.message;\n    if (!this.control?.value) this.control?.patchValue([]);\n    if (this.control?.value?.includes(event.option.value)) {\n      this.message = event.option.viewValue + ' has already been added';\n    } else this.control?.value.push(event.option.value);\n    // this.fruitInput.nativeElement.value = '';\n    this.autoCompleteCtrl.setValue(null);\n  }\n}\n","<mat-form-field class=\"example-chip-list\" appearance=\"fill\">\n    <mat-label>{{label}}</mat-label>\n    <mat-chip-grid #chipGrid attr.aria-label=\"{{label}} selection\">\n        <mat-chip-row *ngFor=\"let item of control.value;let i =index\" (removed)=\"remove(i)\">\n            {{(addedDataFormatter|functionCaller1:item|async)||item}}\n            <button matChipRemove [attr.aria-label]=\"'remove ' + item\">\n                <mat-icon>cancel</mat-icon>\n            </button>\n        </mat-chip-row>\n    </mat-chip-grid>\n    <input placeholder=\"{{placeholder||label}}\" #aInput [formControl]=\"autoCompleteCtrl\" [matChipInputFor]=\"chipGrid\"\n        [matAutocomplete]=\"auto\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n        (matChipInputTokenEnd)=\"add($event)\" />\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n        <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option.value\">\n            {{option.label}}\n        </mat-option>\n    </mat-autocomplete>\n</mat-form-field>\n<div class=\"text-danger\" *ngIf=\"message\">{{message}}</div>","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ValueOrXPipe } from '../../pipes/utility.pipe';\n\n@Component({\n    selector: 'count',\n    templateUrl: './count.component.html',\n    styleUrls: ['./count.component.scss'],\n    standalone: true,\n    imports: [ValueOrXPipe],\n})\nexport class CountComponent {\n  @Input() count: number;\n  @Input() class: string;\n}\n","<div class=\"card count center\">\n{{count|valueOrX:'-'}}\n</div>","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { SvgIconComponent } from '../svg-icon/svg-icon.component';\nimport { NgIf } from '@angular/common';\n\n@Component({\n    selector: 'feedback-card',\n    templateUrl: './feedback-card.component.html',\n    styleUrls: ['./feedback-card.component.scss'],\n    standalone: true,\n    imports: [NgIf, SvgIconComponent],\n})\nexport class FeedbackCardComponent implements OnInit {\n  @Input() class: string;\n  @Input() message: string;\n  private defaultStatus: any = 0;\n  /** 0 - indicates error 1 - indicates success 2 - indicates info */\n  @Input() status: 0 | 1 | 2 = this.defaultStatus;\n\n  @ViewChild('el') elRef: ElementRef<HTMLDivElement>;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  reset() {\n    this.message = null;\n    this.status = this.defaultStatus;\n  }\n\n  setErrorMessage(message: string) {\n    if (!message) return;\n    if (typeof message != 'string') console.log(message);\n    this.message = typeof message == 'string' ? message : 'An error occurred';\n    this.status = 0;\n    this.elRef?.nativeElement?.scrollIntoView({ behavior: 'smooth' });\n  }\n}\n","<div #el>\n    <div class=\"case status-{{status}} {{class}}\" *ngIf=\"message\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-auto text-danger\"> \n          <svg-icon icon=\"error\"></svg-icon>\n        </div>\n        <div class=\"col\" [innerHTML]=\"message\">\n        </div>\n      </div>\n    </div>\n</div>\n","import {\n  Component, EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { SVGIconType } from '../svg-icon/svg-icon.model';\nimport { BtnComponent } from '../btn/btn.component';\nimport { NgIf, NgClass, NgFor } from '@angular/common';\nimport { UtilityService } from '../../../services/utility.service';\n\n@Component({\n    selector: 'app-file-upload',\n    templateUrl: './file-upload.component.html',\n    styleUrls: ['./file-upload.component.scss'],\n    standalone: true,\n    imports: [\n        NgIf,\n        NgClass,\n        NgFor,\n        BtnComponent,\n    ],\n})\nexport class FileUploadComponent implements OnInit {\n  @Input() help: string;\n  @Input() label: string;\n  @Input() class: string;\n  @Input() icon: SVGIconType;\n  @Input() disabled: boolean;\n  @Input() multiple: boolean;\n  @Input() mini = true;\n  @Input() useDocumentModal: boolean;\n  @Input() listFiles: boolean = true;\n  accept: string;\n  @Input('accept') set _accept(v: string) {\n    switch (v) {\n      case 'image':\n        this.accept = '.png,.jpg,.docx,.pdf';\n        break;\n\n      default:\n        this.accept = v;\n        break;\n    }\n  }\n  // @ViewChild('uploadInput') uploadInputRef: ElementRef<HTMLInputElement>;\n  @Input() file: File;\n  @Output() fileChange = new EventEmitter<File>();\n  @Input() files: File[];\n  @Output() filesChange = new EventEmitter<File[]>();\n  imageString: string;\n\n  constructor(public uS: UtilityService) {}\n\n  ngOnInit(): void {}\n  get isSingle() {\n    return !this.multiple;\n  }\n  private acceptFiles(...files: File[]) {\n    this.files = files;\n    this.file = files ? files[0] : null;\n    if (this.file?.type?.startsWith('image')) {\n      const reader = new FileReader();\n      reader.readAsDataURL(this.file);\n      reader.onload = (e) => {\n        this.imageString = reader.result as any;\n      };\n    } else this.imageString = null;\n  }\n  private emitFiles() {\n    if (this.multiple) this.filesChange.emit(this.files);\n    else this.fileChange.emit(this.file);\n  }\n\n  onUpload(event: any) {\n    const files = Array.from<File>(event.target.files);\n    this.acceptFiles(...files);\n\n    this.emitFiles();\n  }\n\n  removeFile(index: number) {\n    this.files.splice(index, 1);\n    this.file = this.files ? this.files[0] : null;\n\n    this.fileChange.emit(this.file);\n    this.filesChange.emit(this.files);\n  } \n  openDialog() {\n    const inp = document.createElement('input');\n    inp.type = 'file';\n    inp.accept = this.accept;\n    inp.multiple = this.multiple;\n    inp.onchange = (e) => {\n      this.onUpload(e);\n      inp.remove();\n    };\n    // document.body.appendChild(inp);\n    inp.click();\n  }\n}\n","\n<div *ngIf=\"listFiles\" [ngClass]=\"{meta:mini}\" class=\"{{class}} form-label mb-2 hide-scroll\">\n  <div class=\"row align-items-start mb-1\" *ngFor=\"let item of files;let i = index\">\n    <div class=\"col\">\n      <div class=\"hide-scroll file-name\">\n        {{item?.name}}\n      </div>\n    </div>\n    <div class=\"col-auto text-end\">\n      <span class=\"text-danger pointer p-1 fa fa-close\" (click)=\"removeFile(i);\"></span>\n    </div>\n  </div>\n</div>\n<!-- <input type=\"file\"  style=\"display: none;\" accept=\"{{accept}}\" (change)=\"onUpload($event)\" #uploadInput [multiple]=\"multiple\"> -->\n<app-btn [icon]=\"icon\" (mclick)=\"openDialog()\" [type]=\"file?'primary':'secondary'\"\n  [disabled]=\"disabled\" [help]=\"help\" [text]=\"label\">\n\n</app-btn>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  AsyncValidatorFn,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { InputBasicComponent } from './input.component';\nimport { InputService } from './input.service';\nimport { ToAnyPipe } from '../../pipes/utility.pipe';\nimport { InputClassPipe } from './inputs-pipes.pipe';\nimport {\n  ValidationMessageComponent,\n  ErrorMessagesPipe,\n} from './validation-message/validation-message.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SvgIconComponent } from '../svg-icon/svg-icon.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule, _MatCheckboxRequiredValidatorModule } from '@angular/material/checkbox';\nimport {\n  MatSlideToggleModule,\n  _MatSlideToggleRequiredValidatorModule,\n} from '@angular/material/slide-toggle';\nimport { BtnComponent } from '../btn/btn.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { InfoIconComponent } from '../info-icon/info-icon.component';\nimport { NgClass, NgIf, NgSwitch, NgSwitchCase, NgFor, NgSwitchDefault } from '@angular/common';\n\n@Component({\n  selector: 'app-input-td-rf',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  standalone: true,\n  imports: [\n    NgClass,\n    FormsModule,\n    ReactiveFormsModule,\n    NgIf,\n    InfoIconComponent,\n    NgSwitch,\n    NgSwitchCase,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    BtnComponent,\n    MatSlideToggleModule,\n    _MatSlideToggleRequiredValidatorModule,\n    MatCheckboxModule,\n    _MatCheckboxRequiredValidatorModule,\n    NgFor,\n    MatInputModule,\n    SvgIconComponent,\n    MatSelectModule,\n    MatOptionModule,\n    MatTooltipModule,\n    NgSwitchDefault,\n    ValidationMessageComponent,\n    InputClassPipe,\n    ToAnyPipe,\n    ErrorMessagesPipe,\n  ],\n})\nexport class InputTD_RFComponent<TOption = any> extends InputBasicComponent<any, TOption> {\n  validators?: ValidatorFn[];\n  @Input('validators') set _validators(v: ValidatorFn[]) {\n    this.control?.removeValidators(this.validators);\n    this.validators = v;\n    this.control?.setValidators(v);\n    this.control?.updateValueAndValidity();\n  }\n\n  asyncValidators?: AsyncValidatorFn[];\n  @Input('asyncValidators') set _asyncValidators(v: AsyncValidatorFn[]) {\n    this.control?.removeValidators(this.asyncValidators);\n    this.asyncValidators = v;\n    this.control?.setValidators(v);\n    this.control?.updateValueAndValidity();\n  }\n  @Input({ required: false, alias: 'form' }) override set _form(v: FormGroup) {\n    super._form = v;\n  }\n  private model?: any;\n  @Input('model') set _model(v: any) {\n    if (v == this.model) return;\n    this.model = v;\n    if (this.debug) debugger;\n    this.control?.enable();\n    this.control?.patchValue(v);\n    if (this.disabled) this.control?.disable();\n  }\n  @Output() modelChange = new EventEmitter();\n\n  @Input('disabled') override set _disabled(v: boolean) {\n    if (this.debug) debugger;\n    this.disabled = v;\n    if (v) {\n      if (this.clearOnDisable) this.control?.reset();\n      this.control?.disable();\n    } else if (this.control?.disabled) {\n      this.control?.enable();\n    }\n  }\n  constructor(public override iS: InputService) {\n    super(iS);\n    this.name = 'item';\n  }\n\n  override ngOnInit(): void {\n    this.form = new FormGroup({\n      item: new FormControl(this.model, this.validators, this.asyncValidators),\n    });\n    this._name = 'item';\n    this.disableControl();\n    this.control?.valueChanges.subscribe((r) => {\n      this.modelChange.emit(r);\n      this.disableControl();\n    });\n    this.control?.statusChanges.subscribe((r) => {\n      if (this.debug) debugger;\n    });\n    super.ngOnInit();\n  }\n  override ngAfterViewInit() {\n    super.ngAfterViewInit();\n  }\n  override get invalid() {\n    return this.control?.invalid;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault, NgClass } from '@angular/common';\n\n@Component({\n    selector: 'response-card',\n    templateUrl: './response-card.component.html',\n    styleUrls: ['./response-card.component.scss'],\n    standalone: true,\n    imports: [\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        NgClass,\n    ],\n})\nexport class ResponseCardComponent {\n  @Input() header: string;\n  @Input() showResponse: boolean;\n  @Input() status: 1 | 0 = 1;\n  resetStatus() {\n    this.status = null;\n    this.showResponse=false\n  }\n}\n","<div class=\"text-center center h-100\" [hidden]=\"!showResponse\">\n    <div class=\"\">\n        <div class=\"\">\n            <ng-container [ngSwitch]=\"status\">\n                <ng-container *ngSwitchCase=\"1\">\n                    <img class=\"success-img\" src=\"/assets/icons/success.svg\" alt=\"\">\n                </ng-container>\n                <ng-container *ngSwitchCase=\"\">\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                </ng-container>\n            </ng-container>\n        </div>\n        <div class=\"header justify-content-center\" [ngClass]=\"{success:status==1}\">\n            {{header}}\n        </div>\n        <div class=\"message\">\n            <ng-content></ng-content>\n        </div>\n    </div>\n</div>","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  forwardRef,\n} from '@angular/core';\nimport { FormArray, FormControl, FormGroup, FormsModule } from '@angular/forms';\nimport { UtilityService } from '../../../services/utility.service';\nimport { cloneDeep } from 'lodash-es';\nimport { IFormOptions, IFormSchema } from '../../models/form-schema.model';\nimport { InputBasicComponent } from '../input/input.component';\nimport { ResponseCardComponent } from '../response-card/response-card.component';\nimport { FunctionCaller2, ToAnyPipe } from '../../pipes/utility.pipe';\nimport { BtnComponent } from '../btn/btn.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { FeedbackCardComponent } from '../feedback-card/feedback-card.component';\nimport {\n  NgIf,\n  NgFor,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  AsyncPipe,\n} from '@angular/common';\n\n@Component({\n  selector: 'form-generator',\n  templateUrl: './form-generator.component.html',\n  styleUrls: ['./form-generator.component.scss'],\n  standalone: true,\n  imports: [\n    ResponseCardComponent,\n    NgIf,\n    FeedbackCardComponent,\n    FormsModule,\n    NgFor,\n    NgSwitch,\n    NgSwitchCase,\n    AutocompleteComponent,\n    MatExpansionModule,\n    BtnComponent,\n    forwardRef(() => FormGeneratorComponent),\n    NgSwitchDefault,\n    InputBasicComponent,\n    AsyncPipe,\n    FunctionCaller2,\n    ToAnyPipe,\n  ],\n})\nexport class FormGeneratorComponent implements OnInit {\n  @Input() keyField: 'field' | 'label' = 'field';\n\n  @Output() onSubmit = new EventEmitter<any>();\n  @Output('submissionResponse') _submissionResponse = new EventEmitter<any>();\n  @Input() submitFunc: (\n    value: any,\n    _this: FormGeneratorComponent\n  ) => Promise<any>;\n  @Input() submitBtnText: string = 'Submit';\n  @Input() submitSuccessText: string = 'Save';\n  @Input() showSubmitBtn: boolean = true;\n  @Input() isShow: boolean;\n\n  @Input() gridStyle: string = '1';\n  @Input() gridMDStyle: string = '1';\n  @Input() gridLGStyle: string = '1';\n  @Input() gridXXLStyle: string = '1';\n\n  @Input() useLoader: boolean;\n  @Input() loading: boolean;\n  @Input() showSeparateLabels: boolean;\n\n  @Input() hasResponse: boolean;\n  @Input() hideResponseCard: boolean;\n  @Input() responseHeader: string;\n\n  /**\n   * Formgroup for the fields passed in\n   */\n  @Input() form: FormGroup;\n  /**\n   * Formgroup or controls to check for validity before submission\n   */\n  @Input() submitForm: FormGroup | FormControl;\n  formSchema: IFormSchema[];\n  submissionResponse: any;\n  @Input('formSchema') set _formSchema(v: IFormSchema[]) {\n    if (v) this.init(v);\n  }\n  optionsMap: IFormOptions = {};\n  cellCountryCode3s: IFormOptions = {};\n  errorMessage: string;\n\n  constructor(public uS: UtilityService) {}\n\n  ngOnInit(): void {}\n\n  init(schema: IFormSchema[]) {\n    for (const scheme of schema) {\n      // scheme.form = this.form || scheme.form;\n      scheme.id = 'id' + this.uS.genRandomID;\n      if (this.showSeparateLabels)\n        scheme.showSeperateLabel = this.showSeparateLabels;\n      if (\n        scheme.autoPickValueField == null &&\n        (!scheme.valueField || !scheme.labelField)\n      )\n        scheme.autoPickValueField = true;\n\n      if (scheme.optionsInitFunc) {\n        scheme.optionsInitFunc().subscribe((r) => {\n          scheme.options = r;\n          // this.optionsMap[scheme.field] = r;\n        });\n      }\n      if (scheme.sub?.length) {\n        // debugger\n        // scheme.label=\"fwefwrefwr\"\n        scheme.label = scheme.label || 'Item';\n\n        if (!scheme.form) {\n          const form = new FormGroup({});\n          for (const subField of scheme.sub) {\n            form.addControl(subField.field?.toString(), new FormControl());\n          }\n          scheme.form = form;\n        }\n        if (!this.form.controls[scheme.field?.toString()])\n          this.form.addControl(scheme.field?.toString(), new FormArray([]));\n        if ((scheme.initData as any[])?.length)\n          if (Array.isArray(scheme.initData) && scheme.initData?.length)\n            scheme.initData?.forEach((x) => this.addItem(scheme, x));\n          else this.addItem(scheme);\n      }\n    }\n    this.formSchema = schema\n      .filter((x) => !x.sub?.length)\n      .concat(schema.filter((x) => x.sub?.length));\n  }\n  ngAfterViewInit(): void {\n    for (const scheme of this.formSchema) {\n      if (scheme.onChangeFunc) {\n        this.form.controls[scheme.field as string].updateValueAndValidity();\n      }\n    }\n  }\n  amendFormScheme(fieldName: string, formScheme: Partial<IFormSchema>) {\n    const ind = this.formSchema.findIndex((x) => x.field == fieldName);\n    if (ind > -1) {\n      this.formSchema[ind] = {\n        ...this.formSchema[ind],\n        ...(formScheme as any),\n      };\n      // const fs = this.formSchema[ind];\n      // debugger;\n      // this.formSchema[ind].options = formScheme.options;\n      // debugger;\n    }\n  }\n  onChange(field: IFormSchema, inp: InputBasicComponent) {\n    if (field.onChangeFunc)\n      setTimeout(() => {\n        field.onChangeFunc(this.form.getRawValue(), field.field, this, inp);\n      }, 600);\n  }\n  addItem(scheme: IFormSchema, data?) {\n    const form = cloneDeep(scheme.form);\n    form.reset();\n    if (data) form.patchValue(data);\n    (\n      this.form?.controls[scheme?.field?.toString()] as FormArray\n    )?.controls.push(form);\n  }\n  removeItem(index: number, formName: string | number | symbol) {\n    (this.form?.controls[formName?.toString()] as FormArray)?.removeAt(index);\n  }\n  async submit(rc: ResponseCardComponent) {\n    if (this.submitFunc) {\n      this.loading = true;\n      this.errorMessage = null;\n      this.hasResponse = null;\n      this.onSubmit.emit(this.form.value);\n      rc.resetStatus();\n      try {\n        this.submissionResponse = await this.submitFunc(this.form.value, this);\n        this._submissionResponse.emit(this.submissionResponse);\n        rc.status = 1;\n        rc.showResponse = true;\n      } catch (error) {\n        // debugger;\n        this.errorMessage = error;\n        // rc.status = 0;\n      }\n      this.hasResponse = true;\n      this.loading = false;\n    } else this.onSubmit.emit(this.form.value);\n  }\n}\n","<response-card #rc [status]=\"1\" [header]=\"responseHeader\" [hidden]=\"hideResponseCard||!hasResponse ||errorMessage\">\n  <ng-content select=\"[response]\" />\n</response-card>\n<feedback-card #fc [message]=\"errorMessage\" *ngIf=\"errorMessage\" />\n<form [hidden]=\"!hideResponseCard && hasResponse && !errorMessage\">\n  <div\n    class=\"form-grid row row-cols-{{gridStyle}} row-cols-lg-{{gridLGStyle}} row-cols-md-{{gridMDStyle}} row-cols-xxl-{{gridXXLStyle}} align-items-center\">\n    <ng-container *ngFor=\"let scheme of formSchema;trackBy:uS.trackByID\">\n      <div class=\"col {{scheme.cls}} \" *ngIf=\"(!scheme.hideIfFunc || !scheme.hideIfFunc(form.value)) && !scheme.hidden\">\n        <ng-container [ngSwitch]=\"true\">\n          <!-- <ng-container *ngSwitchCase=\"scheme.type == 'tel'\">\n            <app-phone-number [form]=\"form\" [label]=\"scheme.label\" [clearOnDisable]=\"scheme.clearOnDisable\"\n              [name]=\"scheme.field\" [showLabel]=\"false\" [noFormat]=\"scheme.noFormat\"\n              [showValidation]=\"scheme.showValidation\" [autoPickValueField]=\"scheme.autoPickValueField\"\n              [showValidationIcon]=\"scheme.showValidationIcon\" [countryCode3]=\"\n                        cellCountryCode3s[scheme.getCountryCode3Key] || scheme.countryCode3\n                      \" [disabled]=\"scheme.disabled||\n                        (scheme.disabledIf\n                          | functionCaller2: form.value:scheme.field)\n                      \" #inputTag>\n            </app-phone-number>\n          </ng-container> -->\n          <ng-container *ngSwitchCase=\"scheme.type == 'autocomplete'\">\n            <app-autocomplete [form]=\"form\" [placeholder]=\"scheme.placeholder\" [label]=\"scheme.label\"\n              [clearOnDisable]=\"scheme.clearOnDisable\" [showSeperateLabel]=\"scheme.showSeperateLabel\"\n              [labelField]=\"scheme.labelField\" [noFormat]=\"scheme.noFormat\" [labelType]=\"scheme.labelType\"\n              [name]=\"scheme.field\" [optionFormatter]=\"scheme.optionFormatter\" [valueField]=\"scheme.valueField\"\n              [showEmptyOption]=\"scheme.showEmptyOption\" (mchange)=\"onChange(scheme,inputTag)\"\n              (validityChecked)=\"onChange(scheme,inputTag)\" [icon]=\"scheme.icon\"\n              [autoPickValueField]=\"scheme.autoPickValueField\" [options]=\"\n                        (scheme.optionsFunc\n                          | functionCaller2: form.value:scheme.field\n                          | async) || scheme.options||optionsMap[scheme.field|toAny]\n                      \" [hint]=\"scheme.hint\" [disabled]=\"scheme.disabled||\n                      (  scheme.disabledIf\n                          | functionCaller2: form.value:scheme.field)\n                      \" #inputTag />\n          </ng-container>\n          <ng-container *ngSwitchCase=\"scheme.sub?.length>0\">\n            <mat-accordion>\n              <ng-container *ngFor=\"let subForm of form?.controls[scheme.field|toAny]['controls'];let fi = index\">\n                <div class=\"d-flex justify-content-end\" *ngIf=\"!isShow\">\n                  <app-btn class=\" \" text=\"Remove {{scheme.label}} {{fi+1}}\" [mini]=\"true\" type=\"clear\" mclass=\"\"\n                    icon=\"delete\" (mclick)=\"removeItem(fi,scheme.field)\" />\n                </div>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header>\n                    {{scheme.label}} {{fi+1}}\n                  </mat-expansion-panel-header>\n                  <form-generator [showSubmitBtn]=\"false\" [form]=\"subForm\" [formSchema]=\"scheme.sub\" />\n                </mat-expansion-panel>\n              </ng-container>\n            </mat-accordion>\n            <div class=\"mt-8 d-flex\" *ngIf=\"!isShow\">\n              <app-btn class=\" \" text=\"Add {{scheme.label}} {{form?.controls[scheme.field|toAny]['length']+1}}\"\n                [mini]=\"true\" type=\"clear\" mclass=\"text-primary\" icon=\"add\" (mclick)=\"addItem(scheme)\" />\n            </div>\n\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <app-input #formField [name]=\"scheme.field\" [form]=\"form\" [clearOnDisable]=\"scheme.clearOnDisable\"\n              [type]=\"scheme.type\" [valueField]=\"scheme.valueField\" [autoPickValueField]=\"scheme.autoPickValueField\"\n              [labelType]=\"scheme.labelType\" [checked]=\"scheme.checked\" [showValidation]=\"scheme.showValidation\"\n              [prefix]=\"scheme.prefix\" [icon]=\"scheme.icon\" [noFormat]=\"scheme.noFormat\" \n              [showValidationIcon]=\"scheme.showValidationIcon\" [startField]=\"scheme.startField\"\n              [endField]=\"scheme.endField\" [noPaste]=\"scheme.noPaste\" [showSeperateLabel]=\"scheme.showSeperateLabel\"\n              [labelField]=\"scheme.labelField\" [optionFormatter]=\"scheme.optionFormatter\"\n              (mchange)=\"onChange(scheme,formField)\" (validityChecked)=\"onChange(scheme,formField)\"\n              [options]=\"(scheme.optionsFunc|functionCaller2:form.value:scheme.field|async)||scheme.options||optionsMap[scheme.field|toAny]\"\n              [decimalPoints]=\"scheme.decimalPoints\" [hint]=\"scheme.hint\" [max]=\"scheme.max\" [min]=\"scheme.min\"\n              [placeholder]=\"scheme.placeholder\" [label]=\"scheme.label\"\n              [disabled]=\"scheme.disabled||(scheme.disabledIf|functionCaller2:form.value:scheme.field)\" />\n          </ng-container>\n        </ng-container>\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"sub-btn\" *ngIf=\"showSubmitBtn\">\n    <app-btn [text]=\"submitBtnText\" group=\"submit\" actionType=\"submit\" [form]=\"submitForm||form\" [loading]=\"loading\"\n      (mclick)=\"submit(rc)\">\n    </app-btn>\n  </div>\n</form>","import {\n  Component,\n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport { InputTD_RFComponent } from '../../input/input-td-rf.component';\nimport { FormGeneratorComponent } from '../form-generator.component';\nimport { FunctionCaller2, ToAnyPipe } from '../../../pipes/utility.pipe';\nimport { BtnComponent } from '../../btn/btn.component';\nimport { FormsModule } from '@angular/forms';\nimport { FeedbackCardComponent } from '../../feedback-card/feedback-card.component';\nimport { NgIf, NgClass, NgFor, AsyncPipe } from '@angular/common';\nimport { ResponseCardComponent } from '../../response-card/response-card.component';\nimport { IFormSchema } from '../../../models/form-schema.model';\n\n@Component({\n    selector: 'form-generator-td',\n    templateUrl: './form-generator-td.component.html',\n    styleUrls: ['./form-generator-td.component.scss'],\n    standalone: true,\n    imports: [\n        ResponseCardComponent,\n        NgIf,\n        FeedbackCardComponent,\n        FormsModule,\n        NgClass,\n        NgFor,\n        InputTD_RFComponent,\n        BtnComponent,\n        AsyncPipe,\n        FunctionCaller2,\n        ToAnyPipe,\n    ],\n})\nexport class FormGeneratorTdComponent extends FormGeneratorComponent {\n  @Input() header: string;\n  @Input() showDivider: boolean;\n  @Input() subTitle: string;\n  @Output('valuesChange') _valuesChange = new EventEmitter<{\n    form: IFormSchema[];\n  }>();\n\n  override onChange(field: IFormSchema, inp:InputTD_RFComponent) {\n    super.onChange(field,inp);\n    this._valuesChange.emit({ form: this.formSchema });\n  }\n}\n","<response-card #rc [status]=\"1\" [header]=\"responseHeader\" [hidden]=\"hideResponseCard||!hasResponse ||errorMessage\">\n    <ng-content select=\"[response]\"></ng-content>\n</response-card>\n<feedback-card #fc [message]=\"errorMessage\" *ngIf=\"errorMessage\"></feedback-card>\n<form [hidden]=\"!hideResponseCard && hasResponse && !errorMessage\">\n    <hr class=\"divider \" *ngIf=\"showDivider\">\n    <div class=\"title mt-16\" [hidden]=\"!header\">\n        {{header}}\n    </div>\n    <div class=\"sub-title\" [hidden]=\"!subTitle\">{{subTitle}}\n    </div>\n    <div [ngClass]=\"{'mt-16':header||subTitle}\"\n        class=\" form-grid row row-cols-{{gridStyle}} row-cols-md-{{gridMDStyle}} row-cols-xxl-{{gridXXLStyle}} align-items-center\">\n        <ng-container *ngFor=\"let scheme of formSchema;trackBy:uS.trackByID\">\n            <div class=\"col {{scheme.cls}} \" *ngIf=\"!scheme.hideIfFunc || !scheme.hideIfFunc(formSchema)\">\n                <app-input-td-rf #formField [(model)]=\"scheme.value\" [name]=\"scheme.field\"\n                    [clearOnDisable]=\"scheme.clearOnDisable\" [type]=\"scheme.type\" [valueField]=\"scheme.valueField\"\n                    [autoPickValueField]=\"scheme.autoPickValueField\" [labelType]=\"scheme.labelType\"\n                    [checked]=\"scheme.checked\" [showValidation]=\"scheme.showValidation\" [icon]=\"scheme.icon\"\n                    [noFormat]=\"scheme.noFormat\" [showValidationIcon]=\"scheme.showValidationIcon\"\n                    [labelField]=\"scheme.labelField\" [optionFormatter]=\"scheme.optionFormatter\"\n                    (mchange)=\"onChange(scheme,formField)\"\n                    [options]=\"(scheme.optionsFunc|functionCaller2:formSchema:scheme.field|async)||scheme.options||optionsMap[scheme.field|toAny]\"\n                    [decimalPoints]=\"scheme.decimalPoints\" [hint]=\"scheme.hint\" [max]=\"scheme.max\" [min]=\"scheme.min\"\n                    [placeholder]=\"scheme.placeholder\" [label]=\"scheme.label\"\n                    [disabled]=\"scheme.disabled||(scheme.disabledIf|functionCaller2:formSchema:scheme.field)\">\n                </app-input-td-rf>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"sub-btn\" *ngIf=\"showSubmitBtn\">\n        <app-btn [text]=\"submitBtnText\" group=\"submit\" [form]=\"submitForm||form\" [loading]=\"loading\"\n            (mclick)=\"submit(rc)\">\n        </app-btn>\n    </div>\n</form>","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { BtnComponent } from '../btn/btn.component';\nimport { NgIf } from '@angular/common';\n\n/**\n * Template to show when there is a data in a table\n */\n@Component({\n    selector: 'no-list',\n    templateUrl: './no-list.component.html',\n    styleUrls: ['./no-list.component.scss'],\n    standalone: true,\n    imports: [NgIf, BtnComponent],\n})\nexport class NoListComponent {\n  @Input() header: string;\n  @Input() subheader: string;\n  @Input() addBtnText: string;\n  @Input() hideAddBtn: boolean;\n  @Output() addButtonClicked = new EventEmitter<boolean>();\n}\n","<div class=\"h-100 center text-center no-list\" >\n    <div class=\"\">\n        <div class=\"title\">\n            {{header}}\n        </div>\n        <div class=\"sub-title mx-auto\">\n            {{subheader}}\n        </div>\n        <app-btn [text]=\"addBtnText\" icon=\"add\" *ngIf=\"!hideAddBtn\" mclass=\"w-auto\" (mclick)=\"addButtonClicked.emit(true)\"></app-btn>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core'; \nimport { TableCol } from './table.model';\n\n@Pipe({\n    name: 'getColFormatted',\n    standalone: true,\n})\nexport class GetColFormattedPipe implements PipeTransform {\n  transform(row: any, col: TableCol) {\n    return Promise.resolve(\n      (col.formatterRow\n        ? col.formatterRow(row)\n        : col.formatter\n        ? col.formatter(row[col.f])\n        : row[col.f])  \n    );\n  }\n}\n\n@Pipe({\n    name: 'getRawFields',\n    standalone: true,\n})\nexport class GetRawFieldsPipe implements PipeTransform {\n  transform(\n    arr: TableCol[],\n    showOptions:boolean = false,\n    useSelection = false,\n    placeSelectionAtRight = false, // the parameter is to support setting the selection checkboxes as the last item instead of the first\n  ): string[] {\n    const fields = arr.map((r) => r.f);\n    showOptions ? fields.push('option') : null;\n    const fieldsWithSelect = placeSelectionAtRight\n      ? [...fields, useSelection ? 'mselect' : null]\n      : [useSelection ? 'mselect' : null, ...fields];\n    return fieldsWithSelect.filter((x) => x) as string[];\n  }\n}\n\n@Pipe({\n    name: 'getHeaders',\n    standalone: true,\n})\nexport class GetHeadersPipe implements PipeTransform {\n  transform(arr: TableCol[]): string[] {\n    return arr.map((r) => r.t);\n  }\n}\n\n@Pipe({\n    name: 'tableToString',\n    standalone: true,\n})\nexport class TableToStringPipe implements PipeTransform {\n  async transform(arr: TableCol[], obj: any): Promise<string> {\n    let str = '';\n    for (const col of arr)  {\n     let transText =  await this.cfS.transform(obj,col)\n      str += `${col.t}:  ${transText}\\n`;\n    }\n    return str;\n  }\n  constructor(public cfS: GetColFormattedPipe) {}\n}\n\nconst pipes = [\n  GetColFormattedPipe,\n  GetHeadersPipe,\n  GetRawFieldsPipe,\n  TableToStringPipe,\n];\n@NgModule({\n    exports: pipes,\n    imports: [CommonModule, ...pipes],\n    providers: [GetColFormattedPipe],\n})\nexport class TablePipesModule {}\n","import { Directive, ElementRef, Input } from '@angular/core'; \nimport { Subscription } from 'rxjs';\nimport { UtilityService } from '../../services/utility.service';\n\n@Directive({\n  selector: '[mresponsiveness]',\n  standalone: true,\n})\nexport class ResponsivenessDirective {\n  @Input() mobileClass: string;\n  @Input() desktopClass: string;\n  @Input() hideMobile: boolean;\n  @Input() hideDesktop: boolean;\n  sub: Subscription;\n  constructor(\n    public elRef: ElementRef<HTMLDivElement>,\n    public uS: UtilityService\n  ) {}\n\n  ngAfterViewInit(): void {\n    if (this.uS.isMobile) this.handleMobile();\n    else this.handleDesktop();\n\n    this.sub = this.uS.mobileQueryChanged.subscribe((isMobile) => {\n      // debugger;\n      // debugger;\n      if (isMobile) {\n        this.handleMobile();\n      } else {\n        this.handleDesktop();\n      }\n      // console.log(ev,'media changed');\n    });\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.sub.unsubscribe();\n  }\n\n  /**\n   * If viewport is mobile\n   */\n  handleMobile() {\n    if (this.desktopClass)\n      this.elRef.nativeElement.classList.remove(\n        ...extractTokens(this.desktopClass)\n      );\n    if (this.mobileClass)\n      this.elRef.nativeElement.classList.add(\n        ...extractTokens(this.mobileClass)\n      );\n    if (this.hideMobile) this.elRef.nativeElement.hidden = true;\n    else if (this.hideDesktop) this.elRef.nativeElement.hidden = false;\n  }\n\n  /**\n   * If viewport is desktop\n   */\n  handleDesktop() {\n    if (this.desktopClass)\n      this.elRef.nativeElement.classList.add(\n        ...extractTokens(this.desktopClass)\n      );\n    if (this.mobileClass)\n      this.elRef.nativeElement.classList.remove(\n        ...extractTokens(this.mobileClass)\n      );\n    if (this.hideMobile) this.elRef.nativeElement.hidden = false;\n    else if (this.hideDesktop) this.elRef.nativeElement.hidden = true;\n  }\n}\n@Directive({\n  selector: '[mobileClass]',\n  standalone: true,\n})\nexport class mobileClassDirective {\n  @Input() mobileClass: string;\n  sub: Subscription;\n  constructor(\n    public elRef: ElementRef<HTMLDivElement>,\n    public uS: UtilityService\n  ) {}\n\n  ngAfterViewInit(): void {\n    if (this.uS.isMobile) this.handleMobile();\n    else this.handleDesktop();\n\n    this.sub = this.uS.mobileQueryChanged.subscribe((isMobile) => {\n      // debugger;\n      // debugger;\n      if (isMobile) {\n        this.handleMobile();\n      } else {\n        this.handleDesktop();\n      }\n      // console.log(ev,'media changed');\n    });\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.sub.unsubscribe();\n  }\n\n  /**\n   * If viewport is mobile\n   */\n  handleMobile() {\n    if (this.mobileClass)\n      this.elRef.nativeElement.classList.add(\n        ...extractTokens(this.mobileClass)\n      );\n  }\n\n  /**\n   * If viewport is desktop\n   */\n  handleDesktop() {\n    if (this.mobileClass)\n      this.elRef.nativeElement.classList.remove(\n        ...extractTokens(this.mobileClass)\n      );\n  }\n}\n@Directive({\n  selector: '[desktopClass]',\n  standalone: true,\n})\nexport class desktopClassDirective {\n  @Input() desktopClass: string;\n  sub: Subscription;\n  constructor(\n    public elRef: ElementRef<HTMLDivElement>,\n    public uS: UtilityService\n  ) {}\n\n  ngAfterViewInit(): void {\n    if (this.uS.isMobile) this.handleMobile();\n    else this.handleDesktop();\n\n    this.sub = this.uS.mobileQueryChanged.subscribe((isMobile) => {\n      // debugger;\n      // debugger;\n      if (isMobile) {\n        this.handleMobile();\n      } else {\n        this.handleDesktop();\n      }\n      // console.log(ev,'media changed');\n    });\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.sub.unsubscribe();\n  }\n\n  /**\n   * If viewport is mobile\n   */\n  handleMobile() {\n    if (this.desktopClass)\n      this.elRef.nativeElement.classList.remove(\n        ...extractTokens(this.desktopClass)\n      );\n  }\n\n  /**\n   * If viewport is desktop\n   */\n  handleDesktop() {\n    if (this.desktopClass)\n      this.elRef.nativeElement.classList.add(\n        ...extractTokens(this.desktopClass)\n      );\n  }\n}\n@Directive({\n  selector: '[hideMobile]',\n  standalone: true,\n})\nexport class hideMobileDirective {\n  sub: Subscription;\n  constructor(\n    public elRef: ElementRef<HTMLDivElement>,\n    public uS: UtilityService\n  ) {}\n\n  ngAfterViewInit(): void {\n    if (this.uS.isMobile) this.handleMobile();\n    else this.handleDesktop();\n\n    this.sub = this.uS.mobileQueryChanged.subscribe((isMobile) => {\n      // debugger;\n      // debugger;\n      if (isMobile) {\n        this.handleMobile();\n      } else {\n        this.handleDesktop();\n      }\n      // console.log(ev,'media changed');\n    });\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.sub.unsubscribe();\n  }\n\n  /**\n   * If viewport is mobile\n   */\n  handleMobile() {\n    this.elRef.nativeElement.hidden = true;\n  }\n\n  /**\n   * If viewport is desktop\n   */\n  handleDesktop() {\n    this.elRef.nativeElement.hidden = false;\n  }\n}\n@Directive({\n  selector: '[hideDesktop]',\n  standalone: true,\n})\nexport class hideDesktopDirective {\n  sub: Subscription;\n  constructor(\n    public elRef: ElementRef<HTMLDivElement>,\n    public uS: UtilityService\n  ) {}\n\n  ngAfterViewInit(): void {\n    if (this.uS.isMobile) this.handleMobile();\n    else this.handleDesktop();\n\n    this.sub = this.uS.mobileQueryChanged.subscribe((isMobile) => {\n      // debugger;\n      // debugger;\n      if (isMobile) {\n        this.handleMobile();\n      } else {\n        this.handleDesktop();\n      }\n      // console.log(ev,'media changed');\n    });\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.sub.unsubscribe();\n  }\n\n  /**\n   * If viewport is mobile\n   */\n  handleMobile() {\n    this.elRef.nativeElement.hidden = false;\n  }\n\n  /**\n   * If viewport is desktop\n   */\n  handleDesktop() {\n    this.elRef.nativeElement.hidden = true;\n  }\n}\n\nfunction extractTokens(tokenStr: string) {\n  return tokenStr\n    ?.trim()\n    .split(' ')\n    .filter((x) => !!x);\n}\n","import { Directive, ElementRef, Input } from '@angular/core'; \nimport { Config } from '../../config/index.config';\n\n@Directive({\n  selector: '[imageLoader]',\n  standalone: true,\n})\nexport class ImageLoaderDirective {\n  /**\n   * Path to image.\n   */\n  src: string;\n  el: HTMLElement | HTMLImageElement;\n  /**\n   * Path to image. It should be set last.\n   * Minified images' names should end with .min\n   * @exmaple logo.min.png, house.min.svg\n   */\n  @Input() set imageLoader(v: string) {\n    this.src = v;\n    this.setImage();\n  }\n  /**\n   * States whether the image src should be used as the background image of the element or the src of an image element.\n   * Default is 'img'\n   */\n  @Input() imgType: EImgType = 'img';\n\n  constructor(public elRef: ElementRef<HTMLElement | HTMLImageElement>) {}\n\n  ngAfterViewInit(): void {\n    this.el = this.elRef.nativeElement;\n    this.setImage();\n  }\n\n  setImage(src: string = this.src, imgType = this.imgType) {\n    // debugger\n    if (!this.el) return;\n    const minSRC = getMinPath(src);\n    if (imgType == 'bg') {\n      const el = this.el as HTMLElement;\n      el.style.backgroundImage = `url(${src})`;\n      if (minSRC)\n        loadImage(minSRC).then(\n          (r) =>\n            (el.style.backgroundImage =\n              el.style.backgroundImage ||\n              `url(${r || Config.placeholderImage})`)\n        );\n      loadImage(src).then((r) =>\n        r ? (el.style.backgroundImage = `url(${r})`) : null\n      );\n    } else {\n      const el = this.el as HTMLImageElement;\n      if (!src) {\n        el.src = Config.placeholderImage;\n        return;\n      }\n      loadImage(src).then((img) => (img ? (el.src = img) : null));\n      if (minSRC) el.src = el.src||minSRC;\n    }\n  }\n}\n\nconst imgTypes = [\n  '.png',\n  '.jpeg',\n  '.jpg',\n  '.png',\n  '.gif',\n  '.tiff',\n  '.psd',\n  '.pdf',\n  '.eps',\n  '.ai',\n  '.indd',\n  '.raw',\n];\n\nfunction getMinPath(src: string) {\n  for (const imgType of imgTypes) {\n    const ind = src?.toLowerCase().indexOf(imgType);\n    if (ind > -1) {\n      return src.slice(0, ind) + '.min' + src.slice(ind);\n    }\n  }\n  return undefined;\n}\nfunction loadImage(src: string) {\n  return new Promise<string>((res) => {\n    try {\n      const img = document.createElement('img');\n      img.src = src;\n      // debugger;\n      img.onload = (e) => {\n        res(src);\n      };\n    } catch (error) {\n      res(undefined);\n      console.error(error);\n    }\n  });\n}\n\n/**Image type enum obj */\nconst imgTypeEnum = {\n  bg: true,\n  img: true,\n};\n/**\n * Image type enum\n */\ntype EImgType = keyof typeof imgTypeEnum;\n","import { Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';\n\n@Directive({\n    selector: '[libDragDropFileUpload]',\n    standalone: true,\n})\nexport class DragDropFileUploadDirective {\n  @Output() fileDropped = new EventEmitter<File[]>();\n  @HostBinding('style.background-color') private background = '#ffffff';\n  // Dragover Event\n  @HostListener('dragover', ['$event']) dragOver(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.background = '#e2eefd';\n  }\n  // Dragleave Event\n  @HostListener('dragleave', ['$event']) public dragLeave(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.background = '#ffffff';\n  }\n  // Drop Event\n  @HostListener('drop', ['$event']) public drop(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.background = '#ffffff';\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      this.fileDropped.emit(Array.from(files));\n    }\n  }\n}","import { Directive, Input, ElementRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UtilityService } from \"../../services/utility.service\";\n\n@Directive({\n    selector: '[mrouterLink]',\n    standalone: true,\n})\n  export class MrouterLinkirective {\n    mrouterLink: string;\n    @Input('mrouterLink') set _mrouterLink(v: string) {\n      this.mrouterLink = v;\n      // if (v) debugger;\n      this.setRouter();\n    }\n    @Input() mrouterLinkActivatedRoute: ActivatedRoute;\n    @Input() mqueryParams: any;\n    @Input() isPhone: boolean;\n    @Input() isEmail: boolean;\n  \n    constructor(\n      public el: ElementRef<HTMLAnchorElement>,\n      public route: ActivatedRoute,\n      public router: Router,\n      public uS: UtilityService\n    ) {}\n    ngAfterViewInit(): void {\n      this.setRouter();\n    }\n    setRouter() {\n      if (this.mrouterLink && this.el.nativeElement) {\n        this.el.nativeElement.classList.remove('notLink');\n        this.el.nativeElement.classList.add('link');\n        // debugger;\n        if (this.isEmail) {\n          this.el.nativeElement.href = 'mailto:' + this.mrouterLink;\n        } else if (this.isPhone) {\n          this.el.nativeElement.href = 'tel:' + this.mrouterLink;\n        } else {\n          // debugger;\n          const queryParams: { [x: string]: string } = this.mqueryParams || {},\n            routeLevels = this.mrouterLink.split('../').length - 1,\n            currentLocationParts = location.pathname.split('/');\n          let route = '',\n            urlParts = this.mrouterLink.split('?');\n  \n          route = urlParts[0];\n          if (urlParts.length > 1) {\n            const kvps = urlParts[1].split('&');\n            for (const kvp of kvps) {\n              const kvpSplit = kvp.split('=');\n              queryParams[kvpSplit[0]] = kvpSplit[1];\n            }\n          }\n  \n          currentLocationParts.splice(routeLevels * -1);\n  \n          this.el.nativeElement.href =\n            currentLocationParts.join('/') +\n            '/' +\n            route\n              .split('../')\n              .filter((x) => x)\n              .join('/') +\n            '?' +\n            this.stringifyQueryParams(queryParams);\n          this.el.nativeElement.onclick = (e: MouseEvent) => {\n            e.preventDefault();\n            // debugger;\n            this.router.navigate([route], {\n              relativeTo: this.uS.environment.activatedRoute || this.route,\n              queryParams,\n            });\n          };\n        }\n      } else {\n        this.el.nativeElement.classList.add('notLink');\n      }\n    }\n    stringifyQueryParams(q: { [x: string]: string }): string {\n      return Object.keys(q)\n        .map((key) => `${key}=${q[key]}`)\n        .join('&');\n    }\n  }","import { NgModule } from '@angular/core';\nimport { ImageLoaderDirective } from './image-loader.directive';\nimport { DragDropFileUploadDirective } from './drag-drop-file-upload.directive';\nimport {\n  desktopClassDirective,\n  hideDesktopDirective,\n  hideMobileDirective,\n  mobileClassDirective,\n  ResponsivenessDirective,\n} from './responsiveness.directive';\nimport { MrouterLinkirective } from './router.directive';\n\nconst comp = [\n  desktopClassDirective,\n  DragDropFileUploadDirective,\n  hideDesktopDirective,\n  hideMobileDirective,\n  ImageLoaderDirective,\n  mobileClassDirective,\n  MrouterLinkirective,\n  ResponsivenessDirective, \n];\n@NgModule({\n  imports: comp,\n  exports: comp,\n})\nexport class DirectivesModule {}\n","import { NgModule } from '@angular/core';\nimport { BtnComponent } from './btn.component';\nimport { BtnLgComponent } from './btn-lg/btn-lg.component';\nimport { BtnLinkComponent } from './btn-link/btn-link.component';\n\n@NgModule({\n  imports: [ \n    BtnComponent,\n    BtnLgComponent,\n    BtnLinkComponent,\n  ],\n  exports: [BtnComponent, BtnLgComponent, BtnLinkComponent],\n})\nexport class BtnModule {}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  QueryList, ViewChildren\n} from '@angular/core';\nimport { FormControl, Validators, FormArray, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { debounceTime } from 'rxjs';\nimport { InputBasicComponent } from '../input.component';\nimport { NgFor, NgClass } from '@angular/common';\n\n@Component({\n    selector: 'app-otp-input',\n    templateUrl: './otp-input.component.html',\n    styleUrls: ['./otp-input.component.scss'],\n    standalone: true,\n    imports: [\n        NgFor,\n        FormsModule,\n        NgClass,\n        ReactiveFormsModule,\n    ],\n})\nexport class OtpInputComponent extends InputBasicComponent {\n  subForm = new FormArray<FormControl<string>>([]);\n  otpLength?: number;\n  @Input('otpLength') set _otpLength(v: number) {\n    this.otpLength = v;\n    this.genForm(v);\n  }\n  @ViewChildren('otpInput') otpInputRef: QueryList<\n    ElementRef<HTMLInputElement>\n  >;\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.control.valueChanges.pipe().subscribe((r) => {\n      if (!r) this.subForm.reset();\n    });\n    this.subForm.valueChanges.pipe(debounceTime(1000)).subscribe((r) => {\n      if (r.join('')) this.control?.patchValue(r.join(''));\n    });\n  }\n  override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    setTimeout(() => {\n      for (const elRef of this.otpInputRef) {\n        elRef.nativeElement.onpaste = (e) => {\n          let pastedText = undefined;\n          if (window['clipboardData'] && window['clipboardData'].getData) {\n            // IE\n            pastedText = window['clipboardData'].getData('Text');\n          } else if (e.clipboardData && e.clipboardData.getData) {\n            pastedText = e.clipboardData.getData('text/plain');\n          }\n          this.subForm.controls.forEach((x, i) => {\n            x.patchValue(pastedText[i] || undefined);\n          }); // Process and handle text...\n          return false; // Prevent the default handler from running.\n        };\n      }\n    }, 1000);\n  }\n\n  genForm(otpLength = this.otpLength) {\n    for (let index = 0; index < otpLength; index++) {\n      const form = new FormControl<string>(null, [\n        Validators.required,\n        Validators.maxLength(1),\n      ]);\n      form.valueChanges.subscribe((r) => {\n        if (this.type == 'number' && r && !/^\\d+$/.test(r)) form.reset();\n        else if (r?.length == 1) {\n          document.getElementById(this.id + (index + 1))?.focus();\n        }\n      });\n      this.subForm.insert(index, form);\n    }\n  }\n\n  onChange(e, form: FormControl) {\n    // console.log(e);\n\n    form.patchValue(e.data);\n  }\n}\n","<div class=\"d-inline-flex  justify-content-center  \" >\n    <ng-container *ngFor=\"let f of subForm.controls; let i = index\">\n        <div class=\" otpi\">\n            <input #otpInput id=\"{{id}}{{i}}\" [ngClass]=\"{hasValue:f.value}\"  (input)=\"onChange($event,f)\" [formControl]=\"f\">\n        </div>\n    </ng-container>\n</div>","import { NgModule } from '@angular/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InputPipesModule } from './inputs-pipes.pipe';\nimport { InputBasicComponent } from './input.component';\n\nimport { BtnModule } from '../btn/btn.module';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {\n  ErrorMessagePipe,\n  ErrorMessagesPipe,\n  ValidationMessageComponent,\n} from './validation-message/validation-message.component';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OtpInputComponent } from './otp-input/otp-input.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { InputTD_RFComponent } from './input-td-rf.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  imports: [\n    BtnModule,\n    ErrorMessagePipe,\n    ErrorMessagesPipe,\n    FormsModule,\n    InputBasicComponent,\n    InputPipesModule,\n    InputTD_RFComponent,\n    MatDatepickerModule,\n    MatInputModule,\n    ErrorMessagePipe,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatTooltipModule,\n    MatTooltipModule,\n    OtpInputComponent,\n    ReactiveFormsModule,\n    ValidationMessageComponent,\n  ],\n  exports: [\n    BtnModule,\n    ErrorMessagePipe,\n    ErrorMessagesPipe,\n    FormsModule,\n    InputBasicComponent,\n    InputPipesModule,\n    InputTD_RFComponent,\n    MatDatepickerModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatTooltipModule,\n    MatTooltipModule,\n    OtpInputComponent,\n    ReactiveFormsModule,\n    ValidationMessageComponent,\n  ],\n  providers: [ErrorMessagePipe],\n})\nexport class InputModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SvgIconComponent } from './svg-icon.component';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SvgIconComponent\n    ],\n    exports: [\n        SvgIconComponent\n    ]\n})\nexport class SvgIconModule { }\n","import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { DirectivesModule } from '../../directives/directives.module';\nimport { InputModule } from '../input/input.module';\nimport { SvgIconModule } from '../svg-icon/svg-icon.module';\n\n@Component({\n  selector: 'precentage-trend',\n  templateUrl: './precentage-trend.component.html',\n  styleUrls: ['./precentage-trend.component.scss'],\n  standalone:true,\n  imports: [CommonModule, SvgIconModule, InputModule, DirectivesModule],\n})\nexport class PrecentageTrendComponent {\n  trend: number; \n  noData: boolean;\n  cls: string;\n  @Input('trend') set _trend(v: string | number) {\n    // debugger\n    if (v==null || v==undefined ) {\n      this.noData = true;\n      return;\n    }\n    this.noData=false\n    this.trend = +v;\n    this.cls = this.trend > 0 ? 'success' : this.trend < 0 ? 'danger' : '';\n    // this.cls =  'danger'   \n  }\n  @Input() message: string;\n}\n","<span class=\"trend\">\n    <ng-container *ngIf=\"!noData; else elseTemplate\">\n        <span class=\"{{cls}}\">\n            <svg-icon icon=\"up\" *ngIf=\"cls\"></svg-icon> {{trend}}%\n        </span><span class=\"message\">{{message}}</span>\n    </ng-container>\n    <ng-template #elseTemplate>\n        <span>No data</span>\n    </ng-template>\n</span>","import { SelectionChange, SelectionModel } from '@angular/cdk/collections';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { UtilityService } from '../../../services/utility.service';\nimport { IRowOption, ITableCol, SortType, TableCol } from './table.model';\nimport { FunctionCaller1, FunctionCaller2, ToAnyPipe, ValueOrXPipe } from '../../pipes/utility.pipe';\nimport { GetColFormattedPipe, GetRawFieldsPipe } from './table.pipe';\nimport { ResponsivenessDirective, hideMobileDirective, hideDesktopDirective } from '../../directives/responsiveness.directive';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterLink } from '@angular/router';\nimport { BtnComponent } from '../btn/btn.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { NgClass, NgIf, NgFor, NgSwitch, NgSwitchCase, NgSwitchDefault, AsyncPipe, TitleCasePipe } from '@angular/common';\nimport { PrecentageTrendComponent } from '../precentage-trend/precentage-trend.component';\n\n@Component({\n    selector: 'table-plain',\n    templateUrl: './table-plain.component.html',\n    styleUrls: ['./table-plain.component.scss'],\n    standalone: true,\n    imports: [\n        NgClass,\n        MatTableModule,\n        MatSortModule,\n        NgIf,\n        MatCheckboxModule,\n        NgFor,\n        NgSwitch,\n        NgSwitchCase,\n        BtnComponent,\n        PrecentageTrendComponent,\n        NgSwitchDefault,\n        RouterLink,\n        MatTooltipModule,\n        MatMenuModule,\n        MatIconModule,\n        MatPaginatorModule,\n        ResponsivenessDirective,\n        hideMobileDirective,\n        hideDesktopDirective,\n        AsyncPipe,\n        TitleCasePipe,\n        GetColFormattedPipe,\n        GetRawFieldsPipe,\n        FunctionCaller1,\n        FunctionCaller2,\n        ToAnyPipe,\n        ValueOrXPipe,\n    ],\n})\nexport class TablePlainComponent<TItem> implements OnInit {\n  @Input('label') text: string;\n  @Input('rowOptions') options: IRowOption[];\n  @Input('rowOptionsMap') optionsMap: (row: TItem) => IRowOption<TItem>[];\n  @Input() centerCells: boolean;\n  @Input() curvy = false;\n  @Input() customSelectClass; // custom class for row selection checkboxes\n  displayedColumns: TableCol[];\n  @Input('displayedColumns') set _displayedColumns(value: TableCol[]) {\n    if (this.uS.isMobile) value.forEach((x) => (x.isSticky = false));\n    this.displayedColumns = value;\n  }\n  @Input() distinct: boolean;\n  @Input() formatColumnHeaders = true;\n  @Input() idField: string = 'id';\n  @Input() noItemTxt: string = 'There are no items';\n  @Input() nowrap = true;\n  @Input() orderDirection: SortType = 'asc';\n  @Input() orderField: string;\n  @Input() pageSize = this.uS.isMobile ? 5 : 10;\n  @Input() pageSizeOptions = [5, 10, 15, 20, 50, 100, 200];\n  @Input() placeSelectionAtRight = false; // support customizing the position of the select checkboxes.\n  @Input() resultsLength = 0;\n  @Input() showExport = false;\n  @Input() showFilter = false;\n  @Input() showPager = false;\n  @Input() showRowPointer = false;\n  @Input() smallerFonts = false;\n  @Input() isDisabledFunc: (row: TItem) => boolean;\n  @Input() useSelection = false;\n  @Output('rowClick') _rowClick = new EventEmitter<any>();\n  @Output('view') _view = new EventEmitter<any>();\n  @Output() listMutated = new EventEmitter<TItem[]>();\n  @Output() selectionChanged = new EventEmitter<SelectionChange<TItem>>();\n  dataSource: MatTableDataSource<any>;\n  defaultFilterPredicate: any;\n  form = new FormGroup({ field: new FormControl(), value: new FormControl() });\n  mutableList: any[];\n  selection = new SelectionModel<TItem>(true, []);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Output() emitCheckbox = new EventEmitter<{\n    field: string;\n    item: TItem;\n    value: boolean;\n  }>();\n  @Input('data') set _data(v: TItem[]) {\n    console.log(v);\n    this.dataSource = new MatTableDataSource(v || []);\n    // this.showPager=v?.length>this.pageSize\n    if (this.showPager) {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n    this.selection?.clear();\n    this.resultsLength = v?.length;\n    this.mutableList = v;\n  }\n\n  constructor(public uS: UtilityService) {}\n  ngOnInit() {\n    this.selection.changed.subscribe((r) => { \n      this.selectionChanged.emit(r);\n    });\n  }\n  ngAfterViewInit(): void {\n    if (this.showPager && this.dataSource) {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  get filterOptions() {\n    return this.displayedColumns.map((x) => ({ code: x.f, description: x.t }));\n  }\n  clearFilter() {\n    this.form.reset();\n  }\n  outputCheckbox(field: string, item: TItem, value: any) {\n    console.log(field, item, value, this.mutableList);\n    const find = this.mutableList?.find(\n      (x) => x[this.idField] == item[this.idField]\n    );\n    if (find) find[field] = value;\n    this.emitCheckbox.emit({ field, item, value });\n    this.listMutated.emit(this.mutableList);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection?.selected?.length;\n    const numRows = this.dataSource?.data?.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  get selectedItems() {\n    return this.selection.selected;\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n      row.position + 1\n    }`;\n  }\n  rowClick(e) {\n    this._rowClick.emit(e);\n  }\n  clickBtn(col: ITableCol, row: TItem) {\n    if (col?.btn?.action) col.btn.action(row, col.f);\n  }\n\n  getActionStatusCallback(col) {\n    return (state: boolean) => (col.btn.loading = state);\n  }\n  protected pageSizeIncrementor: number = 10;\n  increasePageSize() {\n    if (this.dataSource?.data?.length <= this.dataSource.paginator.pageSize)\n      return;\n    this.dataSource.paginator.pageSize =\n      this.dataSource.paginator.pageSize + this.pageSizeIncrementor;\n    this._data = this.mutableList;\n  }\n  decreasePageSize() {\n    if (this.paginator.pageSize > this.pageSizeIncrementor)\n      this.paginator.pageSize =\n        this.paginator.pageSize - this.pageSizeIncrementor;\n  }\n  resetPageSize() {\n    this.dataSource.paginator.pageSize = this.pageSize;\n    this._data = this.mutableList;\n  }\n  optionLabeller = (option: IRowOption, row: TItem) =>\n    option?.labelFormatter ? option.labelFormatter(row) : option.t;\n}\n","<div class=\" \">\n  <div [ngClass]=\"{ border: distinct }\">\n    <div class=\"table-container\" #container>\n      <div class=\"overflow-auto\">\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-100 d-table   mb-0\"\n          [ngClass]=\"{smallerFonts,nowrap,centerCells,curvy}\">\n          <!-- Checkbox Column -->\n          <ng-container matColumnDef=\"mselect\" [sticky]=\"!placeSelectionAtRight\" [stickyEnd]=\"placeSelectionAtRight\">\n            <th mat-header-cell *matHeaderCellDef>\n              <ng-container *ngIf=\"customSelectClass\">\n                <input type=\"checkbox\" [class]=\"customSelectClass\" (change)=\"$event ? masterToggle() : null\"\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [attr.aria-label]=\"checkboxLabel()\" />\n              </ng-container>\n              <ng-container *ngIf=\"!customSelectClass\">\n                <mat-checkbox class=\"circle-checkbox\" (change)=\"$event ? masterToggle() : null\"\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </ng-container>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n              <ng-container *ngIf=\"customSelectClass\">\n                <input type=\"checkbox\" class=\"form-control control-bg-gray\" (click)=\"$event.stopPropagation()\"\n                  (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                  [attr.aria-label]=\"checkboxLabel(row)\" />\n              </ng-container>\n              <ng-container *ngIf=\"!customSelectClass\">\n                <mat-checkbox class=\"circle-checkbox\" (click)=\"$event.stopPropagation()\"\n                  (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                  [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </ng-container>\n            </td>\n          </ng-container>\n          <!-- Columns -->\n          <ng-container *ngFor=\"let col of displayedColumns; let i = index\">\n            <ng-container [ngSwitch]=\"col.type\">\n\n\n              <!-- Button -->\n              <ng-container *ngSwitchCase=\"'button'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"btn-cell\">\n                  <app-btn [icon]=\"col.btn?.icon\" [type]=\"col.btn?.type\" (mclick)=\"clickBtn(col,row)\"\n                    [text]=\"col.btn?.label\" [loading]=\"col.btn?.loading\" [iconBtn]=\"col.btn?.iconBtn\" mclass=\"w-auto\"\n                    [disabled]=\"col.btn?.disabled || col.btn?.loading\"></app-btn>\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- Trend -->\n              <ng-container *ngSwitchCase=\"'trend'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                  {{ col.t|titlecase }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"btn-cell\">\n                  <precentage-trend [trend]=\"row[col.f]\"></precentage-trend>\n                </td>\n              </ng-container>\n              <!--// -->\n\n\n              <!-- DEFAULT -->\n              <ng-container matColumnDef=\"{{ col.f|toAny }}\" *ngSwitchDefault>\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                  {{formatColumnHeaders?(col.t|titlecase):col.t }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <ng-container *ngIf=\"col.routeFormatter; else elseNoRouteTemplate\">\n                    <a class=\"cell link pointer {{col.itemClassFunc|functionCaller1:row}} \"\n                      [routerLink]=\"[col?.routeFormatter|functionCaller1:row]\"\n                      [queryParams]=\"col?.mqueryParams|functionCaller1:row\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </a>\n                  </ng-container>\n                  <ng-template #elseNoRouteTemplate>\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </div>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <!--// -->\n            </ng-container>\n          </ng-container>\n\n          <!-- Options Column -->\n          <ng-container matColumnDef=\"option\" *ngIf=\"options?.length>0||optionsMap\" stickyEnd>\n            <th mat-header-cell class=\"lastStickyItem w-auto\" *matHeaderCellDef disableClear></th>\n            <td mat-cell class=\"lastStickyItem w-auto\" *matCellDef=\"let row\">\n              <ng-container *ngIf=\"optionsMap; else elseOptionsTemplate\">\n                <ng-container *ngIf=\"(optionsMap|functionCaller1:row) as _rowoptions\">\n                  <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                    <mat-icon>more_vert</mat-icon>\n                  </app-btn>\n                  <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item *ngFor=\"let option of _rowoptions\" (click)=\"option.action(row)\">\n                      {{optionLabeller|functionCaller2:option:row}}\n                    </button>\n                  </mat-menu>\n                </ng-container>\n              </ng-container>\n              <ng-template #elseOptionsTemplate>\n                <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                  <mat-icon>more_vert</mat-icon>\n                </app-btn>\n                <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item *ngFor=\"let option of options\" (click)=\"option.action(row)\">\n                    {{optionLabeller|functionCaller2:option:row}}\n                  </button>\n                </mat-menu>\n              </ng-template>\n            </td>\n          </ng-container>\n\n\n\n          <ng-container\n            *ngIf=\"displayedColumns | getRawFields: !!options?.length:useSelection:placeSelectionAtRight as dcols\">\n            <tr mat-header-row *matHeaderRowDef=\"dcols\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: dcols\"  [ngClass]=\"{pointer:showRowPointer,selected:selection.isSelected(row),disabled:isDisabledFunc?isDisabledFunc(row):false}\"\n            (click)=\"rowClick(row)\">\n            </tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\" [attr.colspan]=\"dcols?.length || 1\">\n                {{ noItemTxt }}\n              </td>\n            </tr>\n          </ng-container>\n        </table>\n      </div>\n      <ng-container *ngIf=\"showPager\">\n        <mat-paginator mresponsiveness [hideMobile]=\"true\" [length]=\"resultsLength\" [pageSizeOptions]=\"pageSizeOptions\"\n          [pageSize]=\"pageSize\" showFirstLastButtons>\n        </mat-paginator>\n        <div class=\"  \" mresponsiveness [hideDesktop]=\"true\">\n          <div class=\" d-flex justify-content-center\">\n            <app-btn text=\"See more\" type=\"clear-pm\" (mclick)=\"increasePageSize()\"\n              *ngIf=\"dataSource?.data?.length>paginator?.pageSize;else showLess\" />\n            <ng-template #showLess>\n              <app-btn text=\"See less\" type=\"clear-pm\" (mclick)=\"resetPageSize()\" />\n            </ng-template>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Component({\n    selector: 'app-text',\n    templateUrl: './text.component.html',\n    styleUrls: ['./text.component.scss'],\n    standalone: true,\n    imports: [MatTooltipModule],\n})\nexport class TextComponent {\n  @Input()text:string\n\n}\n","<div class=\"text\" [matTooltip]=\"text\" [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\" #ele>\n    {{text}}</div>","import { Component, Input } from '@angular/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { NgIf, NgStyle } from '@angular/common';\nimport { ProgressLoader, ProgressLoaders } from '../../classes/progress-loader.class';\n\n@Component({\n  selector: 'loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgStyle, MatProgressBarModule],\n})\nexport class LoaderComponent {\n  @Input() class: classes = 'vh-60';\n  @Input() text: string;\n\n  @Input() hasContent: boolean;\n  loader = new ProgressLoader();\n  progress: number;\n  @Input('loading') set _loading(v: boolean) {\n    if (v) this.startLoader();\n    else this.stopLoader();\n  }\n  get loading() {\n    return this.loaders.isLoading;\n  }\n  loaders: ProgressLoaders;\n  height: string;\n  @Input('height') set _height(v: number) {\n    const minHeight = 150;\n    this.height = v ? (v < minHeight ? minHeight : v) + 'px' : this.height;\n  }\n  constructor() {\n    this.loaders = new ProgressLoaders();\n    this.loaders.addLoader(this.loader);\n  }\n  ngOnInit() {}\n  startLoader() {\n    this.loader.startPl();\n  }\n  stopLoader() {\n    this.loaders?.stopAllLoaders();\n    // this.loader.stopPl();\n  }\n  stepLoader(v: boolean) {\n    this._loading = v;\n  }\n}\n\ntype classes =\n  | 'h-100'\n  | 'vh-10'\n  | 'vh-20'\n  | 'vh-30'\n  | 'vh-40'\n  | 'vh-50'\n  | 'vh-60'\n  | 'vh-70'\n  | 'vh-80'\n  | 'vh-90'\n  | 'vh-95'\n  | 'vh-100';\n","<div class=\"h-100\">\n  <div *ngIf=\"loading\" class=\" {{height?'':class}}  center w-100 \" id=\"loader\" [ngStyle]=\"{height }\">\n    <div class=\"w-100 text-center d-flex justify-content-center\">\n      <div class=\"w-100\">\n        <div class=\"lds-ellipsis\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n        <div class=\"my-16 w-100\" *ngIf=\"progress\">\n          <div class=\"progress-value\">\n            {{progress}}%\n          </div>\n          <div class=\"text-start mt-16 w-100\">\n            <mat-progress-bar class=\"  w-100\" mode=\"determinate\" [value]=\"progress\" />\n          </div>\n        </div> \n        <h5 class=\"mt-2 noselect text-center\" *ngIf=\"text\" [innerHTML]=\"text\"></h5>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"h-100\" [hidden]=\"loading\">\n    <!-- <div > -->\n\n    <ng-container *ngIf=\"hasContent==null; else elsehasContentTemplate\">\n      <ng-content></ng-content>\n    </ng-container>\n    <ng-template #elsehasContentTemplate>\n      <ng-container *ngIf=\"hasContent; else elseTemplate\">\n        <ng-content select=\"[content]\"></ng-content>\n      </ng-container>\n      <ng-template #elseTemplate>\n        <ng-content select=\"[noContent]\"></ng-content>\n      </ng-template>\n\n    </ng-template>\n\n  </div>\n</div>","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { InputBasicComponent } from '../input/input.component';\nimport { FormsModule } from '@angular/forms';\nimport { BtnComponent } from '../btn/btn.component';\n\n@Component({\n    selector: 'search-box',\n    templateUrl: './search-box.component.html',\n    styleUrls: ['./search-box.component.scss'],\n    standalone: true,\n    imports: [BtnComponent, FormsModule],\n})\nexport class SearchBoxComponent {\n  @Input() label: string = 'Search';\n  @Input() query: string;\n  @Output() queryChanged = new EventEmitter<string>();\n  opened: boolean;\n  constructor() {}\n}\n","<div class=\"d-flex\">\n    <app-btn icon=\"search\" [iconBtn]=\"true\" (mclick)=\"opened=!opened\" type=\"clear\" [hidden]=\"opened\"></app-btn>\n    \n    <input [hidden]=\"!opened\" #inp type=\"search\" [(ngModel)]=\"query\" (ngModelChange)=\"queryChanged.emit($event)\" placeholder=\"{{label}}\">\n    <app-btn icon=\"close\" [iconBtn]=\"true\" (mclick)=\"opened=!opened;query=null\" type=\"clear\" [hidden]=\"!opened\"></app-btn>\n</div>","import { SelectionChange } from '@angular/cdk/collections';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { UtilityService } from '../../../services/utility.service';\nimport { SelectionData } from '../../../shared/classes/selector.class';\nimport { IListValue } from '../../../shared/models/index.model';\nimport { cloneDeep } from 'lodash-es';\nimport { lastValueFrom, Observable } from 'rxjs';\nimport { IRowOption, TableCol } from '../table-plain/table.model';\nimport { FilterArrayByStringPipe, FunctionCaller1, ToAnyPipe } from '../../pipes/utility.pipe';\nimport { NoListComponent } from '../no-list/no-list.component';\nimport { TablePlainComponent } from '../table-plain/table-plain.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { TextComponent } from '../text/text.component';\nimport { LoaderComponent } from '../loader/loader.component';\nimport { BtnComponent } from '../btn/btn.component';\nimport { SearchBoxComponent } from '../search-box/search-box.component';\nimport { CountComponent } from '../count/count.component';\nimport { SvgIconComponent } from '../svg-icon/svg-icon.component';\nimport { NgFor, NgSwitch, NgSwitchCase, NgIf, NgSwitchDefault, NgClass, TitleCasePipe } from '@angular/common';\n\n@Component({\n    selector: 'grid-or-list',\n    templateUrl: './grid-or-list.component.html',\n    styleUrls: ['./grid-or-list.component.scss'],\n    standalone: true,\n    imports: [\n        NgFor,\n        NgSwitch,\n        NgSwitchCase,\n        SvgIconComponent,\n        RouterLink,\n        NgIf,\n        CountComponent,\n        NgSwitchDefault,\n        SearchBoxComponent,\n        BtnComponent,\n        LoaderComponent,\n        TextComponent,\n        NgClass,\n        MatCheckboxModule,\n        TablePlainComponent,\n        NoListComponent,\n        TitleCasePipe,\n        FilterArrayByStringPipe,\n        FunctionCaller1,\n        ToAnyPipe,\n    ],\n})\nexport class GridOrListComponent<TItem> {\n  eViewType = EViewType;\n  viewTypes: IListValue<EViewType>[] = [\n    { name: 'grid', value: EViewType.grid },\n    { name: 'list', value: EViewType.list },\n  ];\n  @Input() viewType = this.viewTypes[0].value;\n\n  displayedColumns: TableCol<TItem>[];\n  displayedColumnsFields: (keyof TItem)[];\n  mainField: TableCol<TItem>;\n  subFields: TableCol<TItem>[];\n  breadcrumbs: TableCol[] = [];\n  @Input() loading: boolean;\n  @Input() mID: string;\n  @Input() parentID: string;\n  @Output() onEdit = new EventEmitter<TItem>();\n  rowOptions: IRowOption<TItem>[] =[{ t: 'Edit', action: (r) => this.onEdit.emit(r) }]\n  pageName: string;\n  idValues: { [x: string]: string };\n\n  @Input('displayedColumns') set _displayedColumns(value: TableCol<TItem>[]) {\n    this.displayedColumns = value;\n    this.displayedColumnsFields =\n      value?.filter((x) => !x.hide)?.map((x) => x.f) || [];\n    this.mainField = this.displayedColumns[0];\n    this.subFields = this.displayedColumns?.filter((x) => !x.hide).slice(1);\n  }\n  protected data: TItem[];\n  @Input('data') set _data(v: TItem[]) {\n    this.data = cloneDeep(v);\n    this.selection = new SelectionData(this.data);\n  }\n  @Input() deleteFunc: (items: TItem[]) => Observable<any>;\n  protected searchFunction: (id?: string) => Observable<TItem[]>;\n  @Input('searchFunction') set _searchFunction(\n    v$: (id?: string) => Observable<TItem[]>\n  ) {\n    this.searchFunction = v$;\n    this.fetchData(v$);\n  }\n\n  selection: SelectionData<TItem>;\n\n  constructor(public uS: UtilityService, public route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.pageName = this.route.snapshot.queryParamMap.get(\n      this.parentID + 'Name'\n    );\n    this.formBreadCrumbs();\n  }\n\n  protected fetchData(v$: (id?: string) => Observable<TItem[]>) {\n    this.loading = true;\n    v$(\n      this.parentID\n        ? this.route.snapshot.queryParamMap.get(this.parentID + 'ID')\n        : undefined\n    ).subscribe({\n      next: (r) => {\n        // debugger;\n        this.data = r;\n        this.selection = new SelectionData(this.data);\n        this.loading = false;\n      },\n      error: (error) => {\n        this.uS.notify(error);\n        console.error(error);\n        this.loading = false;\n      },\n    });\n  }\n  switchView(vt: IListValue<EViewType, any>) {\n    this.viewType = vt.value;\n    this.selection.reset();\n  }\n  tableSelection(r: SelectionChange<TItem>) {\n    // debugger;\n    r?.added?.forEach((x) => {\n      this.selection.itemChanged(x['id'], { checked: true });\n    });\n    r?.removed?.forEach((x) => {\n      this.selection.itemChanged(x['id'], { checked: false });\n    });\n  }\n  async deleteItems(items: TItem[]) {\n    if (this.deleteFunc)\n      try {\n        this.loading = true;\n        await lastValueFrom(this.deleteFunc(items));\n        this.refresh();\n        this.loading = false;\n      } catch (error) {\n        console.error(error);\n        this.uS.notify(error, 0);\n        this.loading = false;\n      }\n  }\n  refresh() {\n    // debugger;\n    this._searchFunction = this.searchFunction;\n  }\n  formBreadCrumbs() {\n    const queries = this.route.snapshot.queryParams;\n    const bc: TableCol[] = [];\n    const routes = location.pathname\n      .split('/')\n      .filter((x) => x?.includes('listing'))\n      .map((x) => x.split('-')[0])\n      .reverse();\n    routes.splice(0, 1);\n    this.idValues = {};\n    for (let index = 0; index < routes.length; index++) {\n      const id = routes[index];\n      this.idValues[id] = queries[id + 'ID'];\n      // debugger;\n      bc.push({\n        f:\n          index == 0\n            ? undefined\n            : '../'.repeat(index + 1) + routes[index - 1] + '-listing',\n        t: queries[id + 'Name'],\n        value: index == 0 ? undefined : queries[routes[index - 1] + 'Count'],\n      });\n    }\n    console.log(this.idValues);\n    bc.reverse();\n    this.breadcrumbs = [\n      //#region\n      <TableCol>{\n        t: 'Zonal Offices',\n        f: bc.length\n          ? '../'.repeat(bc.length + 1) + routes.lastItem() + '-listing'\n          : './',\n        value: queries[routes[0] + 'Count'],\n      },\n      //#endregion\n    ].concat(bc);\n  }\n  formQueryParams = (row: TItem) => {\n    return {\n      [this.mID + 'ID']: row['id'],\n      [this.mID + 'Name']: row['name'],\n      [this.mID + 'Count']: this.data.length,\n    };\n  };\n}\nenum EViewType {\n  list = 'list',\n  grid = 'grid',\n}\n","<div class=\"row row-cols-auto form-grid justify-content-between mb-16\">\n    <div class=\"\">\n        <div class=\"row row-cols-auto g-8-2 align-items-center\">\n            <div>\n                <div class=\"row row-cols-auto g-8-2 align-items-center\">\n                    <ng-container *ngFor=\"let crumb of breadcrumbs;let isLast = last;let isFirst = first\">\n                        <span>\n                            <ng-container [ngSwitch]=\"true\">\n                                <ng-container *ngSwitchCase=\"isFirst\">\n                                    <span class=\"pe-lg-0 row row-cols-auto g-8-2 align-items-center\">\n                                        <svg-icon icon=\"home\" [routerLink]=\"[crumb.f]\" queryParamsHandling=\"merge\"\n                                            class=\"pointer\" />\n                                        <a [routerLink]=\"[crumb.f]\" queryParamsHandling=\"merge\" class=\" color-inherit \">\n                                            {{crumb.t|titlecase}}</a>\n                                        <ng-container *ngIf=\"!isLast\">\n                                            <count class=\" \" [count]=\"crumb?.value||0\">\n                                            </count><span class=\"text-primary\">/</span>\n                                        </ng-container>\n                                    </span>\n                                </ng-container>\n                                <ng-container *ngSwitchCase=\"isLast\">\n\n                                </ng-container>\n                                <ng-container *ngSwitchDefault>\n                                    <span class=\"pe-lg-0 row row-cols-auto g-8-2 align-items-center\">\n                                        <a [routerLink]=\"[crumb.f]\" queryParamsHandling=\"merge\"\n                                            class=\"  color-inherit \">{{crumb.t|titlecase}}</a>\n                                        <count class=\" \" [count]=\"crumb?.value||0\">\n                                        </count>\n                                        <span class=\"text-primary\"> /</span>\n                                    </span>\n                                </ng-container>\n                            </ng-container>\n                        </span>\n                    </ng-container>\n                </div>\n            </div>\n            <div class=\"d-flex\">\n                <span>{{pageName|titlecase}}</span>\n            </div>\n            <div class=\"d-flex\">\n                <count class=\" \" [count]=\"data?.length||0\">\n                </count>\n            </div>\n            <div class=\"d-flex\">\n                <search-box label=\"Search\" #searchBox hideMobile />\n            </div>\n        </div>\n    </div>\n    <div class=\"\">\n        <div class=\"row row-cols-auto g-0\">\n            <div class=\"\" *ngFor=\"let vt of viewTypes\">\n                <app-btn (mclick)=\"switchView(vt)\" [help]=\"vt.value|titlecase\" [showHelpIcon]=\"false\" [icon]=\"vt.value\"\n                    [type]=\"vt.value==viewType?'clear-pm':'clear'\" />\n            </div>\n        </div>\n    </div>\n</div>\n<loader [loading]=\"loading\" [hasContent]=\"!!data?.length\">\n    <div content>\n        <div class=\"\">\n            <ng-container [ngSwitch]=\"viewType\">\n                <ng-container *ngSwitchCase=\"eViewType.grid\">\n                    <div class=\"row  m-grid form-grid\">\n                        <div class=\"col-lg-3 \"\n                            *ngFor=\"let item of data|filterArrayByString:searchBox?.query:displayedColumnsFields\">\n                            <div class=\"card px-24 py-16\">\n                                <div class=\"head d-flex pointer justify-content-between align-items-center mb-8\">\n                                    <a [routerLink]=\"[mainField?.routeFormatter|functionCaller1:item]\"\n                                        [queryParams]=\"formQueryParams|functionCaller1:item\"\n                                        class=\"color-inherit d-block w-100\" queryParamsHandling=\"merge\">\n                                        <app-text [text]=\"item[mainField.f]|toAny\"></app-text>\n                                    </a>\n                                    <div class=\"mrb\" [ngClass]=\"{visible:mrb.checked}\">\n                                        <mat-checkbox #mrb class=\"circle-checkbox\"\n                                            (change)=\"selection?.itemChanged(item['id'],$event)\">\n                                        </mat-checkbox>\n                                        <app-btn [mini]=\"true\" type=\"clear\" icon=\"edit\" (mclick)=\"onEdit.emit(item)\" />\n                                    </div>\n                                </div>\n                                <div class=\"misc mt-8\" *ngFor=\"let field of subFields\">\n                                    <div class=\"row row-cols-lg-auto form-grid justify-content-between\">\n                                        <div class=\"misc-title\">\n                                            {{field.t}}\n                                        </div>\n                                        <div class=\"misc-val\" [innerHTML]=\"field.formatter?(field.formatter|functionCaller1:item[field.f]):item[field.f]\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"eViewType.list\">\n                    <table-plain (selectionChanged)=\"tableSelection($event)\"\n                        [data]=\"data|filterArrayByString:searchBox?.query:displayedColumnsFields\" [rowOptions]=\"rowOptions\"\n                        [displayedColumns]=\"displayedColumns\" [useSelection]=\"true\" [showPager]=\"true\" />\n                </ng-container>\n            </ng-container>\n        </div>\n    </div>\n    <no-list header=\"No {{mID}} has been created\" [hideAddBtn]=\"true\" noContent />\n</loader>","import { Injectable } from '@angular/core';\nimport {\n  MatDialog as MatDialog,\n  MatDialogRef as MatDialogRef,\n} from '@angular/material/dialog';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport { IdlerComponent } from './idler.component';\n\n@Injectable()\nexport class IdlerService {\n  private idleState: string;\n  private timedOut: boolean;\n  private onIdleFunctions: any[] = [];\n  private _timeLeft: number;\n  idlerModal: MatDialogRef<IdlerComponent>;\n  get timeLeft() {\n    return this._timeLeft;\n  }\n  private idleTime = 240; //in seconds\n  private timeOutTime = 60; //in seconds\n  constructor(private idle: Idle, public dialog: MatDialog) {}\n  startIdler(idleTimeSec = this.idleTime) { \n    this.idleTime = idleTimeSec * 0.8;\n    this.timeOutTime = idleTimeSec * 0.2;\n    this.idle.setIdle(idleTimeSec);\n    this.idle.setTimeout(this.timeOutTime);\n    this.idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n\n    this.idle.onIdleEnd.subscribe(() => {\n      this.idlerModal.close();\n    });\n    this.idle.onTimeout.subscribe(() => {\n      this.idleState = 'Timed out!';\n      this.timedOut = true;\n      for (const func of this.onIdleFunctions) {\n        func();\n      }\n    });\n    this.idle.onIdleStart.subscribe(() => {\n      this.idleState = \"You've gone idle!\";\n      console.log(this.idleState);\n      this.openTimeWarningModal();\n    });\n    this.idle.onTimeoutWarning.subscribe((countdown) => {\n      this._timeLeft = countdown;\n    });\n\n    this.reset();\n  }\n  private reset() {\n    this.idle.watch();\n  }\n  clear() {\n    this.onIdleFunctions = [];\n  }\n  addOnIdleFunction(func: any) {\n    this.onIdleFunctions.push(func);\n  }\n  openTimeWarningModal() {\n    this.idlerModal = this.dialog.open(IdlerComponent, {\n      // height: 'auto',\n      // width: 'auto',\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef as MatDialogRef } from '@angular/material/dialog';\nimport { UtilityService } from '../../../services/utility.service';\nimport { IdlerService } from './idler.service';\nimport { NgIf } from '@angular/common';\n\n@Component({\n    selector: 'app-idler',\n    templateUrl: './idler.component.html',\n    styleUrls: ['./idler.component.scss'],\n    standalone: true,\n    imports: [NgIf],\n})\nexport class IdlerComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<IdlerComponent>,\n    public idlerService: IdlerService,\n    public uS: UtilityService\n  ) {}\n\n  ngOnInit(): void {}\n  close() {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"center h-100 p-16 text-center text-danger\" *ngIf=\"uS.secondsToHourMinSec(idlerService.timeLeft) as timeLeft\">\n  You will be logged out in {{timeLeft.hours?timeLeft.hours+'hrs':''}}\n  {{timeLeft.mins?timeLeft.mins+'min':''}} {{timeLeft.secs?timeLeft.secs+'s':''}}\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { MatDialogRef as MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { BtnComponent } from '../btn/btn.component';\n\n@Component({\n    selector: 'modal-header',\n    templateUrl: './modal-header.component.html',\n    styleUrls: ['./modal-header.component.scss'],\n    standalone: true,\n    imports: [MatDialogModule, BtnComponent],\n})\nexport class ModalHeaderComponent implements OnInit {\n  @Input() dialogRef: MatDialogRef<any>;\n  @Input() header:string;\n  /**\n   * Value to pass into the close function of the modal\n   */\n  @Input() onCloseValue:any;\n  constructor() {}\n\n  ngOnInit(): void {}\n  close() {\n    this.dialogRef.close(this.onCloseValue);\n  }\n}\n","<div class=\"d-flex justify-content-between align-items-center custom-modal-header\">\n  <div class=\"text\" mat-dialog-title>{{header }}</div>\n  <app-btn icon=\"close\" type=\"clear\" (mclick)=\"close()\"></app-btn>\n</div>\n<ng-content></ng-content>","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatDialogConfig,\n  MatDialogRef as MatDialogRef,\n} from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { UtilityService } from '../../../services/utility.service';\nimport { IconType } from '../../models/index.model';\nimport { LoaderComponent } from '../loader/loader.component';\nimport { ModalHeaderComponent } from '../modal-header/modal-header.component';\nimport { NgClass, NgIf } from '@angular/common';\n\n@Component({\n    selector: 'modal-comp',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.scss'],\n    standalone: true,\n    imports: [LoaderComponent, ModalHeaderComponent,NgClass,NgIf],\n})\nexport class ModalComponent implements OnInit {\n  @ViewChild('temp') tempRef: TemplateRef<any>;\n  @ViewChild('loader') loaderRef: LoaderComponent;\n  @Input() showHeader: boolean = true;\n  @Input() header: string;\n  @Input() loading: boolean;\n  @Input() width: string = 'auto'; \n  @Input() height: string = 'auto';\n  @Input() data: { [x: string]: any } = {};\n  @Output() onClose = new EventEmitter();\n  public dialogRef: MatDialogRef<any>;\n  protected closedSub: Subscription;\n  // public dialogRef: MatDialogRef<typeof this.tempRef>;\n  // public dialogRef: MatDialogRef<ModalComponent>;\n  constructor(public uS: UtilityService) {}\n\n  ngOnInit(): void {}\n\n  modalConfigMap = (config: MatDialogConfig) => {\n    return config;\n  };\n\n  open(...args) {\n    const config: MatDialogConfig = {\n      width: this.uS.isMobile ? '100%' : this.width,\n      height: this.height,\n      autoFocus: false,\n      maxHeight: '90vh',\n      maxWidth: '90vw',\n      panelClass: 'full-modal',\n      disableClose: true,\n    };\n    // console.log(this.modalConfigMap(config));\n\n    this.dialogRef = this.uS.dialogOpenerRef(\n      this.tempRef,\n      this.modalConfigMap(config)\n    );\n    this.closedSub = this.dialogRef.afterClosed().subscribe((r) => {\n      this.onClose.emit(r);\n    });\n  }\n  close(data?) {\n    this.dialogRef?.close(data);\n  }\n  ngOnDestroy(): void {\n    this.closedSub?.unsubscribe();\n  }\n}\n","<ng-template #temp>\n  <loader [loading]=\"loading\" [height]=\"cont.offsetHeight\" #loader>\n    <div class=\"h-100\" #cont>\n      <modal-header [header]=\"header\" *ngIf=\"showHeader\" [dialogRef]=\"dialogRef\"></modal-header>\n      <div   class=\"bod  \" [ngClass]=\"{'p-24': showHeader}\" >\n        <ng-content select=\"[body]\"></ng-content>\n      </div> \n    </div>\n  </loader> \n</ng-template>\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { UtilityService } from '../../../services/utility.service';\nimport { Observable } from 'rxjs';\nimport { LoaderComponent } from '../loader/loader.component';\nimport { ModalComponent } from '../modal/modal.component';\nimport { IUploadResponse } from './import-items.model';\nimport { DragDropFileUploadDirective } from '../../directives/drag-drop-file-upload.directive';\nimport { BtnComponent } from '../btn/btn.component';\n\n@Component({\n    selector: 'import-items',\n    templateUrl: './import-items.component.html',\n    styleUrls: ['./import-items.component.scss'],\n    standalone: true,\n    imports: [\n        ModalComponent,\n        BtnComponent,\n        LoaderComponent,\n        DragDropFileUploadDirective,\n    ],\n})\nexport class ImportItemsComponent {\n  @ViewChild(ModalComponent) modal: ModalComponent;\n  @Input() header: string = 'Import Items';\n  @Input() templatePath: string;\n  @Input() label: string = 'CSV file';\n  @Input() uploadFunc: (file: File) => Observable<{\n    body?: { data: IUploadResponse };\n    progress?: number;\n    uploaded?: boolean;\n  }>;\n  loading: boolean;\n  constructor(public uS: UtilityService) {}\n  ngOnInit(): void {\n    if (!this.uploadFunc) throw 'An upload handler is required';\n  }\n\n  open() {\n    this.modal.open();\n  }\n\n  close() {\n    this.modal.close();\n  }\n\n  downloadTemplate() {\n    this.uS.downloadFromLink(\n      this.templatePath,\n      `${this.label} upload template.csv`\n    );\n  }\n  acceptedTypes = ['.csv', '.xlsx', '.xls'];\n  openFileDialog(loader: LoaderComponent) {\n    const el = document.createElement('input');\n    el.type = 'file';\n    el.accept = this.acceptedTypes.join(',');\n    el.click();\n    el.onchange = (e) => {\n      const file: File = e.target['files'][0];\n\n      this.uploadFile(file, loader);\n    };\n  }\n  async uploadFile(file: File, loader: LoaderComponent) {\n    try {\n      loader.loaders.resetLoaders();\n      const l1 = loader.loaders.addLoader(),\n        l2 = loader.loaders.addLoader();\n      l1.startPl();\n      loader.text = `<div class=\"text-primary\" >Uploading file to server</div>`;\n      if (!this.acceptedTypes.some((x) => file.name?.endsWith(x)))\n        throw `File type is not supported`;\n      this.uploadFunc(file).subscribe({\n        next: (sub) => {\n          if (sub.progress) sub.progress = Math.round(sub.progress);\n          console.log(sub);\n          // debugger;\n          if (l2.isLoading && sub.progress == 100) {\n            loader.stopLoader();\n            this.close();\n            this.uS.notify(`File has been uploaded.`);\n          }\n          if (l2.isLoading) {\n            loader.text = `<div class=\"text-primary\" >Processing data</div>`;\n            loader.progress = sub.progress;\n          }\n          if (sub.uploaded) {\n            l2.startPl();\n            l1.stopPl();\n          } else loader.progress = sub.progress;\n        },\n        error: (e) => {\n          this.uS.notify(e, 0);\n          loader.stopLoader();\n        },\n      });\n    } catch (error) {\n      this.uS.notify(error, 0);\n      loader.stopLoader();\n    }\n    // this.loading = false;\n  }\n}\n","<modal-comp width=\"50%\" [header]=\"header\">\n    <div class=\"\" body>\n        <div class=\"d-flex justify-content-center\">\n            <app-btn text=\"Download Template\" (mclick)=\"downloadTemplate()\" />\n        </div>\n        <div class=\"upload-case mt-24 p-40\" body>\n            <div class=\"text-center\">\n                <loader [loading]=\"loading\" [height]=\"cont.offsetHeight\" #uploadLoader>\n                    <div class=\"row justify-content-center\" libDragDropFileUpload\n                        (fileDropped)=\"uploadFile($event[0],uploadLoader)\" #cont>\n                        <div class=\"col-lg-7\">\n                            <div class=\"icon\">\n                                <app-btn text=\"Select Document\" type=\"clear\" (click)=\"openFileDialog(uploadLoader)\" customIcon=\"fa fa-upload\" />\n                            </div>\n                            <div class=\"main\">\n                                <span class=\"text-underline pointer\" (click)=\"openFileDialog(uploadLoader)\">Select a CSV\n                                    file</span> to\n                                upload or drag\n                                and drop file, max size 50mb\n                            </div>\n                            <div class=\"sub\">\n                                must be in .csv or .xls format\n                            </div>\n                        </div>\n                    </div>\n                </loader>\n            </div>\n        </div>\n    </div>\n</modal-comp>","import { Component, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { clone, cloneDeep } from 'lodash-es';\nimport { Subscription } from 'rxjs';\nimport { ModalComponent } from '../modal/modal.component';\nimport { hideMobileDirective } from '../../directives/responsiveness.directive';\nimport { BtnComponent } from '../btn/btn.component';\n\n@Component({\n    selector: 'lib-listing-filters',\n    templateUrl: './listing-filters.component.html',\n    styleUrls: ['./listing-filters.component.scss'],\n    standalone: true,\n    imports: [\n        BtnComponent,\n        hideMobileDirective,\n        ModalComponent,\n    ],\n})\nexport class ListingFiltersComponent {\n  form: FormGroup<any>;\n  @Input('form') set _form(v: FormGroup) {\n    this.form = v;\n    this.formClone = new FormGroup({});\n    for (const key in v.controls) {\n      if (Object.prototype.hasOwnProperty.call(v.controls, key)) {\n        const element = v.controls[key];\n        this.formClone.addControl(key, element);\n      }\n    }\n  }\n  formClone: FormGroup;\n  @ViewChild('modal') modalRef: ModalComponent;\n  constructor() {}\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n  }\n  ngOnDestroy(): void {}\n  close(noAction?: boolean) {\n    // debugger\n    if (noAction) return;\n    this.modalRef.close();\n    this.formClone?.reset(this.form?.value as any, { emitEvent: false });\n  }\n  clear() {\n    this.formClone?.reset();\n    this.form?.reset();\n    this.modalRef.close(true);\n  }\n  search() {\n    this.modalRef.close(true);\n    this.form?.patchValue(this.formClone?.value);\n  }\n  refresh() {\n    this.search();\n  }\n}\n","<div class=\"row row-cols-auto listing-filters-btn\">\n    <app-btn text=\"Filters\" icon=\"filter\" type=\"outline-nm\" (mclick)=\"modal.open()\" />\n    <app-btn hideMobile  icon=\"refresh\" type=\"outline\" (mclick)=\"refresh()\" />\n</div>\n<modal-comp width=\"80%\" header=\"Filters\" #modal (onClose)=\"close($event)\">\n    <div class=\"\" body>\n        <ng-content body></ng-content>\n        <div class=\"mt-16 row row-cols-lg-auto justify-content-between form-grid\">\n            <div class=\"col order-1 order-lg-0\">\n                <app-btn text=\"Clear\" type=\"outline-nm\" (mclick)=\"clear()\" />\n            </div>\n            <div class=\"col\">\n                <app-btn text=\"Search\" [form]=\"formClone\" (mclick)=\"search()\" />\n            </div>\n        </div>\n    </div>\n\n</modal-comp>","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { UtilityService } from '../../../../services/utility.service';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n    selector: 'mini-modal',\n    templateUrl: './mini-modal.component.html',\n    styleUrls: ['./mini-modal.component.scss'],\n    standalone: true,\n})\nexport class MiniModalComponent extends ModalComponent implements OnInit {\n  @Input() override height: string = 'calc(100vh - 64px)';\n  @Input() showFooter: boolean = true;\n  constructor(public override uS: UtilityService) {\n    super(uS);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  /**\n   *\n   * @param parent This is the element requesting for the modal to be opened. It will be used to determine the position of the modal\n   */\n  override open(parent: HTMLElement) {\n    console.log('parent', parent,parent.getBoundingClientRect());\n    const parentPost = parent.getBoundingClientRect(); \n    super.modalConfigMap = (config: MatDialogConfig) => { \n      config.position = {\n        top: parentPost.bottom + 'px',\n        left: `calc(${parentPost.left + 'px'} - 19vw)`,\n      };\n      config.maxHeight = '100vh';\n      config.height  = 'auto';\n      config.width = 'auto';\n      config.panelClass = 'mini-modal';\n      config.disableClose=false,\n      config.backdropClass='transparent'\n      return config;\n    };\n    super.open();\n  }\n}\n","<ng-template #temp>\n    <div class=\"mini-modal-content\">\n        <ng-content></ng-content>\n    </div>\n</ng-template>","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MiniModalComponent } from '../modal/mini-modal/mini-modal.component';\nimport { TableCol, TListFunction } from '../table-plain/table.model';\nimport { FilterArrayByStringPipe } from '../../pipes/utility.pipe';\nimport { NgFor } from '@angular/common';\nimport { FormControl, FormGroup, FormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { InputBasicComponent } from '../input/input.component';\nimport { BtnComponent } from '../btn/btn.component';\n\n@Component({\n  selector: 'mini-search-list',\n  templateUrl: './mini-search-list.component.html',\n  styleUrls: ['./mini-search-list.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [\n    BtnComponent,\n    InputBasicComponent,\n    MatRadioModule,\n    FormsModule,\n    NgFor,\n    FilterArrayByStringPipe,\n  ],\n})\nexport class MiniSearchListComponent<TList = { value: string; label: string }> {\n  @Input() list: TList[];\n  @Input() labelField: keyof TList = 'label' as any;\n  @Input() valueField: keyof TList = 'value' as any;\n  @Output('done') _done = new EventEmitter<any>();\n  @Input() header: string;\n  selected;\n\n  done() {\n    this._done.emit(this.selected);\n    this.mmCRef.close();\n  }\n  @ViewChild(MiniModalComponent) mmCRef: MiniModalComponent;\n  form = new FormGroup({\n    query: new FormControl<string>(null),\n  });\n\n  /**\n   *\n   * @param parent This is the element requesting for the modal to be opened. It will be used to determine the position of the modal\n   */\n  open(parent: HTMLElement) {\n    this.mmCRef.open(parent);\n  }\n}\n","<!-- <mini-modal> -->\n    <div class=\"py-16 px-24 mini-search-list\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n            <div class=\"\">\n                {{header}}\n            </div>\n            <div class=\"\">\n                <app-btn [mini]=\"true\" [disabled]=\"selected==undefined||selected==null\" mclass=\"text-primary\" text=\"Done\" type=\"clear\"\n                    (mclick)=\"done()\"></app-btn>\n            </div>\n        </div>\n        <hr>\n        <app-input [form]=\"form\" name=\"query\" placeholder=\"Search\" #searchTag />\n        <mat-radio-group [(ngModel)]=\"selected\">\n            <ng-container *ngFor=\"let item of  list|filterArrayByString:searchTag.value:[labelField] \">\n                <div class=\"my-8\">\n                    <mat-radio-button [value]=\"item[valueField]\">{{item[labelField]}}</mat-radio-button>\n                </div>\n            </ng-container>\n        </mat-radio-group>\n    </div>\n<!-- </mini-modal> -->","import { Component, Input, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { ModalComponent } from '../../modal/modal.component';\nimport { ModalFormComponent } from '../modal-form.component';\nimport { BtnComponent } from '../../btn/btn.component';\nimport { FormGeneratorComponent } from '../../form-generator/form-generator.component';\nimport { NgIf } from '@angular/common';\nimport { FeedbackCardComponent } from '../../feedback-card/feedback-card.component';\n\n@Component({\n    selector: 'modal-form-template',\n    templateUrl: './modal-form-template.component.html',\n    styleUrls: ['./modal-form-template.component.scss'],\n    standalone: true,\n    imports: [\n        ModalComponent,\n        FeedbackCardComponent,\n        NgIf,\n        FormGeneratorComponent,\n        BtnComponent,\n    ],\n})\nexport class ModalFormTemplateComponent<\n  TItem,\n  TForm extends { [K in keyof TForm]: AbstractControl<any, any> } = any\n> {\n  @Input() comp: ModalFormComponent<TItem, TForm>;\n  @ViewChild(ModalComponent) modal: ModalComponent;\n}\n","<modal-comp width=\"{{comp?.width}}\" header=\"{{comp?.isCreate?'New':comp?.isShow?'View':comp?.isEdit?'Edit':''}} {{comp?.header}}\" (onClose)=\"comp?.cancel()\" >\n    <div class=\"\" body>\n        <feedback-card #fc/>\n        <ng-container *ngIf=\"comp?.formFields?.length; else elseNoformSchemaTemplate\">\n            <form-generator [showSeparateLabels]=\"true\" [form]=\"comp?.form\"  [formSchema]=\"comp?.formFields\" [showSubmitBtn]=\"false\" />\n            <div class=\"\">\n                <ng-content select=\"[afterForm]\"></ng-content>\n            </div>\n        </ng-container>\n        <ng-template #elseNoformSchemaTemplate>\n            <ng-content></ng-content>\n        </ng-template>\n        <div class=\"w-100 mt-16\">\n            <div class=\"row row-cols-lg-auto justify-content-end\">\n                <div class=\"\">\n                    <app-btn text=\"Cancel\" type=\"outline-nm\" (mclick)=\"comp?.close()\" />\n                </div>\n                <div class=\"\">\n                    <app-btn text=\"Submit\" type=\"primary\" [form]=\"comp?.form\" (mclick)=\"comp?.submit(fc,subBtn)\" #subBtn />\n                </div>\n            </div>\n        </div>\n    </div>\n</modal-comp>","import {\n  Component,\n  EventEmitter, Output,\n  ViewChild\n} from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms'; \nimport { BtnComponent } from '../btn/btn.component';\nimport { FeedbackCardComponent } from '../feedback-card/feedback-card.component';\nimport { ModalFormTemplateComponent } from './modal-form-template/modal-form-template.component';\nimport { IFormSchema } from '../../models/form-schema.model';\nimport { EPageType } from '../../models/index.model';\n\n@Component({\n    selector: 'modal-form',\n    templateUrl: './modal-form.component.html',\n    styleUrls: ['./modal-form.component.scss'],\n    standalone: true,\n})\nexport class ModalFormComponent<\n  TItem,\n  TForm extends { [K in keyof TForm]: AbstractControl<any, any> } = any\n> {\n  pageType: EPageType;\n  form: FormGroup<TForm>;\n  loading: boolean;\n  header: string;\n  width: string = '50%';\n  formFields: IFormSchema[];\n\n  @Output() onSaved = new EventEmitter<TItem>();\n\n  @ViewChild(ModalFormTemplateComponent) modal: ModalFormTemplateComponent<\n    TItem,\n    TForm\n  >;\n\n  protected open: (item?: TItem) => Promise<any>;\n  protected submitFunction: () => Promise<any>;\n\n  ngAfterViewInit(): void {\n    // if (this.modal) Object.assign(this.modal, this);\n  }\n\n  async openAsEdit(item: TItem) {\n    this.prepareOpen(EPageType.editPage);\n    await this.open(item);\n    this.loading = false;\n  }\n\n  async openAsCreate(defaultData?) {\n    // debugger;\n    this.prepareOpen(EPageType.createPage);\n    await this.open(defaultData);\n    this.loading = false;\n  }\n\n  async openAsView(item: TItem) {\n    this.prepareOpen(EPageType.viewPage);\n    await this.open(item);\n    this.form.disable();\n    this.loading = false;\n  }\n\n  private prepareOpen(pageType: EPageType) {\n    this.loading = true;\n    this.pageType = pageType;\n    this._openForm();\n  }\n\n  private _openForm() {\n    this.modal.modal.open();\n  }\n  cancel() {\n    this.form?.reset();\n  }\n  close() {\n    this.modal.modal?.close();\n    this.cancel();\n  }\n\n  async submit(fc: FeedbackCardComponent, btn?: BtnComponent) {\n    (btn ? btn : this).loading = true;\n    try {\n      fc?.reset();\n      await this.submitFunction();\n      this.onSaved.emit()\n      this.close();\n    } catch (error) {\n      fc?.setErrorMessage(error);\n    }\n    (btn ? btn : this).loading = false;\n  }\n  get isCreate() {\n    return this.pageType == EPageType.createPage;\n  }\n  get isEdit() {\n    return this.pageType == EPageType.editPage;\n  }\n  get isShow() {\n    return this.pageType == EPageType.viewPage;\n  }\n}\n","","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { NgIf } from '@angular/common';\nimport { BtnComponent } from '../btn/btn.component';\n\n@Component({\n    selector: 'number-items-selected',\n    templateUrl: './number-items-selected.component.html',\n    styleUrls: ['./number-items-selected.component.scss'],\n    standalone: true,\n    imports: [BtnComponent, NgIf],\n})\nexport class NumberItemsSelectedComponent {\n  @Input() count: number;\n  @Input() useEdit=false;\n  @Output('onDelete') _onDelete = new EventEmitter<boolean>(); \n  @Output('onEdit') _onEdit = new EventEmitter<boolean>(); \n  constructor() {}\n  onDelete() {\n    this._onDelete.emit(true);\n  } \n  onEdit() {\n    this._onEdit.emit(true);\n  } \n}\n","<div class=\"case d-flex justify-content-between\">\n    <div class=\"count\">\n        {{count}} Selected\n    </div>\n    <div class=\"delete-btn\">\n        <app-btn icon=\"delete\" type=\"clear\" (mclick)=\"onDelete()\"></app-btn>\n    </div> \n    <div class=\"delete-btn\" *ngIf=\"useEdit&&count==1\">\n        <app-btn icon=\"edit\" type=\"clear\" (mclick)=\"onEdit()\"></app-btn>\n    </div> \n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UtilityService } from '../../../services/utility.service';\nimport { EPageType } from '../../models/index.model';\n\n@Component({\n    template: ``,\n    standalone: true,\n})\nexport class PageTemplateComponent<ModelData = any> {\n  pageType: EPageType;\n\n  constructor(public route: ActivatedRoute) {\n    this.pageType = this.route?.snapshot?.data['type'];\n  }\n\n  setAsIndex() {\n    this.pageType = EPageType.indexPage;\n  }\n  setAsClone() {\n    this.pageType = EPageType.clonePage;\n  }\n  setAsCreate() {\n    this.pageType = EPageType.createPage;\n  }\n  setAsEdit() {\n    this.pageType = EPageType.editPage;\n  }\n  setAsShow() {\n    this.pageType = EPageType.viewPage;\n  }\n  get isClone() {\n    return (\n      this.route?.snapshot?.data['type'] === EPageType.clonePage ||\n      this.pageType === EPageType.clonePage\n    );\n  }\n  get isCreate() {\n    return (\n      this.route?.snapshot?.data['type'] === EPageType.createPage ||\n      this.pageType === EPageType.createPage\n    );\n  }\n  get isEdit() {\n    return (\n      this.route?.snapshot?.data['type'] === EPageType.editPage ||\n      this.pageType === EPageType.editPage\n    );\n  }\n  get isIndex() {\n    return (\n      this.route?.snapshot?.data['type'] === EPageType.indexPage ||\n      this.pageType === EPageType.indexPage\n    );\n  }\n  get isShow() {\n    return (\n      this.route?.snapshot?.data['type'] === EPageType.viewPage ||\n      this.pageType === EPageType.viewPage\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@Component({\n  selector: 'progress-bar-large',\n  templateUrl: './progress-bar-large.component.html',\n  styleUrls: ['./progress-bar-large.component.scss'],\n  standalone: true,\n  imports: [CommonModule,MatProgressBarModule],\n})\nexport class ProgressBarLargeComponent {\n  /**\n   * In percentage\n   * @example .5 should be 50\n   */\n  @Input() value: number;\n  @Input() startLabel: string;\n  @Input() endLabel: string;\n  @Input() borderClass: string;\n}\n","<div class=\"position-relative overflow-hidden {{borderClass}}\">\n    <div class=\"row row-cols-auto justify-content-between\">\n        <div>\n            <div class=\"startLabel\">\n                {{startLabel}}\n            </div>\n        </div>\n        <div>\n            <div class=\"endLabel\">\n                {{endLabel}}\n            </div>\n        </div>\n    </div>\n    <mat-progress-bar mode=\"determinate\" class=\"_prog\" [value]=\"value\">\n    </mat-progress-bar>\n</div>","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { ActivatedRoute } from '@angular/router';\nimport { UtilityService } from '../../../services/utility.service';\nimport { cloneDeep } from 'lodash-es';\nimport {\n  BehaviorSubject,\n  merge,\n  Observable,\n  of as observableOf,\n  of,\n  ReplaySubject,\n} from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  startWith,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { IBtn } from '../../models/index.model';\nimport { TablePlainComponent } from '../table-plain/table-plain.component';\nimport { FunctionCaller1, FunctionCaller2, ToAnyPipe, ValueOrXPipe } from '../../pipes/utility.pipe';\nimport { GetColFormattedPipe, GetRawFieldsPipe, TableToStringPipe } from '../table-plain/table.pipe';\nimport { ResponsivenessDirective, hideMobileDirective, hideDesktopDirective } from '../../directives/responsiveness.directive';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MiniSearchListComponent } from '../mini-search-list/mini-search-list.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BtnComponent } from '../btn/btn.component';\nimport { ImageLoaderDirective } from '../../directives/image-loader.directive';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { LoaderComponent } from '../loader/loader.component';\nimport { NgIf, NgClass, NgFor, NgSwitch, NgSwitchCase, NgSwitchDefault, AsyncPipe, TitleCasePipe } from '@angular/common';\n\n@Component({\n    selector: 'table-https',\n    templateUrl: './table-https.component.html',\n    styleUrls: ['../table-plain/table-plain.component.scss'],\n    standalone: true,\n    imports: [\n        NgIf,\n        LoaderComponent,\n        MatTableModule,\n        NgClass,\n        MatCheckboxModule,\n        NgFor,\n        NgSwitch,\n        NgSwitchCase,\n        ImageLoaderDirective,\n        BtnComponent,\n        MatTooltipModule,\n        MatMenuModule,\n        MiniSearchListComponent,\n        NgSwitchDefault,\n        MatIconModule,\n        MatPaginatorModule,\n        ResponsivenessDirective,\n        hideMobileDirective,\n        hideDesktopDirective,\n        AsyncPipe,\n        TitleCasePipe,\n        GetColFormattedPipe,\n        GetRawFieldsPipe,\n        TableToStringPipe,\n        FunctionCaller1,\n        FunctionCaller2,\n        ToAnyPipe,\n        ValueOrXPipe,\n    ],\n})\nexport class TableHttpsComponent<TItem = any>\n  extends TablePlainComponent<TItem>\n  implements OnInit\n{\n  @Input() header: string;\n  @Input() noDataSubTitle: string;\n  @Input() headerBtns: IBtn[];\n  queryData;\n  @Input('queryData') set _queryData(v: any) {\n    this.queryData = v;\n  }\n  @Input() observableFunc: (data: any) => Observable<ITableSearchFunc<any>>;\n  @Input() pageNumber = 0;\n  filteredAndPagedResults: Observable<any[]>;\n\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  fetchedData = new BehaviorSubject<TItem[]>(null);\n  /**\n   * Contains all the search query sent last\n   */\n  allQuery: any;\n\n  @ViewChild('table') table: MatTable<TItem>;\n  data: TItem[];\n  form2 = new FormGroup({\n    page: new FormControl(1),\n    sortByField: new FormControl(),\n    sortByDirection: new FormControl(\n      this.orderDirection == 'asc'\n        ? 'ASC'\n        : this.orderDirection == 'desc'\n        ? 'DESC'\n        : ''\n    ),\n    limit: new FormControl(),\n  });\n  searchTrigger = new ReplaySubject();\n\n  constructor(\n    public route: ActivatedRoute,\n    public override uS: UtilityService\n  ) {\n    super(uS);\n  }\n  override ngOnInit() {\n    super.ngOnInit();\n  }\n  override ngAfterViewInit() {\n    this.queryData = this.queryData || {};\n    // this.queryData = this.queryData || this.route.snapshot.queryParams;\n    // debugger;\n    this.paginator.page.subscribe((r) => {\n      this.form2.patchValue({\n        page: r.pageIndex + 1,\n        limit: r.pageSize,\n      });\n    });\n    this.sort?.sortChange.subscribe((r) => {\n      this.form2.patchValue({\n        sortByDirection: r.direction,\n        sortByField: r.active,\n      });\n    });\n    // this.searchTrigger.subscribe(r=>{\n    //   console.log(r)\n    // })\n    this.filteredAndPagedResults = merge(\n      this.form2.valueChanges,\n      this.searchTrigger\n    ).pipe(\n      startWith({}),\n      filter(() => !!this.observableFunc),\n      switchMap(() => {\n        this.isLoadingResults = true;\n        const queryData = this.queryData;\n        const pageValues = this.form2.value;\n        if (!pageValues.limit)\n          pageValues.limit = this.paginator?.pageSize || this.pageSize;\n        this.allQuery = {\n          ...queryData,\n          ...pageValues,\n        };\n        // debugger;\n        return this.observableFunc(this.allQuery);\n      }),\n      catchError((e) => of(null)),\n      tap((r) => this.selection.clear()),\n      map((data) => {\n        // Flip flag to show that loading has finished.\n        // debugger;\n        // debugger;\n        console.log(data);\n        this.isLoadingResults = false;\n        this.isRateLimitReached = false;\n        this.resultsLength = data?.total;\n        this.data = data?.data || [];\n        this.fetchedData.next(this.data);\n        // debugger\n        return data?.data;\n      }),\n      catchError((e) => {\n        console.error(e);\n        this.isLoadingResults = false;\n\n        this.isRateLimitReached = true;\n        return observableOf([]);\n      })\n    );\n    this.filteredAndPagedResults.subscribe();\n  }\n  search(query?: any) {\n    this.queryData = query || this.queryData;\n    // this.form.controls.pageNumber.patchValue(0);\n    this.resetPaging();\n    this.searchTrigger.next(true);\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  override isAllSelected() {\n    const numSelected = this.selection?.selected?.length;\n    const numRows = this.data?.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  override masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.data);\n  }\n\n  resetPaging(): void {\n    this.paginator.pageIndex = 0;\n    this.form2.patchValue({ page: 1 }, { emitEvent: false });\n  }\n  reset() {}\n  refresh() {\n   this.search(  )\n  }\n  setData(d) {\n    this.data = cloneDeep(d);\n    // this.table.renderRows();\n  }\n\n\n  override increasePageSize() {\n    // debugger\n    if (this.resultsLength <= this.paginator.pageSize) return;\n    this.paginator._changePageSize(\n      this.paginator.pageSize + this.pageSizeIncrementor\n    );\n  }\n  override resetPageSize() {\n    this.paginator._changePageSize(this.pageSize);\n  }\n}\n\nexport interface ITableSearchFunc<T = any> {\n  data: T[];\n  total: number;\n}\n","<div class=\"h-100 \">\n  <div class=\"d-flex align-items-center justify-content-between mb-3\" *ngIf=\"header||headerBtns\">\n    <div class=\"title\">\n      {{header}}\n    </div>\n  </div>\n  <loader class=\"h-100\" [loading]=\"isLoadingResults\" [height]=\"container?.offsetHeight+100\"\n    [hasContent]=\"!!data?.length\">\n    <div class=\"table-container\" content #container>\n      <div class=\"overflow-auto \">\n        <table mat-table [dataSource]=\"data\" class=\"w-100 d-table\" [ngClass]=\"{smallerFonts,nowrap,centerCells,curvy}\"\n          #table>\n          <!-- Checkbox Column -->\n          <ng-container matColumnDef=\"mselect\" sticky>\n            <th mat-header-cell *matHeaderCellDef>\n              <mat-checkbox class=\"circle-checkbox\" (change)=\"$event ? masterToggle() : null\"\n                [checked]=\"selection.hasValue() && isAllSelected()\"\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n              </mat-checkbox>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n              <mat-checkbox class=\"circle-checkbox\" (click)=\"$event.stopPropagation()\"\n                (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                [aria-label]=\"checkboxLabel(row)\">\n              </mat-checkbox>\n            </td>\n          </ng-container>\n\n          <!-- COLUMNS -->\n          <ng-container *ngFor=\"let col of displayedColumns; let i = index\">\n            <ng-container [ngSwitch]=\"col.type\">\n              <!-- IMAGE -->\n              <ng-container *ngSwitchCase=\"'image'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t|titlecase}}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <img [imageLoader]=\"row[col.f]\" alt=\"{{col.f}} image\" class=\"{{col.itemClass}}\">\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- Button -->\n              <ng-container *ngSwitchCase=\"'button'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t|titlecase}}\n                </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"btn-cell\">\n                  <app-btn [icon]=\"col.btn?.icon\" [type]=\"col.btn?.type\" (mclick)=\"clickBtn(col,row)\"\n                    [help]=\"col.btn?.help\" [text]=\"col.btn?.label\" [loading]=\"col.btn?.loading\"\n                    [iconBtn]=\"col.btn?.iconBtn\" mclass=\"w-auto\" [disabled]=\"col.btn?.disabled || col.btn?.loading\">\n                  </app-btn>\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- ACTION COLUMNS -->\n              <ng-container [sticky]=\"col.isSticky\" [stickyEnd]=\"col.isStickyEnd\" matColumnDef=\"{{ col.f|toAny }}\"\n                *ngSwitchCase=\"'btns'\">\n                <th mat-header-cell *matHeaderCellDef class=\"btn-cell\">\n                  {{ col.t | titlecase }}\n                </th>\n                <td mat-cell *matCellDef=\"let row;let i=index\" class=\"btn-cell\">\n                  <div class=\"d-flex col-md-auto col-sm-auto \">\n\n                    <div class=\"mx-2\" *ngFor=\"let button of col.buttons\">\n                      <app-btn [icon]=\"button.icon\" [help]=\"button.help\" [showHelpIcon]=\"button.showHelpIcon\"\n                        [type]=\"button.type\" [group]=\"button.group\" [iconBtn]=\"true\" mclass=\"w-auto\"\n                        (mclick)=\"button.action(row,i)\"></app-btn>\n                    </div>\n\n\n\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Sub Table -->\n              <ng-container [sticky]=\"col.isSticky\" *ngSwitchCase=\"'table'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t|titlecase}}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <app-btn [icon]=\"col.btn?.icon\" type=\"dark\" (mclick)=\"col.action ? col.action(row, col.f) : null\"\n                    [help]=\"col.subTable|tableToString:row| async\" [showHelpIcon]=\"false\" [iconBtn]=\"true\"\n                    mclass=\"w-auto\">\n                  </app-btn>\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- ASSIGN FROM LIST -->\n              <ng-container [sticky]=\"col.isSticky\" matColumnDef=\"{{ col.f|toAny }}\" *ngSwitchCase=\"'assign-from-list'\">\n                <th mat-header-cell *matHeaderCellDef disableClear>\n                  {{formatColumnHeaders?(col.t|titlecase):col.t }}</th>\n                <td mat-cell *matCellDef=\"let row;let rowIndex = index\">\n                  <ng-container *ngIf=\"(row|getColFormatted:col)|async as val; else elseTemplate\">\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"val\" #ele [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"val|valueOrX\">\n                    </div>\n                  </ng-container>\n                  <ng-template #elseTemplate>\n                    <div [matMenuTriggerFor]=\"assignList\" class=\"text-primary pointer\" \n                      #assignTag>\n                      Assign\n                    </div>\n                    <mat-menu #assignList=\"matMenu\" class=\"\">\n                      <mini-search-list (click)=\"$event.stopPropagation()\" #mslTag (done)=\"col.onSelected($event,row,rowIndex)\"\n                        [list]=\"(col.listingFunction|functionCaller1:row)|async\"\n                        [header]=\"formatColumnHeaders?(col.t|titlecase):col.t\" />\n                    </mat-menu>\n                  </ng-template>\n\n\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- DEFAULT -->\n              <ng-container [sticky]=\"col.isSticky\" matColumnDef=\"{{ col.f|toAny }}\" *ngSwitchDefault>\n                <th mat-header-cell *matHeaderCellDef disableClear>\n                  {{formatColumnHeaders?(col.t|titlecase):col.t }}</th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <ng-container *ngIf=\"col.routeFormatter; else elseNoRouteTemplate\">\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </div>\n                  </ng-container>\n                  <ng-template #elseNoRouteTemplate>\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </div>\n                  </ng-template>\n\n\n                </td>\n              </ng-container>\n              <!--// -->\n            </ng-container>\n          </ng-container>\n          <!--// -->\n          <!-- OPTIONS COLUMN -->\n          <ng-container matColumnDef=\"option\" *ngIf=\"options?.length>0||optionsMap\" stickyEnd>\n            <th mat-header-cell class=\"lastStickyItem w-auto\" *matHeaderCellDef disableClear></th>\n            <td mat-cell class=\"lastStickyItem w-auto\" *matCellDef=\"let row\">\n              <ng-container *ngIf=\"optionsMap; else elseOptionsTemplate\">\n                <ng-container *ngIf=\"(optionsMap|functionCaller1:row) as _rowoptions\">\n                  <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                    <mat-icon>more_vert</mat-icon>\n                  </app-btn>\n                  <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item *ngFor=\"let option of _rowoptions\" (click)=\"option.action(row)\">\n                      {{optionLabeller|functionCaller2:option:row}}\n                    </button>\n                  </mat-menu>\n                </ng-container>\n              </ng-container>\n              <ng-template #elseOptionsTemplate>\n                <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                  <mat-icon>more_vert</mat-icon>\n                </app-btn>\n                <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item *ngFor=\"let option of options\" (click)=\"option.action(row)\">\n                    {{optionLabeller|functionCaller2:option:row}}\n                  </button>\n                </mat-menu>\n              </ng-template>\n            </td>\n          </ng-container>\n          <!--// -->\n\n\n\n          <ng-container *ngIf=\"displayedColumns|getRawFields:(!!options?.length||!!optionsMap):useSelection as dcols\">\n            <tr mat-header-row *matHeaderRowDef=\"dcols\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: dcols\"\n              [ngClass]=\"{pointer:showRowPointer,selected:selection.isSelected(row),disabled:isDisabledFunc?isDisabledFunc(row):false}\"\n              [matTooltip]=\"isDisabledFunc&&isDisabledFunc(row)?'Disabled':null\" (click)=\"rowClick(row)\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\" [attr.colspan]=\"dcols?.length||1\">{{noItemTxt}}</td>\n            </tr>\n          </ng-container>\n        </table>\n      </div>\n\n\n      <mat-paginator mresponsiveness [hideMobile]=\"true\" [length]=\"resultsLength\" [pageSizeOptions]=\"pageSizeOptions\"\n        [pageSize]=\"pageSize\" showFirstLastButtons />\n\n      <div class=\"  \" mresponsiveness [hideDesktop]=\"true\">\n        <div class=\" d-flex justify-content-center\">\n          <app-btn text=\"See more\" type=\"clear-pm\" (mclick)=\"increasePageSize()\"\n            *ngIf=\"resultsLength>paginator?.pageSize;else showLess\" />\n          <ng-template #showLess>\n            <app-btn text=\"See less\" type=\"clear-pm\" (mclick)=\"resetPageSize()\" />\n          </ng-template>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"h-100 center text-center noContent\" noContent>\n      <div class=\"\">\n        <div class=\"title\"> No data\n        </div>\n        <div class=\"sub-title\">\n          {{noDataSubTitle}}\n        </div>\n      </div>\n    </div>\n  </loader>\n</div>","import { AutocompleteComponent } from './components/autocomplete/autocomplete.component';\nimport { BtnComponent } from './components/btn/btn.component';\nimport { FeedbackCardComponent } from './components/feedback-card/feedback-card.component';\nimport { FormGeneratorComponent } from './components/form-generator/form-generator.component';\nimport { InputModule } from './components/input/input.module';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { ResponseCardComponent } from './components/response-card/response-card.component';\nimport { SvgIconComponent } from './components/svg-icon/svg-icon.component';\nimport { CountComponent } from './components/count/count.component';\nimport { SearchBoxComponent } from './components/search-box/search-box.component';\nimport { NumberItemsSelectedComponent } from './components/number-items-selected/number-items-selected.component';\nimport { TablePlainComponent } from './components/table-plain/table-plain.component';\nimport { ModalHeaderComponent } from './components/modal-header/modal-header.component';\nimport { ModalComponent } from './components/modal/modal.component';\nimport { UtilityPipesModule } from './pipes/utility.pipe';\nimport { DirectivesModule } from './directives/directives.module';\nimport { TableHttpsComponent } from './components/table-https/table-https.component';\nimport { InfoIconComponent } from './components/info-icon/info-icon.component';\nimport { FileUploadComponent } from './components/file-upload/file-upload.component';\nimport { TextComponent } from './components/text/text.component';\nimport { NoListComponent } from './components/no-list/no-list.component';\nimport { MiniSearchListComponent } from './components/mini-search-list/mini-search-list.component';\nimport { ImportItemsComponent } from './components/import-items/import-items.component';\nimport { PageTemplateComponent } from './components/page-template/page-template.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { ChipListAutocompleteComponent } from './components/chip-list-autocomplete/chip-list-autocomplete.component';\nimport { ListingFiltersComponent } from './components/listing-filters/listing-filters.component';\nimport { GridOrListComponent } from './components/grid-or-list/grid-or-list.component';\nimport { ModalFormComponent } from './components/modal-form/modal-form.component';\n\nimport { ProgressBarLargeComponent } from './components/progress-bar-large/progress-bar-large.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    AutocompleteComponent,\n    BtnComponent,\n    ChipListAutocompleteComponent,\n    CommonModule,\n    ConfirmDialogComponent,\n    CountComponent,\n    FeedbackCardComponent,\n    FileUploadComponent,\n    FormGeneratorComponent,\n    GridOrListComponent,\n    ImportItemsComponent,\n    InfoIconComponent,\n    ListingFiltersComponent,\n    LoaderComponent,\n    MiniSearchListComponent,\n    ModalComponent,\n    ModalFormComponent,\n    ModalHeaderComponent,\n    NoListComponent,\n    NumberItemsSelectedComponent,\n    PageTemplateComponent,\n    ProgressBarLargeComponent,\n    ResponseCardComponent,\n    SearchBoxComponent,\n    SvgIconComponent,\n    TableHttpsComponent,\n    TablePlainComponent,\n    TextComponent,\n  ],\n  exports: [\n    AutocompleteComponent,\n    BtnComponent,\n    ChipListAutocompleteComponent,\n    ConfirmDialogComponent,\n    CountComponent,\n    DirectivesModule,\n    FeedbackCardComponent,\n    FileUploadComponent,\n    FormGeneratorComponent,\n    GridOrListComponent,\n    ImportItemsComponent,\n    InfoIconComponent,\n    InputModule,\n    ListingFiltersComponent,\n    LoaderComponent,\n    MiniSearchListComponent,\n    ModalHeaderComponent,\n    ModalComponent,\n    NoListComponent,\n    NumberItemsSelectedComponent,\n    PageTemplateComponent,\n    ResponseCardComponent,\n    SearchBoxComponent,\n    SvgIconComponent,\n    TableHttpsComponent,\n    TablePlainComponent,\n    TextComponent,\n    UtilityPipesModule,\n    ModalFormComponent,\n    ProgressBarLargeComponent,\n  ],\n})\nexport class SharedModule {}\n","import { KeyValue } from '@angular/common';\nimport { MenuPositionX } from '@angular/material/menu';\nimport { QueryParamsHandling } from '@angular/router'; \nimport { SVGIconType } from '../components/svg-icon/svg-icon.model';\nimport { EMenuLocation } from './index.model';\n\nexport interface IMenuItemBase {\n  breadcrumbs?: KeyValue<string, string>[];\n  breadcrumbsStr?: string;\n  hasSub?: boolean;\n  icon?: SVGIconType;\n  id?: string;\n  index?: number;\n  isDivider?: boolean;\n  isP?: boolean;\n  label?: string;\n  labelLowerCase?: string;\n  link?: string;\n  action?: () => any;\n  queryParams?: { [x: string]: string | number | boolean };\n  locations?: Map<EMenuLocation, boolean>;\n  parentID?: string;\n  submenuPosition?: MenuPositionX;\n  systemIcon?: string;\n  systemLink?: string;\n  isReady?: boolean;\n}\nexport interface IMenuItemRawBase {\n  [x: string]: IMenuItemRaw;\n}\nexport interface IMenuItemRaw extends IMenuItemBase {\n  subs?: { [x: string]: IMenuItemRaw }; \n}\nexport interface IMenuItem extends IMenuItemBase {\n  canAccess?: boolean;\n  expanded?: boolean;\n  queryParamsHandling?: QueryParamsHandling; \n  subs?: IMenuItem[]; \n}\nexport class MenuItem implements IMenuItem {\n  breadcrumbs?: KeyValue<string, string>[];\n  breadcrumbsStr?: string; \n  canAccess?: boolean; \n  dbID: number;\n  disabled: boolean;\n  hasButtons: boolean;\n  hasSub?: boolean;\n  icon: SVGIconType;\n  id: string;\n  index?: number;\n  isDivider?: boolean;\n  isP?: boolean;\n  label: string;\n  labelLowerCase?: string;\n  level?: number;\n  link: string;\n  locations?: Map<EMenuLocation, boolean>;\n  parentID: string;\n  submenuPosition?: MenuPositionX;\n  subs: MenuItem[];\n  systemIcon?: string;\n  systemLink?: string;\n  viewAccess: boolean;\n  editAccess: boolean;\n  public get _editAccess(): boolean {\n    console.log(this.editAccess);\n    return this.editAccess;\n  }\n  public set _editAccess(value: boolean) {\n    this.editAccess = value;\n    this.toggleEditAllSubMenus();\n  }\n  public get _viewAccess(): boolean {\n    return this.viewAccess;\n  }\n  public set _viewAccess(value: boolean) {\n    this.viewAccess = value;\n    this.toggleViewAllSubMenus();\n  }\n  constructor(menuItem: IMenuItem, parent?: IMenuItem) {\n    Object.assign(this, menuItem);\n    this.labelLowerCase = menuItem?.label?.toLowerCase();\n    this.hasSub = !!menuItem?.subs?.length; \n    this.isP = true;\n    this.parentID = parent?.id;\n    // debugger\n    this.subs = menuItem?.subs?.map((m) => new MenuItem(m, this));\n  }\n  toggle() {\n    this.disabled = !this.disabled;\n  }\n  toggleView() {\n    this.viewAccess = !this.viewAccess;\n    if (this.editAccess) this.viewAccess = true;\n  }\n  toggleCreate() {\n    this.editAccess = !this.editAccess;\n    if (this.editAccess) this.viewAccess = true;\n  }\n  allowEditAllSubMenus() {\n    this.subs?.forEach((x) => x?.allowEditAllSubMenus()); \n    //debugger;\n    this.viewAccess = true;\n    this.editAccess = true;\n  }\n  disableEditAllSubMenus() {\n    this.subs?.forEach((x) => x?.disableEditAllSubMenus()); \n    this.editAccess = false;\n  }\n  allowViewAllSubMenus() {\n    this.subs?.forEach((x) => x?.allowViewAllSubMenus()); \n    //debugger;\n    this.viewAccess = true;\n    this.editAccess = false;\n  }\n  disableViewAllSubMenus() {\n    this.subs?.forEach((x) => x?.disableViewAllSubMenus()); \n    this.viewAccess = false;\n    this.editAccess = false;\n  }\n  toggleEditAllSubMenus() {\n    // if (this.editAccess == undefined) return;\n    !this.editAccess\n      ? this.allowEditAllSubMenus()\n      : this.disableEditAllSubMenus();\n    console.log(this.subs);\n  }\n  toggleViewAllSubMenus() {\n    // if (this.viewAccess == undefined) return;\n    // debugger\n    !this.viewAccess\n      ? this.allowViewAllSubMenus()\n      : this.disableViewAllSubMenus();\n    console.log(this.subs);\n  }\n  allowAuthorization() {\n    this.viewAccess = true;\n    this.editAccess = true;\n  }\n  disableAuthorization() {\n    this.viewAccess = false;\n    this.viewAccess = false;\n  }\n  toggleAuthorization() {\n    this.viewAccess = !this.viewAccess;\n    this.editAccess = !this.editAccess;\n  }\n}\n\nexport class MenuItemDivider extends MenuItem {\n  constructor() {\n    super(null);\n    this.isDivider = true;\n  }\n}\n\nexport enum EPageBtnID {\n  agentCommissions = 'PAC8',\n  agentCreditNotes = 'PACN10',\n  agentDocuments = 'PAD2',\n  agentEndorsements = 'PAE3',\n  agentLoan = 'PAL1',\n  agentNotes = 'PAN6',\n  agentPendingQuotes = 'PAPQ11',\n  agentPolicies = 'PAP7',\n  agentProduction = 'PAP9',\n  agentWebLogIn = 'PAWL4',\n  agentWorkflows = 'PAW5',\n  agentCalendar = 'PAC6',\n\n  clientCalendar = 'PCC11',\n  clientDocuments = 'PCD12',\n  clientEndorsements = 'PCE13',\n  clientNotes = 'PCN14',\n  clientOtherBusiness = 'PCOB15',\n  clientPendingPayments = 'PCPP16',\n  clientPendingQuotes = 'PCPQ17',\n  clientPolicies = 'PCP18',\n  clientRelationships = 'PCR19',\n  clientUnderwritingEvents = 'PCUE20',\n  clientWebLogIn = 'PCWL21',\n  clientWorkflows = 'PCW22',\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'no-access',\n    loadChildren: () =>\n      import('./page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule\n      ),\n    data: { \n      config: {\n        status: '401',\n        message: 'You do not have access to this page.',\n      },\n    },\n  },\n  {\n    path: 'reset',\n    data: { title: 'Reset' },\n    loadChildren: () =>\n      import('./reset/reset.module').then((m) => m.ResetModule),\n  }, \n  {\n    path: '**',\n    loadChildren: () =>\n      import('./page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExtraPagesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExtraPagesRoutingModule } from './extra-pages-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ExtraPagesRoutingModule,\n  ],\n})\nexport class ExtraPagesModule { }\n","import { Component, OnInit } from '@angular/core'; \nimport { BtnComponent } from '../../shared/components/btn/btn.component';\nimport { LoaderComponent } from '../../shared/components/loader/loader.component';\nimport { ServiceWorkerService } from '../../services/service-worker/service-worker.service';\n\n@Component({\n    selector: 'app-reset',\n    templateUrl: './reset.component.html',\n    styleUrls: ['./reset.component.scss'],\n    standalone: true,\n    imports: [LoaderComponent, BtnComponent],\n})\nexport class ResetComponent implements OnInit {\n  loading: boolean;\n  constructor(private swService: ServiceWorkerService) {}\n\n  ngOnInit(): void {\n    // if(this.swService.puS.)\n    this.getUpdates()\n  }\n  clearCache() {\n    this.loading = true;\n    if ('caches' in window) {\n      caches.keys().then((names) => {\n        names.forEach(async (name) => {\n          await caches.delete(name);\n        });\n      });\n    }\n    location.href = '/';\n  }\n  getUpdates() {\n    this.loading = true;\n    this.swService.getUpdates(() => {\n      this.loading = false;\n    });\n  }\n}\n","<loader [loading]=\"loading\" text=\"Resetting\">\n\n  <div class=\"center vh-100\">\n      <div class=\"gy-2 justify-content-center row row-cols-md-6 w-100\">\n        <app-btn text=\"Get Updates\" customIcon=\"fas fa-download\" (mclick)=\"getUpdates()\"></app-btn>\n        <!-- <app-btn text=\"Clear Cache\" customIcon=\"fas fa-refresh\" (mclick)=\"clearCache()\"></app-btn> -->\n      </div>\n  </div>\n</loader>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, RouterLink } from '@angular/router'; \nimport { BtnComponent } from '../../shared/components/btn/btn.component';\nimport { NgIf } from '@angular/common';\nimport { UtilityService } from '../../services/utility.service';\n\n\n@Component({\n    selector: 'app-page-not-found',\n    templateUrl: './page-not-found.component.html',\n    styleUrls: ['./page-not-found.component.scss'],\n    standalone: true,\n    imports: [\n        NgIf,\n        BtnComponent,\n        RouterLink,\n    ],\n})\nexport class PageNotFoundComponent implements OnInit {\n  config: { status: string; message: string };\n\n  constructor(public route: ActivatedRoute,public uS: UtilityService ) {}\n\n  ngOnInit(): void { \n    this.config = this.route.snapshot.data['config'];\n  }\n  back(){\n    this.uS.back()\n  }\n}\n","<div class=\"d-flex justify-content-center align-items-center\" id=\"main\" style=\"height: 80vh\">\n  <div class=\"text-center\">\n    <div class=\"d-md-flex justify-content-center align-items-center\">\n      <h1 class=\"m-3 p-3 align-top border-right inline-block align-content-center\" style=\"border-right: 1px solid gray\"\n        *ngIf=\"!uS.isMobile\">\n        {{(config?.status||'404')}}\n      </h1>\n      <h1 class=\"m-3 p-3 align-top border-right inline-block align-content-center\"  *ngIf=\"uS.isMobile\">\n        {{(config?.status||'404')}}\n      </h1>\n      <div class=\"inline-block align-middle\">\n        <h2 class=\"font-weight-normal lead\" id=\"desc\">\n          {{(config?.message||'The page you requested was not found.')}}</h2>\n      </div>\n    </div>\n    <div class=\"d-flex mt-2 p-2 justify-content-center\">\n      <app-btn text=\"Go Back\" (mclick)=\"back()\" type=\"outline\" ></app-btn>\n      <span class=\"mx-1\"></span>\n      <app-btn text=\"Home\" routerLink=\"/\" type=\"primary\" ></app-btn>\n    </div>\n  </div>\n</div>\n","/*\n * Public API Surface of herlhay-helpers\n */\n\n// export * from './lib/herlhay-helpers.service';\n// export * from './lib/herlhay-helpers.component';\n// export * from './lib/herlhay-helpers.component';\n// import * as _HHelpers from './pre-public-api';\n// export namespace HHelpers{\n//     export _HHelpers\n// }\n\nexport * as Prototypes from './lib/shared/prototypes/prototypes';\n\nexport * from './environments/environment';\n\nexport * from './lib/config/index.config';\nexport * from './lib/config/validation-messages.config';\n\nexport * from './lib/services/api.service';\nexport * from './lib/services/app.service';\nexport * from './lib/services/authentication-interceptor.service';\nexport * from './lib/services/cache.service';\nexport * from './lib/services/encryptor.service';\nexport * from './lib/services/global-error-handler.service';\nexport * from './lib/services/local-cache.service';\nexport * from './lib/services/mix-panel.service';\nexport * from './lib/services/multi-tenant-interceptor.service';\nexport * from './lib/services/number-to-words.service';\nexport * from './lib/services/request-loader-interceptor.service';\nexport * from './lib/services/request-timeout.service';\nexport * from './lib/services/service-worker/check-for-update.service';\nexport * from './lib/services/service-worker/handle-unrecoverable-state.service';\nexport * from './lib/services/service-worker/log-update.service';\nexport * from './lib/services/service-worker/prompt-update.service';\nexport * from './lib/services/service-worker/service-worker.service';\nexport * from './lib/services/storage.service';\nexport * from './lib/services/tawk.io.service';\nexport * from './lib/services/utility.service';\nexport * from './lib/services/websocket.sockio.service';\n\nexport * from './lib/shared/classes/environment.class';\nexport * from './lib/shared/classes/form.class';\nexport * from './lib/shared/classes/page-loader.class';\nexport * from './lib/shared/classes/progress-loader.class';\nexport * from './lib/shared/classes/selector.class';\n\nexport * from './lib/shared/components/autocomplete/autocomplete.component';\nexport * from './lib/shared/components/btn/btn.component';\nexport * from './lib/shared/components/btn/btn.service';\nexport * from './lib/shared/components/btn/btn-lg/btn-lg.component';\nexport * from './lib/shared/components/btn/btn-link/btn-link.component';\nexport * from './lib/shared/components/input/validation-message/validation-message.component';\nexport * from './lib/shared/components/chip-list-autocomplete/chip-list-autocomplete.component';\nexport * from './lib/shared/components/confirm-dialog/confirm-dialog.component';\nexport * from './lib/shared/components/confirm-dialog/confirm-dialog.service';\nexport * from './lib/shared/components/count/count.component';\nexport * from './lib/shared/components/feedback-card/feedback-card.component';\nexport * from './lib/shared/components/file-upload/file-upload.component';\nexport * from './lib/shared/components/form-generator/form-generator-td/form-generator-td.component';\nexport * from './lib/shared/components/form-generator/form-generator.component';\nexport * from './lib/shared/components/grid-or-list/grid-or-list.component';\nexport * from './lib/shared/components/idler/idler.component';\nexport * from './lib/shared/components/idler/idler.service';\nexport * from './lib/shared/components/import-items/import-items.component'; \nexport * from './lib/shared/components/info-icon/info-icon.component';\nexport * from './lib/shared/components/input/input-td-rf.component';\nexport * from './lib/shared/components/input/input.component';\nexport * from './lib/shared/components/input/input.service';\nexport * from './lib/shared/components/input/inputs-pipes.pipe';\nexport * from './lib/shared/components/input/otp-input/otp-input.component';\nexport * from './lib/shared/components/listing-filters/listing-filters.component';\nexport * from './lib/shared/components/loader/loader.component';\nexport * from './lib/shared/components/mini-search-list/mini-search-list.component';\nexport * from './lib/shared/components/modal-form/modal-form.component';\nexport * from './lib/shared/components/modal-header/modal-header.component';\nexport * from './lib/shared/components/modal/modal.component';\nexport * from './lib/shared/components/no-list/no-list.component';\nexport * from './lib/shared/components/number-items-selected/number-items-selected.component';\nexport * from './lib/shared/components/page-template/page-template.component';\nexport * from './lib/shared/components/progress-bar-large/progress-bar-large.component';\nexport * from './lib/shared/components/response-card/response-card.component';\nexport * from './lib/shared/components/search-box/search-box.component';\nexport * from './lib/shared/components/svg-icon/svg-icon.component';\nexport * from './lib/shared/components/svg-icon/svg-icon.service';\nexport * from './lib/shared/components/table-https/table-https.component';\nexport * from './lib/shared/components/table-plain/table-plain.component';\nexport * from './lib/shared/components/text/text.component';\nexport * from './lib/shared/components/input/input.module';\nexport * from './lib/shared/components/btn/btn.module';\nexport * from './lib/shared/shared.module';\n\nexport * from './lib/shared/directives/drag-drop-file-upload.directive';\nexport * from './lib/shared/directives/image-loader.directive';\nexport * from './lib/shared/directives/responsiveness.directive';\nexport * from './lib/shared/directives/router.directive';\nexport * from './lib/shared/directives/directives.module';\n\nexport * from './lib/shared/pipes/utility.pipe';\n\nexport * from './lib/shared/functions/base-functions';\n\nexport * from './lib/shared/models/form-schema.model';\nexport * from './lib/shared/models/IMenuItem';\nexport * from './lib/shared/models/index.model';\n\nexport * from './lib/extra-pages/extra-pages.module';\nexport * from './lib/extra-pages/reset/reset.component';\nexport * from './lib/extra-pages/page-not-found/page-not-found.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NumberToWordsService","i2.UtilityService","i3","comps","modules","i6.CustomDatePipe","i7.ConfirmDialogService","i8.MixPanelService","i1.UtilityService","i1.EncryptorService","i1.StorageService","i2","i3.CacheService","i4.LocalCacheService","i1","i2.ApiService","i3.StorageService","i2.PromptUpdateService","i3.PromptUpdateService","i1.PromptUpdateService","i2.LogUpdateService","i3.HandleUnrecoverableStateService","i4.CheckForUpdateService","i5.UtilityService","i1.InputService","i1.SvgIconService","i1.BtnService","i4","i5","i6","i9","i2.AutocompleteService","i7","i8","debounceTime","i2.SvgIconComponent","i2.IdlerService","i3.UtilityService","observableOf","i1.ServiceWorkerService"],"mappings":"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"}