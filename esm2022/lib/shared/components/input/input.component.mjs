import { Component, EventEmitter, Input, Output, ViewChild, } from '@angular/core';
import { FormControl, FormGroup, Validators, FormsModule, ReactiveFormsModule, } from '@angular/forms';
import { MatFormFieldModule } from '@angular/material/form-field';
import { ReplaySubject } from 'rxjs';
import { EValidationType } from '../../models/index.model';
import { MatSelectModule } from '@angular/material/select';
import { MatCheckboxChange, MatCheckboxModule, _MatCheckboxRequiredValidatorModule, } from '@angular/material/checkbox';
import { MatSlideToggleChange, MatSlideToggleModule, _MatSlideToggleRequiredValidatorModule, } from '@angular/material/slide-toggle';
import { ToAnyPipe } from '../../pipes/utility.pipe';
import { InputClassPipe } from './inputs-pipes.pipe';
import { ValidationMessageComponent, ErrorMessagesPipe, } from './validation-message/validation-message.component';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatOptionModule } from '@angular/material/core';
import { SvgIconComponent } from '../svg-icon/svg-icon.component';
import { MatInputModule } from '@angular/material/input';
import { BtnComponent } from '../btn/btn.component';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { InfoIconComponent } from '../info-icon/info-icon.component';
import { NgClass, NgIf, NgSwitch, NgSwitchCase, NgFor, NgSwitchDefault } from '@angular/common';
import { configValidationMessages } from '../../../config/validation-messages.config';
import * as i0 from "@angular/core";
import * as i1 from "./input.service";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/datepicker";
import * as i5 from "@angular/material/slide-toggle";
import * as i6 from "@angular/material/checkbox";
import * as i7 from "@angular/material/input";
import * as i8 from "@angular/material/select";
import * as i9 from "@angular/material/core";
import * as i10 from "@angular/material/tooltip";
export class InputBasicComponent {
    /** FormGroup */
    set _form(v) {
        this.form = v;
        this.control = this.form ? this.form.controls[this.name] : null;
    }
    /** FormControlName */
    set _name(v) {
        if (!this.form)
            this.form = new FormGroup({ [v]: new FormControl() });
        this.name = v;
        this.control = this.form.controls[this.name];
    }
    set _validationKey(v) {
        // debugger;
        this.validationType = v;
        this.validations = configValidationMessages[this.validationType];
    }
    set _disabled(v) {
        if (this.debug)
            debugger;
        this.disabled = v;
        if (this.control?.parent?.disabled)
            return;
        if (v) {
            if (this.clearOnDisable)
                this.control?.reset();
            this.control?.disable();
        }
        else if (this.control?.disabled) {
            this.control?.enable();
        }
    }
    set _options(v) {
        // debugger
        // console.log('options', v);
        if (!v && this.optionsInitFunc)
            return;
        this.rawOptions = v;
        this.options = this.iS.optionsFormatter(v, this.valueField, this.optionFormatter, this.labelType, this.labelField, this.autoPickValueField);
        // debugger
        this.options$.next(this.options);
    }
    set _type(v) {
        this.oType = v;
        if (v == 'percentage') {
            this.type = 'number';
            this.max = 100;
            this.min = 0;
        }
        else
            this.type = v;
        // if (this.forcePatched) {
        //   this.control.reset();
        //   this.forcePatched = false;
        // }
        // if (v == 'checkbox' && (this.value == null || this.value == undefined)) {
        //   this.control?.patchValue(false);
        //   this.forcePatched = true;
        // }
    }
    set _value(v) {
        this.__value = v;
    }
    constructor(iS) {
        this.iS = iS;
        this.autocomplete = true;
        this.clearOnDisable = false;
        this.colored = true;
        this.checked = false; //optional checked option for checkboxes
        this.id = 'id' + Math.round(Math.random() * 1000000);
        this.inpCl = 'control-bg-gray';
        this.lblCl = '2';
        this.light = true;
        this.showEmptyOption = false;
        this.showSeperateLabel = this.iS.defaultValue.showSeperateLabel;
        this.showValidation = false;
        this.showValidationMsg = this.iS.defaultValue.showValidationMsg;
        this.stacked = true;
        this.theme = 1;
        this.translateOptions = false;
        this.mchange = new EventEmitter();
        this.validityChecked = new EventEmitter();
        this.mSelectOptionChange = new EventEmitter();
        this.mContextChange = new EventEmitter();
        this.options$ = new ReplaySubject();
        this.appearance = 'outline';
    }
    ngOnInit() {
        if (this.showLabel == null)
            this.showLabel = !!this.label;
        if (this.autoPickValueField) {
            this.labelType = 'cdt';
            this.valueField = 'code';
        }
        if (this.min == 0 && this.max == 100)
            this.oType = 'percentage';
        if (this.type == 'viewer' && (this.noFormat == null || this.noFormat == undefined))
            this.noFormat = true;
        if (!this.validationType)
            this._validationKey = EValidationType.normal;
        this.control?.valueChanges.subscribe((r) => {
            // this.validityChecked.emit(r);
            this.mchange.emit(r);
        });
        if (this.optionsInitFunc) {
            this.optionsInitFunc().subscribe((r) => {
                this._options = r;
                // this.optionsMap[scheme.field] = r;
            });
        }
    }
    ngAfterViewInit() {
        // this.viewInited = true;
        if (this.noPaste)
            document.getElementById(this.id).onpaste = (e) => e.preventDefault();
    }
    disableControl(control = this.control) {
        if (!this.disabled)
            return;
        control?.disable({ emitEvent: false });
    }
    get isRequired() {
        return this.required || this.control?.hasValidator(Validators.required);
    }
    change(e) {
        // debugger;
        let val = e;
        if (e instanceof MatCheckboxChange || e instanceof MatSlideToggleChange) {
            val = e.checked;
        }
        else {
            val = e.value || e?.target?.value;
        }
        if (this.type == 'number') {
            if (this.max && +val > this.max) {
                this.control.setValue(this.max);
            }
            else if (this.min != null && this.min != undefined && +val < this.min) {
                this.control.setValue(this.min);
            }
            if (this.decimalPoints != undefined && this.decimalPoints != null)
                this.control.setValue(+(+val).toFixed(this.decimalPoints));
        }
        this.__value = this.control.value;
        // this.mchange.emit(this.control.value);
        // debugger
        if (this.rawOptions) {
            this.selectionObject = this.rawOptions.find((x) => x[this.valueField] == this.__value);
            this.mSelectOptionChange.emit(this.selectionObject);
        }
        if (this.customSelectChangeAction) {
            this.mContextChange.emit(this.customSelectChangeAction(this.control.value, this.options, this.rawOptions));
        }
    }
    get valid() {
        return this.control?.valid && this.control?.touched;
    }
    get invalid() {
        return this.control?.invalid && this.control?.touched;
    }
    get value() {
        return this.control?.value;
    }
    get hasValue() {
        return !!this.control?.value?.toString()?.trim();
    }
    get invalidCheckbox() {
        return this.invalid && this.type == 'checkbox';
    }
    upload(e) {
        this.files = Array.from(e.target.files);
        this.control?.patchValue(this.files[0]);
        this.mchange.emit(e);
        this.imagePaths = [];
        this.files.forEach((f) => {
            const reader = new FileReader();
            reader.onload = (e) => {
                this.imagePaths.push(e.target.result);
            };
            reader.readAsDataURL(f);
        });
    }
    log() {
        console.log(this.form);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: InputBasicComponent, deps: [{ token: i1.InputService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.2", type: InputBasicComponent, isStandalone: true, selector: "app-input", inputs: { accept: "accept", autocomplete: "autocomplete", autoPickValueField: "autoPickValueField", clearOnDisable: "clearOnDisable", cls: "cls", colored: "colored", checked: "checked", contextData: "contextData", dashboardInput: "dashboardInput", debug: "debug", decimalPoints: "decimalPoints", endLabel: "endLabel", endLabelTooltip: "endLabelTooltip", files: "files", _form: ["form", "_form"], noFormat: "noFormat", hide: "hide", hint: "hint", icon: "icon", id: "id", inpCl: "inpCl", label: "label", labelLink: "labelLink", labelField: "labelField", labelType: "labelType", lblCl: "lblCl", light: "light", loading: "loading", max: "max", min: "min", mini: "mini", multiple: "multiple", _name: ["name", "_name"], optionFormatter: "optionFormatter", optionsInitFunc: "optionsInitFunc", placeholder: "placeholder", prefix: "prefix", startField: "startField", endField: "endField", readonly: "readonly", required: "required", noPaste: "noPaste", showEmptyOption: "showEmptyOption", showLabel: "showLabel", showSeperateLabel: "showSeperateLabel", showValidation: "showValidation", showValidationMsg: "showValidationMsg", showValidationIcon: "showValidationIcon", small: "small", stacked: "stacked", suffix: "suffix", theme: "theme", translateOptions: "translateOptions", valueField: "valueField", vms: "vms", xsmall: "xsmall", appearance: "appearance", _validationKey: ["validationKey", "_validationKey"], _disabled: ["disabled", "_disabled"], customSelectChangeAction: "customSelectChangeAction", _options: ["options", "_options"], _type: ["type", "_type"], _value: ["mvalue", "_value"] }, outputs: { mchange: "mchange", validityChecked: "validityChecked", mSelectOptionChange: "mSelectOptionChange", mContextChange: "mContextChange" }, viewQueries: [{ propertyName: "inpTag", first: true, predicate: ["inp"], descendants: true }], ngImport: i0, template: "<div class=\"  {{type}}  \" [ngClass]=\"{showValidation,dashboardInput}\" [formGroup]=\"form\">\n  <div class=\"d-flex align-items-center mb-8\" *ngIf=\"showSeperateLabel\" (click)=\"log()\">{{label}}\n    <span *ngIf=\"hint\" class=\"ms-8\">\n      <info-icon [text]=\"hint\" />\n    </span>\n  </div>\n  <ng-container [ngSwitch]=\"type\">\n    <!-- TOGGLE -->\n    <ng-container *ngSwitchCase=\"'date-range'\">\n      <mat-form-field [appearance]=\"appearance\" class=\"custom-input\">\n        <mat-date-range-input [formGroup]=\"control|toAny\" [rangePicker]=\"picker\">\n          <input formControlName=\"{{startField}}\" matStartDate placeholder=\"Start date\">\n          <input formControlName=\"{{endField}}\" matEndDate placeholder=\"End date\">\n        </mat-date-range-input>\n        <mat-hint>MM/DD/YYYY \u2013 MM/DD/YYYY</mat-hint>\n        <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker>\n          <mat-date-range-picker-actions>\n            <app-btn text=\"Cancel\" type=\"outline\" matDatepickerCancel></app-btn>\n            <div class=\"ms-8\">\n\n            </div>\n            <app-btn text=\"Apply\" matDatepickerApply></app-btn>\n          </mat-date-range-picker-actions>\n        </mat-date-range-picker>\n      </mat-form-field>\n    </ng-container>\n    <!-- TOGGLE -->\n    <ng-container *ngSwitchCase=\"'toggle'\">\n      <mat-slide-toggle [formControlName]=\"name|toAny\" [required]=\"required\" (change)=\"change($event)\">{{label}}\n      </mat-slide-toggle>\n    </ng-container>\n    <!-- CHECKBOX -->\n    <ng-container *ngSwitchCase=\"'checkbox'\">\n      <mat-checkbox #mc class=\"circle-checkbox\" [formControlName]=\"name|toAny\" [required]=\"required\"\n        (change)=\"change($event)\">\n        {{label}}\n      </mat-checkbox>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'checkedbox'\">\n      <input type=\"checkbox\" class=\"{{ inpCl }} d-inline-block form-control width-unset\" [checked]=\"checked\"\n        [attr.data-debug]=\"debug\" [attr.data-noformat]=\"noFormat\" [required]=\"required\" [readonly]=\"readonly\"\n        (change)=\"change($event)\" />\n    </ng-container>\n    <!-- FILE -->\n    <ng-container *ngSwitchCase=\"'file'\">\n      <input type=\"file\" id=\"{{ id }}\" class=\"p-8 {{inpCl | inputClass: valid:invalid:showValidation}}\"\n        (change)=\"upload($event)\" [accept]=\"accept\" [attr.multiple]=\"multiple\" />\n      <div *ngFor=\"let imagePath of imagePaths\">\n        <img src=\"{{imagePath}}\" alt=\"{{label}} image\" class=\"image-preview mt-8\">\n      </div>\n    </ng-container>\n    <!-- Date -->\n    <ng-container *ngSwitchCase=\"'date'\">\n      <mat-form-field [appearance]=\"appearance\" class=\"custom-input\">\n        <input matInput [matDatepicker]=\"datepicker\" (selectionChange)=\"change($event)\" [required]=\"required\"\n          [min]=\"min\" [max]=\"max\" placeholder=\"{{placeholder||label}}\" [formControlName]=\"name|toAny\" id=\"{{ id }}\">\n        <mat-datepicker-toggle matIconSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\n        <mat-datepicker #datepicker>\n          <mat-datepicker-actions>\n            <app-btn text=\"Cancel\" type=\"outline\" matDatepickerCancel></app-btn>\n            <div class=\"ms-8\">\n\n            </div>\n            <app-btn text=\"Apply\" matDatepickerApply></app-btn>\n          </mat-datepicker-actions>\n        </mat-datepicker>\n      </mat-form-field>\n    </ng-container>\n    <!-- SELECT -->\n    <ng-container *ngSwitchCase=\"'select'\">\n      <mat-form-field [appearance]=\"appearance\" class=\"custom-input\">\n        <div matPrefix class=\"prefix-icon\" *ngIf=\"icon\">\n          <svg-icon [icon]=\"icon\" (click)=\"log()\"></svg-icon>\n        </div>\n        <mat-select (selectionChange)=\"change($event)\" [required]=\"required\" placeholder=\"{{placeholder||label}}\"\n          [formControlName]=\"name|toAny\" id=\"{{ id }}\">\n          <mat-option *ngIf=\"showEmptyOption\" selected></mat-option>\n          <mat-option *ngFor=\"let item of options; trackBy: iS.trackByValue\" [value]=\"item.value\" #inp>\n            {{ item.label }}\n          </mat-option>\n        </mat-select>\n\n        <div matSuffix *ngIf=\"showValidation\">\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"valid\">\n              <span class=\"suffix-success\">\n                <svg-icon icon=\"success\"></svg-icon>\n              </span>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"invalid\">\n              <span class=\"suffix-error\" [matTooltip]=\"validations|errorMessages:label:max:min:control\">\n                <svg-icon icon=\"error\"></svg-icon>\n              </span>\n            </ng-container>\n          </ng-container>\n        </div>\n      </mat-form-field>\n    </ng-container>\n    <!-- TEXTAREA -->\n    <ng-container *ngSwitchCase=\"'textarea'\">\n      <textarea [formControlName]=\"name|toAny\" id=\"{{ id }}\" [class]=\"inpCl | inputClass: valid:invalid:showValidation\"\n        placeholder=\"{{label}}\" [attr.data-noformat]=\"noFormat\" [required]=\"required\" [readonly]=\"readonly\"\n        (change)=\"change($event)\"></textarea>\n    </ng-container>\n    <!-- Radio -->\n    <ng-container *ngSwitchCase=\"'radio'\">\n      <input type=\"radio\" [formControlName]=\"name|toAny\" id=\"{{ id }}\" [readonly]=\"readonly\" (change)=\"change($event)\"\n        [attr.data-noformat]=\"noFormat\" [value]=\"__value\" />\n    </ng-container>\n    <!-- Viewer -->\n    <ng-container *ngSwitchCase=\"'viewer'\">\n      <input type=\"text\" id=\"{{ id }}\" placeholder=\"{{ placeholder }}\" [attr.data-noformat]=\"noFormat\"\n        [class]=\"inpCl | inputClass: valid:invalid:showValidation\" [readonly]=\"true\" [value]=\"value\" />\n    </ng-container>\n    <!-- DEFAULT -->\n    <ng-container *ngSwitchDefault>\n      <mat-form-field [appearance]=\"appearance\">\n        <div matPrefix class=\"prefix-icon\" *ngIf=\"icon\">\n          <svg-icon [icon]=\"icon\" (click)=\"log()\"></svg-icon>\n        </div>\n        <div matPrefix class=\"prefix-text\" *ngIf=\"prefix\">\n          {{prefix}}\n        </div>\n        <input matInput type=\"{{showPassword?'text':type}}\" [formControlName]=\"name|toAny\" id=\"{{ id }}\"\n          [readonly]=\"readonly || disabled\" (change)=\"change($event)\" placeholder=\"{{placeholder||label}}\">\n\n        <div matSuffix class=\"d-flex align-items-center\" *ngIf=\"showValidation||type=='password'\">\n          <ng-container *ngIf=\"type=='password'\">\n            <span class=\"pointer showPassword\" (click)=\"showPassword=!showPassword\">\n              {{!showPassword?'Show':'hide'}}\n            </span>\n          </ng-container>\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"valid\">\n              <span class=\"suffix-success ms-8\">\n                <svg-icon icon=\"success\"></svg-icon>\n              </span>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"invalid\">\n              <span class=\"suffix-error ms-8\" [matTooltip]=\"validations|errorMessages:label:max:min:control\">\n                <svg-icon icon=\"error\"></svg-icon>\n              </span>\n            </ng-container>\n          </ng-container>\n        </div>\n      </mat-form-field>\n    </ng-container>\n  </ng-container>\n</div>\n<div *ngIf=\"showValidationMsg\">\n  <app-validation-message #vmTag [label]=\"label\" [control]=\"control\" [maxLength]=\"max\" [minLength]=\"min\"></app-validation-message>\n</div>", styles: [".bordercheck{border:1px solid #4ef580;outline:0}.borderuncheck{border:1px solid red;outline:0}.light{font-weight:500}.validity-icon{display:none;position:absolute;top:0;left:unset;right:20px;height:100%;align-items:center}.select .validity-icon{right:30px}.valid{display:flex!important;color:#4ef580}.pending{display:flex!important;color:#ff4500}.invalid{display:flex!important;color:red}.inputform{height:41px}.invalid-label{color:red!important}textarea{width:100%;padding:16px}input[type=checkbox]:checked{position:relative}.showValidationIcon .form-control:not(input[type=checkbox].form-control),.showValidationIcon select.form-control:not(input[type=checkbox].form-control){padding:10px 36px 10px 12px}.password-icons{position:absolute;right:20px;top:17%}[disabled]{cursor:default}.link{cursor:pointer}::placeholder,.custom-input .mat-mdc-select,.mat-mdc-select-placeholder{color:#bdbdbd}::ng-deep .prefix-icon{color:#bdbdbd}::ng-deep .svg-icon{height:13px;width:13px}::ng-deep .showValidation .mat-mdc-form-field.ng-valid.ng-touched{border:1px solid #27ae60}::ng-deep .showValidation .mat-mdc-form-field.ng-valid.ng-touched .suffix-success .svg-icon{color:#27ae60}::ng-deep .showValidation .mat-form-field-invalid.ng-touched{border:1px solid #eb5757}::ng-deep .showValidation .mat-form-field-invalid.ng-touched .suffix-error .svg-icon{color:#eb5757}.showPassword{font-style:normal;font-weight:500;font-size:14px;line-height:19px;color:#bdbdbd}::ng-deep .dashboardInput{display:flex}::ng-deep .dashboardInput .mat-mdc-form-field{width:100%;height:auto;margin-top:0;margin-bottom:0;background:#fafafa;border:1px solid #f2f2f2;border-radius:8px;padding:8px 12px;--mdc-shape-small: 0}::ng-deep .dashboardInput .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{height:auto;padding:0;color:#4f4f4f;font-weight:500;--mdc-typography-body1-font-size: 12px}.image-preview{height:200px;border-radius:16px}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: InfoIconComponent, selector: "info-icon", inputs: ["text", "coloured", "left", "right"] }, { kind: "directive", type: NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "ngmodule", type: MatFormFieldModule }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatHint, selector: "mat-hint", inputs: ["align", "id"] }, { kind: "directive", type: i3.MatPrefix, selector: "[matPrefix], [matIconPrefix], [matTextPrefix]", inputs: ["matTextPrefix"] }, { kind: "directive", type: i3.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "ngmodule", type: MatDatepickerModule }, { kind: "component", type: i4.MatDatepicker, selector: "mat-datepicker", exportAs: ["matDatepicker"] }, { kind: "directive", type: i4.MatDatepickerInput, selector: "input[matDatepicker]", inputs: ["matDatepicker", "min", "max", "matDatepickerFilter"], exportAs: ["matDatepickerInput"] }, { kind: "component", type: i4.MatDatepickerToggle, selector: "mat-datepicker-toggle", inputs: ["for", "tabIndex", "aria-label", "disabled", "disableRipple"], exportAs: ["matDatepickerToggle"] }, { kind: "component", type: i4.MatDateRangeInput, selector: "mat-date-range-input", inputs: ["rangePicker", "required", "dateFilter", "min", "max", "disabled", "separator", "comparisonStart", "comparisonEnd"], exportAs: ["matDateRangeInput"] }, { kind: "directive", type: i4.MatStartDate, selector: "input[matStartDate]", inputs: ["errorStateMatcher"], outputs: ["dateChange", "dateInput"] }, { kind: "directive", type: i4.MatEndDate, selector: "input[matEndDate]", inputs: ["errorStateMatcher"], outputs: ["dateChange", "dateInput"] }, { kind: "component", type: i4.MatDateRangePicker, selector: "mat-date-range-picker", exportAs: ["matDateRangePicker"] }, { kind: "component", type: i4.MatDatepickerActions, selector: "mat-datepicker-actions, mat-date-range-picker-actions" }, { kind: "directive", type: i4.MatDatepickerCancel, selector: "[matDatepickerCancel], [matDateRangePickerCancel]" }, { kind: "directive", type: i4.MatDatepickerApply, selector: "[matDatepickerApply], [matDateRangePickerApply]" }, { kind: "component", type: BtnComponent, selector: "app-btn,btn", inputs: ["formSchema", "icon", "type", "group", "actionType", "animate", "badge", "class", "customIcon", "disabled", "form", "help", "iconBtn", "lite", "loading", "mclass", "showHelpIcon", "mini", "text", "valid", "subButtons", "onFormInvalid"], outputs: ["mclick"] }, { kind: "ngmodule", type: MatSlideToggleModule }, { kind: "directive", type: i5.MatSlideToggleRequiredValidator, selector: "mat-slide-toggle[required][formControlName],             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]" }, { kind: "component", type: i5.MatSlideToggle, selector: "mat-slide-toggle", inputs: ["disabled", "disableRipple", "color", "tabIndex"], exportAs: ["matSlideToggle"] }, { kind: "ngmodule", type: _MatSlideToggleRequiredValidatorModule }, { kind: "ngmodule", type: MatCheckboxModule }, { kind: "component", type: i6.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex"], exportAs: ["matCheckbox"] }, { kind: "directive", type: i6.MatCheckboxRequiredValidator, selector: "mat-checkbox[required][formControlName],             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]" }, { kind: "ngmodule", type: _MatCheckboxRequiredValidatorModule }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "ngmodule", type: MatInputModule }, { kind: "directive", type: i7.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: SvgIconComponent, selector: "svg-icon", inputs: ["class", "icon"] }, { kind: "ngmodule", type: MatSelectModule }, { kind: "component", type: i8.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex", "hideSingleSelectionIndicator"], exportAs: ["matSelect"] }, { kind: "component", type: i9.MatOption, selector: "mat-option", exportAs: ["matOption"] }, { kind: "ngmodule", type: MatOptionModule }, { kind: "ngmodule", type: MatTooltipModule }, { kind: "directive", type: i10.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "directive", type: NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "component", type: ValidationMessageComponent, selector: "app-validation-message", inputs: ["validationKey", "control", "input", "label", "minLength", "maxLength", "customMessage"] }, { kind: "pipe", type: InputClassPipe, name: "inputClass" }, { kind: "pipe", type: ToAnyPipe, name: "toAny" }, { kind: "pipe", type: ErrorMessagesPipe, name: "errorMessages" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: InputBasicComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-input', standalone: true, imports: [
                        NgClass,
                        FormsModule,
                        ReactiveFormsModule,
                        NgIf,
                        InfoIconComponent,
                        NgSwitch,
                        NgSwitchCase,
                        MatFormFieldModule,
                        MatDatepickerModule,
                        BtnComponent,
                        MatSlideToggleModule,
                        _MatSlideToggleRequiredValidatorModule,
                        MatCheckboxModule,
                        _MatCheckboxRequiredValidatorModule,
                        NgFor,
                        MatInputModule,
                        SvgIconComponent,
                        MatSelectModule,
                        MatOptionModule,
                        MatTooltipModule,
                        NgSwitchDefault,
                        ValidationMessageComponent,
                        InputClassPipe,
                        ToAnyPipe,
                        ErrorMessagesPipe,
                    ], template: "<div class=\"  {{type}}  \" [ngClass]=\"{showValidation,dashboardInput}\" [formGroup]=\"form\">\n  <div class=\"d-flex align-items-center mb-8\" *ngIf=\"showSeperateLabel\" (click)=\"log()\">{{label}}\n    <span *ngIf=\"hint\" class=\"ms-8\">\n      <info-icon [text]=\"hint\" />\n    </span>\n  </div>\n  <ng-container [ngSwitch]=\"type\">\n    <!-- TOGGLE -->\n    <ng-container *ngSwitchCase=\"'date-range'\">\n      <mat-form-field [appearance]=\"appearance\" class=\"custom-input\">\n        <mat-date-range-input [formGroup]=\"control|toAny\" [rangePicker]=\"picker\">\n          <input formControlName=\"{{startField}}\" matStartDate placeholder=\"Start date\">\n          <input formControlName=\"{{endField}}\" matEndDate placeholder=\"End date\">\n        </mat-date-range-input>\n        <mat-hint>MM/DD/YYYY \u2013 MM/DD/YYYY</mat-hint>\n        <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker>\n          <mat-date-range-picker-actions>\n            <app-btn text=\"Cancel\" type=\"outline\" matDatepickerCancel></app-btn>\n            <div class=\"ms-8\">\n\n            </div>\n            <app-btn text=\"Apply\" matDatepickerApply></app-btn>\n          </mat-date-range-picker-actions>\n        </mat-date-range-picker>\n      </mat-form-field>\n    </ng-container>\n    <!-- TOGGLE -->\n    <ng-container *ngSwitchCase=\"'toggle'\">\n      <mat-slide-toggle [formControlName]=\"name|toAny\" [required]=\"required\" (change)=\"change($event)\">{{label}}\n      </mat-slide-toggle>\n    </ng-container>\n    <!-- CHECKBOX -->\n    <ng-container *ngSwitchCase=\"'checkbox'\">\n      <mat-checkbox #mc class=\"circle-checkbox\" [formControlName]=\"name|toAny\" [required]=\"required\"\n        (change)=\"change($event)\">\n        {{label}}\n      </mat-checkbox>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'checkedbox'\">\n      <input type=\"checkbox\" class=\"{{ inpCl }} d-inline-block form-control width-unset\" [checked]=\"checked\"\n        [attr.data-debug]=\"debug\" [attr.data-noformat]=\"noFormat\" [required]=\"required\" [readonly]=\"readonly\"\n        (change)=\"change($event)\" />\n    </ng-container>\n    <!-- FILE -->\n    <ng-container *ngSwitchCase=\"'file'\">\n      <input type=\"file\" id=\"{{ id }}\" class=\"p-8 {{inpCl | inputClass: valid:invalid:showValidation}}\"\n        (change)=\"upload($event)\" [accept]=\"accept\" [attr.multiple]=\"multiple\" />\n      <div *ngFor=\"let imagePath of imagePaths\">\n        <img src=\"{{imagePath}}\" alt=\"{{label}} image\" class=\"image-preview mt-8\">\n      </div>\n    </ng-container>\n    <!-- Date -->\n    <ng-container *ngSwitchCase=\"'date'\">\n      <mat-form-field [appearance]=\"appearance\" class=\"custom-input\">\n        <input matInput [matDatepicker]=\"datepicker\" (selectionChange)=\"change($event)\" [required]=\"required\"\n          [min]=\"min\" [max]=\"max\" placeholder=\"{{placeholder||label}}\" [formControlName]=\"name|toAny\" id=\"{{ id }}\">\n        <mat-datepicker-toggle matIconSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\n        <mat-datepicker #datepicker>\n          <mat-datepicker-actions>\n            <app-btn text=\"Cancel\" type=\"outline\" matDatepickerCancel></app-btn>\n            <div class=\"ms-8\">\n\n            </div>\n            <app-btn text=\"Apply\" matDatepickerApply></app-btn>\n          </mat-datepicker-actions>\n        </mat-datepicker>\n      </mat-form-field>\n    </ng-container>\n    <!-- SELECT -->\n    <ng-container *ngSwitchCase=\"'select'\">\n      <mat-form-field [appearance]=\"appearance\" class=\"custom-input\">\n        <div matPrefix class=\"prefix-icon\" *ngIf=\"icon\">\n          <svg-icon [icon]=\"icon\" (click)=\"log()\"></svg-icon>\n        </div>\n        <mat-select (selectionChange)=\"change($event)\" [required]=\"required\" placeholder=\"{{placeholder||label}}\"\n          [formControlName]=\"name|toAny\" id=\"{{ id }}\">\n          <mat-option *ngIf=\"showEmptyOption\" selected></mat-option>\n          <mat-option *ngFor=\"let item of options; trackBy: iS.trackByValue\" [value]=\"item.value\" #inp>\n            {{ item.label }}\n          </mat-option>\n        </mat-select>\n\n        <div matSuffix *ngIf=\"showValidation\">\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"valid\">\n              <span class=\"suffix-success\">\n                <svg-icon icon=\"success\"></svg-icon>\n              </span>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"invalid\">\n              <span class=\"suffix-error\" [matTooltip]=\"validations|errorMessages:label:max:min:control\">\n                <svg-icon icon=\"error\"></svg-icon>\n              </span>\n            </ng-container>\n          </ng-container>\n        </div>\n      </mat-form-field>\n    </ng-container>\n    <!-- TEXTAREA -->\n    <ng-container *ngSwitchCase=\"'textarea'\">\n      <textarea [formControlName]=\"name|toAny\" id=\"{{ id }}\" [class]=\"inpCl | inputClass: valid:invalid:showValidation\"\n        placeholder=\"{{label}}\" [attr.data-noformat]=\"noFormat\" [required]=\"required\" [readonly]=\"readonly\"\n        (change)=\"change($event)\"></textarea>\n    </ng-container>\n    <!-- Radio -->\n    <ng-container *ngSwitchCase=\"'radio'\">\n      <input type=\"radio\" [formControlName]=\"name|toAny\" id=\"{{ id }}\" [readonly]=\"readonly\" (change)=\"change($event)\"\n        [attr.data-noformat]=\"noFormat\" [value]=\"__value\" />\n    </ng-container>\n    <!-- Viewer -->\n    <ng-container *ngSwitchCase=\"'viewer'\">\n      <input type=\"text\" id=\"{{ id }}\" placeholder=\"{{ placeholder }}\" [attr.data-noformat]=\"noFormat\"\n        [class]=\"inpCl | inputClass: valid:invalid:showValidation\" [readonly]=\"true\" [value]=\"value\" />\n    </ng-container>\n    <!-- DEFAULT -->\n    <ng-container *ngSwitchDefault>\n      <mat-form-field [appearance]=\"appearance\">\n        <div matPrefix class=\"prefix-icon\" *ngIf=\"icon\">\n          <svg-icon [icon]=\"icon\" (click)=\"log()\"></svg-icon>\n        </div>\n        <div matPrefix class=\"prefix-text\" *ngIf=\"prefix\">\n          {{prefix}}\n        </div>\n        <input matInput type=\"{{showPassword?'text':type}}\" [formControlName]=\"name|toAny\" id=\"{{ id }}\"\n          [readonly]=\"readonly || disabled\" (change)=\"change($event)\" placeholder=\"{{placeholder||label}}\">\n\n        <div matSuffix class=\"d-flex align-items-center\" *ngIf=\"showValidation||type=='password'\">\n          <ng-container *ngIf=\"type=='password'\">\n            <span class=\"pointer showPassword\" (click)=\"showPassword=!showPassword\">\n              {{!showPassword?'Show':'hide'}}\n            </span>\n          </ng-container>\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"valid\">\n              <span class=\"suffix-success ms-8\">\n                <svg-icon icon=\"success\"></svg-icon>\n              </span>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"invalid\">\n              <span class=\"suffix-error ms-8\" [matTooltip]=\"validations|errorMessages:label:max:min:control\">\n                <svg-icon icon=\"error\"></svg-icon>\n              </span>\n            </ng-container>\n          </ng-container>\n        </div>\n      </mat-form-field>\n    </ng-container>\n  </ng-container>\n</div>\n<div *ngIf=\"showValidationMsg\">\n  <app-validation-message #vmTag [label]=\"label\" [control]=\"control\" [maxLength]=\"max\" [minLength]=\"min\"></app-validation-message>\n</div>", styles: [".bordercheck{border:1px solid #4ef580;outline:0}.borderuncheck{border:1px solid red;outline:0}.light{font-weight:500}.validity-icon{display:none;position:absolute;top:0;left:unset;right:20px;height:100%;align-items:center}.select .validity-icon{right:30px}.valid{display:flex!important;color:#4ef580}.pending{display:flex!important;color:#ff4500}.invalid{display:flex!important;color:red}.inputform{height:41px}.invalid-label{color:red!important}textarea{width:100%;padding:16px}input[type=checkbox]:checked{position:relative}.showValidationIcon .form-control:not(input[type=checkbox].form-control),.showValidationIcon select.form-control:not(input[type=checkbox].form-control){padding:10px 36px 10px 12px}.password-icons{position:absolute;right:20px;top:17%}[disabled]{cursor:default}.link{cursor:pointer}::placeholder,.custom-input .mat-mdc-select,.mat-mdc-select-placeholder{color:#bdbdbd}::ng-deep .prefix-icon{color:#bdbdbd}::ng-deep .svg-icon{height:13px;width:13px}::ng-deep .showValidation .mat-mdc-form-field.ng-valid.ng-touched{border:1px solid #27ae60}::ng-deep .showValidation .mat-mdc-form-field.ng-valid.ng-touched .suffix-success .svg-icon{color:#27ae60}::ng-deep .showValidation .mat-form-field-invalid.ng-touched{border:1px solid #eb5757}::ng-deep .showValidation .mat-form-field-invalid.ng-touched .suffix-error .svg-icon{color:#eb5757}.showPassword{font-style:normal;font-weight:500;font-size:14px;line-height:19px;color:#bdbdbd}::ng-deep .dashboardInput{display:flex}::ng-deep .dashboardInput .mat-mdc-form-field{width:100%;height:auto;margin-top:0;margin-bottom:0;background:#fafafa;border:1px solid #f2f2f2;border-radius:8px;padding:8px 12px;--mdc-shape-small: 0}::ng-deep .dashboardInput .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{height:auto;padding:0;color:#4f4f4f;font-weight:500;--mdc-typography-body1-font-size: 12px}.image-preview{height:200px;border-radius:16px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.InputService }]; }, propDecorators: { accept: [{
                type: Input
            }], autocomplete: [{
                type: Input
            }], autoPickValueField: [{
                type: Input
            }], clearOnDisable: [{
                type: Input
            }], cls: [{
                type: Input
            }], colored: [{
                type: Input
            }], checked: [{
                type: Input
            }], contextData: [{
                type: Input
            }], dashboardInput: [{
                type: Input
            }], debug: [{
                type: Input
            }], decimalPoints: [{
                type: Input
            }], endLabel: [{
                type: Input
            }], endLabelTooltip: [{
                type: Input
            }], files: [{
                type: Input
            }], _form: [{
                type: Input,
                args: [{ required: true, alias: 'form' }]
            }], noFormat: [{
                type: Input
            }], hide: [{
                type: Input
            }], hint: [{
                type: Input
            }], icon: [{
                type: Input
            }], id: [{
                type: Input
            }], inpCl: [{
                type: Input
            }], label: [{
                type: Input
            }], labelLink: [{
                type: Input
            }], labelField: [{
                type: Input
            }], labelType: [{
                type: Input
            }], lblCl: [{
                type: Input
            }], light: [{
                type: Input
            }], loading: [{
                type: Input
            }], max: [{
                type: Input
            }], min: [{
                type: Input
            }], mini: [{
                type: Input
            }], multiple: [{
                type: Input
            }], _name: [{
                type: Input,
                args: ['name']
            }], optionFormatter: [{
                type: Input
            }], optionsInitFunc: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], prefix: [{
                type: Input
            }], startField: [{
                type: Input
            }], endField: [{
                type: Input
            }], readonly: [{
                type: Input
            }], required: [{
                type: Input
            }], noPaste: [{
                type: Input
            }], showEmptyOption: [{
                type: Input
            }], showLabel: [{
                type: Input
            }], showSeperateLabel: [{
                type: Input
            }], showValidation: [{
                type: Input
            }], showValidationMsg: [{
                type: Input
            }], showValidationIcon: [{
                type: Input
            }], small: [{
                type: Input
            }], stacked: [{
                type: Input
            }], suffix: [{
                type: Input
            }], theme: [{
                type: Input
            }], translateOptions: [{
                type: Input
            }], valueField: [{
                type: Input
            }], vms: [{
                type: Input
            }], xsmall: [{
                type: Input
            }], mchange: [{
                type: Output
            }], validityChecked: [{
                type: Output
            }], mSelectOptionChange: [{
                type: Output
            }], mContextChange: [{
                type: Output
            }], appearance: [{
                type: Input
            }], _validationKey: [{
                type: Input,
                args: ['validationKey']
            }], _disabled: [{
                type: Input,
                args: ['disabled']
            }], customSelectChangeAction: [{
                type: Input
            }], _options: [{
                type: Input,
                args: ['options']
            }], _type: [{
                type: Input,
                args: ['type']
            }], _value: [{
                type: Input,
                args: ['mvalue']
            }], inpTag: [{
                type: ViewChild,
                args: ['inp']
            }] } });
//# sourceMappingURL=data:application/json;base64,