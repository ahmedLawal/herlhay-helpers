import { Component, Input, ViewChild, } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
import { MatTableModule } from '@angular/material/table';
import { cloneDeep } from 'lodash-es';
import { BehaviorSubject, merge, of as observableOf, of, ReplaySubject, } from 'rxjs';
import { catchError, filter, map, startWith, switchMap, tap, } from 'rxjs/operators';
import { TablePlainComponent } from '../table-plain/table-plain.component';
import { FunctionCaller1, FunctionCaller2, ToAnyPipe, ValueOrXPipe } from '../../pipes/utility.pipe';
import { GetColFormattedPipe, GetRawFieldsPipe, TableToStringPipe } from '../table-plain/table.pipe';
import { ResponsivenessDirective, hideMobileDirective, hideDesktopDirective } from '../../directives/responsiveness.directive';
import { MatPaginatorModule } from '@angular/material/paginator';
import { MatIconModule } from '@angular/material/icon';
import { MiniSearchListComponent } from '../mini-search-list/mini-search-list.component';
import { MatMenuModule } from '@angular/material/menu';
import { MatTooltipModule } from '@angular/material/tooltip';
import { BtnComponent } from '../btn/btn.component';
import { ImageLoaderDirective } from '../../directives/image-loader.directive';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { LoaderComponent } from '../loader/loader.component';
import { NgIf, NgClass, NgFor, NgSwitch, NgSwitchCase, NgSwitchDefault, AsyncPipe, TitleCasePipe } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../../services/utility.service";
import * as i3 from "@angular/material/table";
import * as i4 from "@angular/material/checkbox";
import * as i5 from "@angular/material/tooltip";
import * as i6 from "@angular/material/menu";
import * as i7 from "@angular/material/icon";
import * as i8 from "@angular/material/paginator";
export class TableHttpsComponent extends TablePlainComponent {
    set _queryData(v) {
        this.queryData = v;
    }
    constructor(route, uS) {
        super(uS);
        this.route = route;
        this.uS = uS;
        this.pageNumber = 0;
        this.isLoadingResults = true;
        this.isRateLimitReached = false;
        this.fetchedData = new BehaviorSubject(null);
        this.form2 = new FormGroup({
            page: new FormControl(1),
            sortByField: new FormControl(),
            sortByDirection: new FormControl(this.orderDirection == 'asc'
                ? 'ASC'
                : this.orderDirection == 'desc'
                    ? 'DESC'
                    : ''),
            limit: new FormControl(),
        });
        this.searchTrigger = new ReplaySubject();
    }
    ngOnInit() {
        super.ngOnInit();
    }
    ngAfterViewInit() {
        this.queryData = this.queryData || {};
        // this.queryData = this.queryData || this.route.snapshot.queryParams;
        // debugger;
        this.paginator.page.subscribe((r) => {
            this.form2.patchValue({
                page: r.pageIndex + 1,
                limit: r.pageSize,
            });
        });
        this.sort?.sortChange.subscribe((r) => {
            this.form2.patchValue({
                sortByDirection: r.direction,
                sortByField: r.active,
            });
        });
        // this.searchTrigger.subscribe(r=>{
        //   console.log(r)
        // })
        this.filteredAndPagedResults = merge(this.form2.valueChanges, this.searchTrigger).pipe(startWith({}), filter(() => !!this.observableFunc), switchMap(() => {
            this.isLoadingResults = true;
            const queryData = this.queryData;
            const pageValues = this.form2.value;
            if (!pageValues.limit)
                pageValues.limit = this.paginator?.pageSize || this.pageSize;
            this.allQuery = {
                ...queryData,
                ...pageValues,
            };
            // debugger;
            return this.observableFunc(this.allQuery);
        }), catchError((e) => of(null)), tap((r) => this.selection.clear()), map((data) => {
            // Flip flag to show that loading has finished.
            // debugger;
            // debugger;
            console.log(data);
            this.isLoadingResults = false;
            this.isRateLimitReached = false;
            this.resultsLength = data?.total;
            this.data = data?.data || [];
            this.fetchedData.next(this.data);
            // debugger
            return data?.data;
        }), catchError((e) => {
            console.error(e);
            this.isLoadingResults = false;
            this.isRateLimitReached = true;
            return observableOf([]);
        }));
        this.filteredAndPagedResults.subscribe();
    }
    search(query) {
        this.queryData = query || this.queryData;
        // this.form.controls.pageNumber.patchValue(0);
        this.resetPaging();
        this.searchTrigger.next(true);
    }
    /** Whether the number of selected elements matches the total number of rows. */
    isAllSelected() {
        const numSelected = this.selection?.selected?.length;
        const numRows = this.data?.length;
        return numSelected === numRows;
    }
    /** Selects all rows if they are not all selected; otherwise clear selection. */
    masterToggle() {
        if (this.isAllSelected()) {
            this.selection.clear();
            return;
        }
        this.selection.select(...this.data);
    }
    resetPaging() {
        this.paginator.pageIndex = 0;
        this.form2.patchValue({ page: 1 }, { emitEvent: false });
    }
    reset() { }
    refresh() {
        this.search();
    }
    setData(d) {
        this.data = cloneDeep(d);
        // this.table.renderRows();
    }
    increasePageSize() {
        // debugger
        if (this.resultsLength <= this.paginator.pageSize)
            return;
        this.paginator._changePageSize(this.paginator.pageSize + this.pageSizeIncrementor);
    }
    resetPageSize() {
        this.paginator._changePageSize(this.pageSize);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: TableHttpsComponent, deps: [{ token: i1.ActivatedRoute }, { token: i2.UtilityService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.2", type: TableHttpsComponent, isStandalone: true, selector: "table-https", inputs: { header: "header", noDataSubTitle: "noDataSubTitle", headerBtns: "headerBtns", _queryData: ["queryData", "_queryData"], observableFunc: "observableFunc", pageNumber: "pageNumber" }, viewQueries: [{ propertyName: "table", first: true, predicate: ["table"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"h-100 \">\n  <div class=\"d-flex align-items-center justify-content-between mb-3\" *ngIf=\"header||headerBtns\">\n    <div class=\"title\">\n      {{header}}\n    </div>\n  </div>\n  <loader class=\"h-100\" [loading]=\"isLoadingResults\" [height]=\"container?.offsetHeight+100\"\n    [hasContent]=\"!!data?.length\">\n    <div class=\"table-container\" content #container>\n      <div class=\"overflow-auto \">\n        <table mat-table [dataSource]=\"data\" class=\"w-100 d-table\" [ngClass]=\"{smallerFonts,nowrap,centerCells,curvy}\"\n          #table>\n          <!-- Checkbox Column -->\n          <ng-container matColumnDef=\"mselect\" sticky>\n            <th mat-header-cell *matHeaderCellDef>\n              <mat-checkbox class=\"circle-checkbox\" (change)=\"$event ? masterToggle() : null\"\n                [checked]=\"selection.hasValue() && isAllSelected()\"\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n              </mat-checkbox>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n              <mat-checkbox class=\"circle-checkbox\" (click)=\"$event.stopPropagation()\"\n                (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                [aria-label]=\"checkboxLabel(row)\">\n              </mat-checkbox>\n            </td>\n          </ng-container>\n\n          <!-- COLUMNS -->\n          <ng-container *ngFor=\"let col of displayedColumns; let i = index\">\n            <ng-container [ngSwitch]=\"col.type\">\n              <!-- IMAGE -->\n              <ng-container *ngSwitchCase=\"'image'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t|titlecase}}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <img [imageLoader]=\"row[col.f]\" alt=\"{{col.f}} image\" class=\"{{col.itemClass}}\">\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- Button -->\n              <ng-container *ngSwitchCase=\"'button'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t|titlecase}}\n                </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"btn-cell\">\n                  <app-btn [icon]=\"col.btn?.icon\" [type]=\"col.btn?.type\" (mclick)=\"clickBtn(col,row)\"\n                    [help]=\"col.btn?.help\" [text]=\"col.btn?.label\" [loading]=\"col.btn?.loading\"\n                    [iconBtn]=\"col.btn?.iconBtn\" mclass=\"w-auto\" [disabled]=\"col.btn?.disabled || col.btn?.loading\">\n                  </app-btn>\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- ACTION COLUMNS -->\n              <ng-container [sticky]=\"col.isSticky\" [stickyEnd]=\"col.isStickyEnd\" matColumnDef=\"{{ col.f|toAny }}\"\n                *ngSwitchCase=\"'btns'\">\n                <th mat-header-cell *matHeaderCellDef class=\"btn-cell\">\n                  {{ col.t | titlecase }}\n                </th>\n                <td mat-cell *matCellDef=\"let row;let i=index\" class=\"btn-cell\">\n                  <div class=\"d-flex col-md-auto col-sm-auto \">\n\n                    <div class=\"mx-2\" *ngFor=\"let button of col.buttons\">\n                      <app-btn [icon]=\"button.icon\" [help]=\"button.help\" [showHelpIcon]=\"button.showHelpIcon\"\n                        [type]=\"button.type\" [group]=\"button.group\" [iconBtn]=\"true\" mclass=\"w-auto\"\n                        (mclick)=\"button.action(row,i)\"></app-btn>\n                    </div>\n\n\n\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Sub Table -->\n              <ng-container [sticky]=\"col.isSticky\" *ngSwitchCase=\"'table'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t|titlecase}}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <app-btn [icon]=\"col.btn?.icon\" type=\"dark\" (mclick)=\"col.action ? col.action(row, col.f) : null\"\n                    [help]=\"col.subTable|tableToString:row| async\" [showHelpIcon]=\"false\" [iconBtn]=\"true\"\n                    mclass=\"w-auto\">\n                  </app-btn>\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- ASSIGN FROM LIST -->\n              <ng-container [sticky]=\"col.isSticky\" matColumnDef=\"{{ col.f|toAny }}\" *ngSwitchCase=\"'assign-from-list'\">\n                <th mat-header-cell *matHeaderCellDef disableClear>\n                  {{formatColumnHeaders?(col.t|titlecase):col.t }}</th>\n                <td mat-cell *matCellDef=\"let row;let rowIndex = index\">\n                  <ng-container *ngIf=\"(row|getColFormatted:col)|async as val; else elseTemplate\">\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"val\" #ele [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"val|valueOrX\">\n                    </div>\n                  </ng-container>\n                  <ng-template #elseTemplate>\n                    <div [matMenuTriggerFor]=\"assignList\" class=\"text-primary pointer\" \n                      #assignTag>\n                      Assign\n                    </div>\n                    <mat-menu #assignList=\"matMenu\" class=\"\">\n                      <mini-search-list (click)=\"$event.stopPropagation()\" #mslTag (done)=\"col.onSelected($event,row,rowIndex)\"\n                        [list]=\"(col.listingFunction|functionCaller1:row)|async\"\n                        [header]=\"formatColumnHeaders?(col.t|titlecase):col.t\" />\n                    </mat-menu>\n                  </ng-template>\n\n\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- DEFAULT -->\n              <ng-container [sticky]=\"col.isSticky\" matColumnDef=\"{{ col.f|toAny }}\" *ngSwitchDefault>\n                <th mat-header-cell *matHeaderCellDef disableClear>\n                  {{formatColumnHeaders?(col.t|titlecase):col.t }}</th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <ng-container *ngIf=\"col.routeFormatter; else elseNoRouteTemplate\">\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </div>\n                  </ng-container>\n                  <ng-template #elseNoRouteTemplate>\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </div>\n                  </ng-template>\n\n\n                </td>\n              </ng-container>\n              <!--// -->\n            </ng-container>\n          </ng-container>\n          <!--// -->\n          <!-- OPTIONS COLUMN -->\n          <ng-container matColumnDef=\"option\" *ngIf=\"options?.length>0||optionsMap\" stickyEnd>\n            <th mat-header-cell class=\"lastStickyItem w-auto\" *matHeaderCellDef disableClear></th>\n            <td mat-cell class=\"lastStickyItem w-auto\" *matCellDef=\"let row\">\n              <ng-container *ngIf=\"optionsMap; else elseOptionsTemplate\">\n                <ng-container *ngIf=\"(optionsMap|functionCaller1:row) as _rowoptions\">\n                  <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                    <mat-icon>more_vert</mat-icon>\n                  </app-btn>\n                  <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item *ngFor=\"let option of _rowoptions\" (click)=\"option.action(row)\">\n                      {{optionLabeller|functionCaller2:option:row}}\n                    </button>\n                  </mat-menu>\n                </ng-container>\n              </ng-container>\n              <ng-template #elseOptionsTemplate>\n                <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                  <mat-icon>more_vert</mat-icon>\n                </app-btn>\n                <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item *ngFor=\"let option of options\" (click)=\"option.action(row)\">\n                    {{optionLabeller|functionCaller2:option:row}}\n                  </button>\n                </mat-menu>\n              </ng-template>\n            </td>\n          </ng-container>\n          <!--// -->\n\n\n\n          <ng-container *ngIf=\"displayedColumns|getRawFields:(!!options?.length||!!optionsMap):useSelection as dcols\">\n            <tr mat-header-row *matHeaderRowDef=\"dcols\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: dcols\"\n              [ngClass]=\"{pointer:showRowPointer,selected:selection.isSelected(row),disabled:isDisabledFunc?isDisabledFunc(row):false}\"\n              [matTooltip]=\"isDisabledFunc&&isDisabledFunc(row)?'Disabled':null\" (click)=\"rowClick(row)\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\" [attr.colspan]=\"dcols?.length||1\">{{noItemTxt}}</td>\n            </tr>\n          </ng-container>\n        </table>\n      </div>\n\n\n      <mat-paginator mresponsiveness [hideMobile]=\"true\" [length]=\"resultsLength\" [pageSizeOptions]=\"pageSizeOptions\"\n        [pageSize]=\"pageSize\" showFirstLastButtons />\n\n      <div class=\"  \" mresponsiveness [hideDesktop]=\"true\">\n        <div class=\" d-flex justify-content-center\">\n          <app-btn text=\"See more\" type=\"clear-pm\" (mclick)=\"increasePageSize()\"\n            *ngIf=\"resultsLength>paginator?.pageSize;else showLess\" />\n          <ng-template #showLess>\n            <app-btn text=\"See less\" type=\"clear-pm\" (mclick)=\"resetPageSize()\" />\n          </ng-template>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"h-100 center text-center noContent\" noContent>\n      <div class=\"\">\n        <div class=\"title\"> No data\n        </div>\n        <div class=\"sub-title\">\n          {{noDataSubTitle}}\n        </div>\n      </div>\n    </div>\n  </loader>\n</div>", styles: ["::ng-deep mat-paginator .mat-mdc-form-field{width:100px;height:25px;margin-top:0;margin-bottom:0;background-color:transparent!important;border:none}::ng-deep mat-paginator .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{height:auto;padding:0;color:var(--primary)}::ng-deep .mdc-data-table__header-cell{color:#333!important;background-color:transparent!important;font-style:normal;font-weight:600;font-size:14px;line-height:19px}::ng-deep mat-paginator{border-radius:0 0 16px 16px}::ng-deep .mat-mdc-table{background:rgba(255,255,255,0)}::ng-deep .mat-mdc-table .mat-mdc-row:hover,::ng-deep .mat-mdc-table .mat-mdc-footer-row:hover{background-color:inherit}::ng-deep .mat-mdc-table .mat-mdc-row.selected:hover,::ng-deep .mat-mdc-table .mat-mdc-footer-row.selected:hover{background-color:#f0f6ff}::ng-deep th.mat-mdc-table-sticky,::ng-deep td.mat-mdc-table-sticky{background-color:#fff!important}::ng-deep .colour{height:15px;width:15px;display:inline-block;border-radius:5px}::ng-deep .centerCells .mat-sort-header-container{justify-content:center}::ng-deep .default.colour{background-color:#545454}::ng-deep .btn-cell{width:1%}::ng-deep .mat-sort-header-container{height:40px}.mat-header-cell{font-weight:600;font-size:14px;line-height:21px}.smallerFonts td,.smallerFonts th{font-size:.7rem}.nowrap td,.nowrap th{white-space:nowrap;text-align:left;padding:0 24px;border-radius:16px}.nowrap td{border-radius:0}:host ::ng-deep input[type=checkbox]:not(.form-control){border:1px solid rgba(80,78,245,.3019607843)}.table tr td:hover{color:unset!important;text-decoration:unset;cursor:unset}tr.mat-header-row{height:auto}.centerCells td{text-align:center}.curvy tr{border-radius:0 10px}.title{font-style:normal;font-weight:600;font-size:24px;line-height:29px;color:#333}.table-container{background:#ffffff;border:1px solid #e0e0e0;box-shadow:none;border-radius:16px}.table-container .mat-paginator,.table-container .mat-table{background:transparent}.mat-header-cell{color:#333;background-color:transparent}.cell.notLink:hover{color:inherit}.cell{text-overflow:ellipsis;display:block;white-space:nowrap;overflow:hidden;font-style:normal;font-weight:400;font-size:14px;line-height:19px;color:#333}.noContent .title{font-style:normal;font-weight:600;font-size:14px;line-height:18px;text-align:center;color:#266dd3}.noContent .sub-title{font-style:normal;font-weight:400;font-size:12px;line-height:18px;text-align:center;width:206px;color:#828282}.table{border:1px solid #f2f2f2;border-radius:16px}.selected{background:#f0f6ff;background-color:#f0f6ff}.disabled .cell{font-style:normal;font-weight:400;font-size:14px;line-height:19px;color:#bdbdbd}.lastStickyItem{padding:0!important;background-image:linear-gradient(270deg,rgb(255,255,255),rgba(255,255,255,.7490196078))!important;border-radius:0!important}th.lastStickyItem{background:transparent!important}.link{color:var(--primary)}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: LoaderComponent, selector: "loader", inputs: ["class", "text", "hasContent", "loading", "height"] }, { kind: "ngmodule", type: MatTableModule }, { kind: "component", type: i3.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { kind: "directive", type: i3.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i3.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { kind: "directive", type: i3.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i3.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i3.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }, { kind: "directive", type: i3.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i3.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "component", type: i3.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { kind: "component", type: i3.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { kind: "directive", type: i3.MatNoDataRow, selector: "ng-template[matNoDataRow]" }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "ngmodule", type: MatCheckboxModule }, { kind: "component", type: i4.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex"], exportAs: ["matCheckbox"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: ImageLoaderDirective, selector: "[imageLoader]", inputs: ["imageLoader", "imgType"] }, { kind: "component", type: BtnComponent, selector: "app-btn,btn", inputs: ["formSchema", "icon", "type", "group", "actionType", "animate", "badge", "class", "customIcon", "disabled", "form", "help", "iconBtn", "lite", "loading", "mclass", "showHelpIcon", "mini", "text", "valid", "subButtons", "onFormInvalid"], outputs: ["mclick"] }, { kind: "ngmodule", type: MatTooltipModule }, { kind: "directive", type: i5.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "ngmodule", type: MatMenuModule }, { kind: "component", type: i6.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { kind: "component", type: i6.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }, { kind: "directive", type: i6.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { kind: "component", type: MiniSearchListComponent, selector: "mini-search-list", inputs: ["list", "labelField", "valueField", "header"], outputs: ["done"] }, { kind: "directive", type: NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i7.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "ngmodule", type: MatPaginatorModule }, { kind: "component", type: i8.MatPaginator, selector: "mat-paginator", inputs: ["disabled"], exportAs: ["matPaginator"] }, { kind: "directive", type: ResponsivenessDirective, selector: "[mresponsiveness]", inputs: ["mobileClass", "desktopClass", "hideMobile", "hideDesktop"] }, { kind: "directive", type: hideMobileDirective, selector: "[hideMobile]" }, { kind: "directive", type: hideDesktopDirective, selector: "[hideDesktop]" }, { kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "pipe", type: TitleCasePipe, name: "titlecase" }, { kind: "pipe", type: GetColFormattedPipe, name: "getColFormatted" }, { kind: "pipe", type: GetRawFieldsPipe, name: "getRawFields" }, { kind: "pipe", type: TableToStringPipe, name: "tableToString" }, { kind: "pipe", type: FunctionCaller1, name: "functionCaller1" }, { kind: "pipe", type: FunctionCaller2, name: "functionCaller2" }, { kind: "pipe", type: ToAnyPipe, name: "toAny" }, { kind: "pipe", type: ValueOrXPipe, name: "valueOrX" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: TableHttpsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'table-https', standalone: true, imports: [
                        NgIf,
                        LoaderComponent,
                        MatTableModule,
                        NgClass,
                        MatCheckboxModule,
                        NgFor,
                        NgSwitch,
                        NgSwitchCase,
                        ImageLoaderDirective,
                        BtnComponent,
                        MatTooltipModule,
                        MatMenuModule,
                        MiniSearchListComponent,
                        NgSwitchDefault,
                        MatIconModule,
                        MatPaginatorModule,
                        ResponsivenessDirective,
                        hideMobileDirective,
                        hideDesktopDirective,
                        AsyncPipe,
                        TitleCasePipe,
                        GetColFormattedPipe,
                        GetRawFieldsPipe,
                        TableToStringPipe,
                        FunctionCaller1,
                        FunctionCaller2,
                        ToAnyPipe,
                        ValueOrXPipe,
                    ], template: "<div class=\"h-100 \">\n  <div class=\"d-flex align-items-center justify-content-between mb-3\" *ngIf=\"header||headerBtns\">\n    <div class=\"title\">\n      {{header}}\n    </div>\n  </div>\n  <loader class=\"h-100\" [loading]=\"isLoadingResults\" [height]=\"container?.offsetHeight+100\"\n    [hasContent]=\"!!data?.length\">\n    <div class=\"table-container\" content #container>\n      <div class=\"overflow-auto \">\n        <table mat-table [dataSource]=\"data\" class=\"w-100 d-table\" [ngClass]=\"{smallerFonts,nowrap,centerCells,curvy}\"\n          #table>\n          <!-- Checkbox Column -->\n          <ng-container matColumnDef=\"mselect\" sticky>\n            <th mat-header-cell *matHeaderCellDef>\n              <mat-checkbox class=\"circle-checkbox\" (change)=\"$event ? masterToggle() : null\"\n                [checked]=\"selection.hasValue() && isAllSelected()\"\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n              </mat-checkbox>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n              <mat-checkbox class=\"circle-checkbox\" (click)=\"$event.stopPropagation()\"\n                (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                [aria-label]=\"checkboxLabel(row)\">\n              </mat-checkbox>\n            </td>\n          </ng-container>\n\n          <!-- COLUMNS -->\n          <ng-container *ngFor=\"let col of displayedColumns; let i = index\">\n            <ng-container [ngSwitch]=\"col.type\">\n              <!-- IMAGE -->\n              <ng-container *ngSwitchCase=\"'image'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t|titlecase}}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <img [imageLoader]=\"row[col.f]\" alt=\"{{col.f}} image\" class=\"{{col.itemClass}}\">\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- Button -->\n              <ng-container *ngSwitchCase=\"'button'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t|titlecase}}\n                </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"btn-cell\">\n                  <app-btn [icon]=\"col.btn?.icon\" [type]=\"col.btn?.type\" (mclick)=\"clickBtn(col,row)\"\n                    [help]=\"col.btn?.help\" [text]=\"col.btn?.label\" [loading]=\"col.btn?.loading\"\n                    [iconBtn]=\"col.btn?.iconBtn\" mclass=\"w-auto\" [disabled]=\"col.btn?.disabled || col.btn?.loading\">\n                  </app-btn>\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- ACTION COLUMNS -->\n              <ng-container [sticky]=\"col.isSticky\" [stickyEnd]=\"col.isStickyEnd\" matColumnDef=\"{{ col.f|toAny }}\"\n                *ngSwitchCase=\"'btns'\">\n                <th mat-header-cell *matHeaderCellDef class=\"btn-cell\">\n                  {{ col.t | titlecase }}\n                </th>\n                <td mat-cell *matCellDef=\"let row;let i=index\" class=\"btn-cell\">\n                  <div class=\"d-flex col-md-auto col-sm-auto \">\n\n                    <div class=\"mx-2\" *ngFor=\"let button of col.buttons\">\n                      <app-btn [icon]=\"button.icon\" [help]=\"button.help\" [showHelpIcon]=\"button.showHelpIcon\"\n                        [type]=\"button.type\" [group]=\"button.group\" [iconBtn]=\"true\" mclass=\"w-auto\"\n                        (mclick)=\"button.action(row,i)\"></app-btn>\n                    </div>\n\n\n\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Sub Table -->\n              <ng-container [sticky]=\"col.isSticky\" *ngSwitchCase=\"'table'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t|titlecase}}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <app-btn [icon]=\"col.btn?.icon\" type=\"dark\" (mclick)=\"col.action ? col.action(row, col.f) : null\"\n                    [help]=\"col.subTable|tableToString:row| async\" [showHelpIcon]=\"false\" [iconBtn]=\"true\"\n                    mclass=\"w-auto\">\n                  </app-btn>\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- ASSIGN FROM LIST -->\n              <ng-container [sticky]=\"col.isSticky\" matColumnDef=\"{{ col.f|toAny }}\" *ngSwitchCase=\"'assign-from-list'\">\n                <th mat-header-cell *matHeaderCellDef disableClear>\n                  {{formatColumnHeaders?(col.t|titlecase):col.t }}</th>\n                <td mat-cell *matCellDef=\"let row;let rowIndex = index\">\n                  <ng-container *ngIf=\"(row|getColFormatted:col)|async as val; else elseTemplate\">\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"val\" #ele [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"val|valueOrX\">\n                    </div>\n                  </ng-container>\n                  <ng-template #elseTemplate>\n                    <div [matMenuTriggerFor]=\"assignList\" class=\"text-primary pointer\" \n                      #assignTag>\n                      Assign\n                    </div>\n                    <mat-menu #assignList=\"matMenu\" class=\"\">\n                      <mini-search-list (click)=\"$event.stopPropagation()\" #mslTag (done)=\"col.onSelected($event,row,rowIndex)\"\n                        [list]=\"(col.listingFunction|functionCaller1:row)|async\"\n                        [header]=\"formatColumnHeaders?(col.t|titlecase):col.t\" />\n                    </mat-menu>\n                  </ng-template>\n\n\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- DEFAULT -->\n              <ng-container [sticky]=\"col.isSticky\" matColumnDef=\"{{ col.f|toAny }}\" *ngSwitchDefault>\n                <th mat-header-cell *matHeaderCellDef disableClear>\n                  {{formatColumnHeaders?(col.t|titlecase):col.t }}</th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <ng-container *ngIf=\"col.routeFormatter; else elseNoRouteTemplate\">\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </div>\n                  </ng-container>\n                  <ng-template #elseNoRouteTemplate>\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </div>\n                  </ng-template>\n\n\n                </td>\n              </ng-container>\n              <!--// -->\n            </ng-container>\n          </ng-container>\n          <!--// -->\n          <!-- OPTIONS COLUMN -->\n          <ng-container matColumnDef=\"option\" *ngIf=\"options?.length>0||optionsMap\" stickyEnd>\n            <th mat-header-cell class=\"lastStickyItem w-auto\" *matHeaderCellDef disableClear></th>\n            <td mat-cell class=\"lastStickyItem w-auto\" *matCellDef=\"let row\">\n              <ng-container *ngIf=\"optionsMap; else elseOptionsTemplate\">\n                <ng-container *ngIf=\"(optionsMap|functionCaller1:row) as _rowoptions\">\n                  <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                    <mat-icon>more_vert</mat-icon>\n                  </app-btn>\n                  <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item *ngFor=\"let option of _rowoptions\" (click)=\"option.action(row)\">\n                      {{optionLabeller|functionCaller2:option:row}}\n                    </button>\n                  </mat-menu>\n                </ng-container>\n              </ng-container>\n              <ng-template #elseOptionsTemplate>\n                <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                  <mat-icon>more_vert</mat-icon>\n                </app-btn>\n                <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item *ngFor=\"let option of options\" (click)=\"option.action(row)\">\n                    {{optionLabeller|functionCaller2:option:row}}\n                  </button>\n                </mat-menu>\n              </ng-template>\n            </td>\n          </ng-container>\n          <!--// -->\n\n\n\n          <ng-container *ngIf=\"displayedColumns|getRawFields:(!!options?.length||!!optionsMap):useSelection as dcols\">\n            <tr mat-header-row *matHeaderRowDef=\"dcols\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: dcols\"\n              [ngClass]=\"{pointer:showRowPointer,selected:selection.isSelected(row),disabled:isDisabledFunc?isDisabledFunc(row):false}\"\n              [matTooltip]=\"isDisabledFunc&&isDisabledFunc(row)?'Disabled':null\" (click)=\"rowClick(row)\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\" [attr.colspan]=\"dcols?.length||1\">{{noItemTxt}}</td>\n            </tr>\n          </ng-container>\n        </table>\n      </div>\n\n\n      <mat-paginator mresponsiveness [hideMobile]=\"true\" [length]=\"resultsLength\" [pageSizeOptions]=\"pageSizeOptions\"\n        [pageSize]=\"pageSize\" showFirstLastButtons />\n\n      <div class=\"  \" mresponsiveness [hideDesktop]=\"true\">\n        <div class=\" d-flex justify-content-center\">\n          <app-btn text=\"See more\" type=\"clear-pm\" (mclick)=\"increasePageSize()\"\n            *ngIf=\"resultsLength>paginator?.pageSize;else showLess\" />\n          <ng-template #showLess>\n            <app-btn text=\"See less\" type=\"clear-pm\" (mclick)=\"resetPageSize()\" />\n          </ng-template>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"h-100 center text-center noContent\" noContent>\n      <div class=\"\">\n        <div class=\"title\"> No data\n        </div>\n        <div class=\"sub-title\">\n          {{noDataSubTitle}}\n        </div>\n      </div>\n    </div>\n  </loader>\n</div>", styles: ["::ng-deep mat-paginator .mat-mdc-form-field{width:100px;height:25px;margin-top:0;margin-bottom:0;background-color:transparent!important;border:none}::ng-deep mat-paginator .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{height:auto;padding:0;color:var(--primary)}::ng-deep .mdc-data-table__header-cell{color:#333!important;background-color:transparent!important;font-style:normal;font-weight:600;font-size:14px;line-height:19px}::ng-deep mat-paginator{border-radius:0 0 16px 16px}::ng-deep .mat-mdc-table{background:rgba(255,255,255,0)}::ng-deep .mat-mdc-table .mat-mdc-row:hover,::ng-deep .mat-mdc-table .mat-mdc-footer-row:hover{background-color:inherit}::ng-deep .mat-mdc-table .mat-mdc-row.selected:hover,::ng-deep .mat-mdc-table .mat-mdc-footer-row.selected:hover{background-color:#f0f6ff}::ng-deep th.mat-mdc-table-sticky,::ng-deep td.mat-mdc-table-sticky{background-color:#fff!important}::ng-deep .colour{height:15px;width:15px;display:inline-block;border-radius:5px}::ng-deep .centerCells .mat-sort-header-container{justify-content:center}::ng-deep .default.colour{background-color:#545454}::ng-deep .btn-cell{width:1%}::ng-deep .mat-sort-header-container{height:40px}.mat-header-cell{font-weight:600;font-size:14px;line-height:21px}.smallerFonts td,.smallerFonts th{font-size:.7rem}.nowrap td,.nowrap th{white-space:nowrap;text-align:left;padding:0 24px;border-radius:16px}.nowrap td{border-radius:0}:host ::ng-deep input[type=checkbox]:not(.form-control){border:1px solid rgba(80,78,245,.3019607843)}.table tr td:hover{color:unset!important;text-decoration:unset;cursor:unset}tr.mat-header-row{height:auto}.centerCells td{text-align:center}.curvy tr{border-radius:0 10px}.title{font-style:normal;font-weight:600;font-size:24px;line-height:29px;color:#333}.table-container{background:#ffffff;border:1px solid #e0e0e0;box-shadow:none;border-radius:16px}.table-container .mat-paginator,.table-container .mat-table{background:transparent}.mat-header-cell{color:#333;background-color:transparent}.cell.notLink:hover{color:inherit}.cell{text-overflow:ellipsis;display:block;white-space:nowrap;overflow:hidden;font-style:normal;font-weight:400;font-size:14px;line-height:19px;color:#333}.noContent .title{font-style:normal;font-weight:600;font-size:14px;line-height:18px;text-align:center;color:#266dd3}.noContent .sub-title{font-style:normal;font-weight:400;font-size:12px;line-height:18px;text-align:center;width:206px;color:#828282}.table{border:1px solid #f2f2f2;border-radius:16px}.selected{background:#f0f6ff;background-color:#f0f6ff}.disabled .cell{font-style:normal;font-weight:400;font-size:14px;line-height:19px;color:#bdbdbd}.lastStickyItem{padding:0!important;background-image:linear-gradient(270deg,rgb(255,255,255),rgba(255,255,255,.7490196078))!important;border-radius:0!important}th.lastStickyItem{background:transparent!important}.link{color:var(--primary)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.UtilityService }]; }, propDecorators: { header: [{
                type: Input
            }], noDataSubTitle: [{
                type: Input
            }], headerBtns: [{
                type: Input
            }], _queryData: [{
                type: Input,
                args: ['queryData']
            }], observableFunc: [{
                type: Input
            }], pageNumber: [{
                type: Input
            }], table: [{
                type: ViewChild,
                args: ['table']
            }] } });
//# sourceMappingURL=data:application/json;base64,