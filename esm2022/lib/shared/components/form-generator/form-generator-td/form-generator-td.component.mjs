import { Component, EventEmitter, Input, Output } from '@angular/core';
import { InputTD_RFComponent } from '../../input/input-td-rf.component';
import { FormGeneratorComponent } from '../form-generator.component';
import { FunctionCaller2, ToAnyPipe } from '../../../pipes/utility.pipe';
import { BtnComponent } from '../../btn/btn.component';
import { FormsModule } from '@angular/forms';
import { FeedbackCardComponent } from '../../feedback-card/feedback-card.component';
import { NgIf, NgClass, NgFor, AsyncPipe } from '@angular/common';
import { ResponseCardComponent } from '../../response-card/response-card.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class FormGeneratorTdComponent extends FormGeneratorComponent {
    constructor() {
        super(...arguments);
        this._valuesChange = new EventEmitter();
    }
    onChange(field, inp) {
        super.onChange(field, inp);
        this._valuesChange.emit({ form: this.formSchema });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: FormGeneratorTdComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.2", type: FormGeneratorTdComponent, isStandalone: true, selector: "form-generator-td", inputs: { header: "header", showDivider: "showDivider", subTitle: "subTitle" }, outputs: { _valuesChange: "valuesChange" }, usesInheritance: true, ngImport: i0, template: "<response-card #rc [status]=\"1\" [header]=\"responseHeader\" [hidden]=\"hideResponseCard||!hasResponse ||errorMessage\">\n    <ng-content select=\"[response]\"></ng-content>\n</response-card>\n<feedback-card #fc [message]=\"errorMessage\" *ngIf=\"errorMessage\"></feedback-card>\n<form [hidden]=\"!hideResponseCard && hasResponse && !errorMessage\">\n    <hr class=\"divider \" *ngIf=\"showDivider\">\n    <div class=\"title mt-16\" [hidden]=\"!header\">\n        {{header}}\n    </div>\n    <div class=\"sub-title\" [hidden]=\"!subTitle\">{{subTitle}}\n    </div>\n    <div [ngClass]=\"{'mt-16':header||subTitle}\"\n        class=\" form-grid row row-cols-{{gridStyle}} row-cols-md-{{gridMDStyle}} row-cols-xxl-{{gridXXLStyle}} align-items-center\">\n        <ng-container *ngFor=\"let scheme of formSchema;trackBy:uS.trackByID\">\n            <div class=\"col {{scheme.cls}} \" *ngIf=\"!scheme.hideIfFunc || !scheme.hideIfFunc(formSchema)\">\n                <app-input-td-rf #formField [(model)]=\"scheme.value\" [name]=\"scheme.field\"\n                    [clearOnDisable]=\"scheme.clearOnDisable\" [type]=\"scheme.type\" [valueField]=\"scheme.valueField\"\n                    [autoPickValueField]=\"scheme.autoPickValueField\" [labelType]=\"scheme.labelType\"\n                    [checked]=\"scheme.checked\" [showValidation]=\"scheme.showValidation\" [icon]=\"scheme.icon\"\n                    [noFormat]=\"scheme.noFormat\" [showValidationIcon]=\"scheme.showValidationIcon\"\n                    [labelField]=\"scheme.labelField\" [optionFormatter]=\"scheme.optionFormatter\"\n                    (mchange)=\"onChange(scheme,formField)\"\n                    [options]=\"(scheme.optionsFunc|functionCaller2:formSchema:scheme.field|async)||scheme.options||optionsMap[scheme.field|toAny]\"\n                    [decimalPoints]=\"scheme.decimalPoints\" [hint]=\"scheme.hint\" [max]=\"scheme.max\" [min]=\"scheme.min\"\n                    [placeholder]=\"scheme.placeholder\" [label]=\"scheme.label\"\n                    [disabled]=\"scheme.disabled||(scheme.disabledIf|functionCaller2:formSchema:scheme.field)\">\n                </app-input-td-rf>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"sub-btn\" *ngIf=\"showSubmitBtn\">\n        <app-btn [text]=\"submitBtnText\" group=\"submit\" [form]=\"submitForm||form\" [loading]=\"loading\"\n            (mclick)=\"submit(rc)\">\n        </app-btn>\n    </div>\n</form>", styles: [".title{font-style:normal;font-weight:600;font-size:14px;line-height:18px;color:#333}.sub-title{font-style:normal;font-weight:400;font-size:14px;line-height:18px;color:#828282}.option-title{font-style:normal;font-weight:500;font-size:14px;line-height:18px;display:flex;align-items:center;color:#333}.option-desc{font-style:normal;font-weight:400;font-size:14px;line-height:18px;display:flex;align-items:center;color:#828282}\n"], dependencies: [{ kind: "component", type: ResponseCardComponent, selector: "response-card", inputs: ["header", "showResponse", "status"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: FeedbackCardComponent, selector: "feedback-card", inputs: ["class", "message", "status"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i1.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: InputTD_RFComponent, selector: "app-input-td-rf", inputs: ["validators", "asyncValidators", "form", "model", "disabled"], outputs: ["modelChange"] }, { kind: "component", type: BtnComponent, selector: "app-btn,btn", inputs: ["formSchema", "icon", "type", "group", "actionType", "animate", "badge", "class", "customIcon", "disabled", "form", "help", "iconBtn", "lite", "loading", "mclass", "showHelpIcon", "mini", "text", "valid", "subButtons", "onFormInvalid"], outputs: ["mclick"] }, { kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "pipe", type: FunctionCaller2, name: "functionCaller2" }, { kind: "pipe", type: ToAnyPipe, name: "toAny" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: FormGeneratorTdComponent, decorators: [{
            type: Component,
            args: [{ selector: 'form-generator-td', standalone: true, imports: [
                        ResponseCardComponent,
                        NgIf,
                        FeedbackCardComponent,
                        FormsModule,
                        NgClass,
                        NgFor,
                        InputTD_RFComponent,
                        BtnComponent,
                        AsyncPipe,
                        FunctionCaller2,
                        ToAnyPipe,
                    ], template: "<response-card #rc [status]=\"1\" [header]=\"responseHeader\" [hidden]=\"hideResponseCard||!hasResponse ||errorMessage\">\n    <ng-content select=\"[response]\"></ng-content>\n</response-card>\n<feedback-card #fc [message]=\"errorMessage\" *ngIf=\"errorMessage\"></feedback-card>\n<form [hidden]=\"!hideResponseCard && hasResponse && !errorMessage\">\n    <hr class=\"divider \" *ngIf=\"showDivider\">\n    <div class=\"title mt-16\" [hidden]=\"!header\">\n        {{header}}\n    </div>\n    <div class=\"sub-title\" [hidden]=\"!subTitle\">{{subTitle}}\n    </div>\n    <div [ngClass]=\"{'mt-16':header||subTitle}\"\n        class=\" form-grid row row-cols-{{gridStyle}} row-cols-md-{{gridMDStyle}} row-cols-xxl-{{gridXXLStyle}} align-items-center\">\n        <ng-container *ngFor=\"let scheme of formSchema;trackBy:uS.trackByID\">\n            <div class=\"col {{scheme.cls}} \" *ngIf=\"!scheme.hideIfFunc || !scheme.hideIfFunc(formSchema)\">\n                <app-input-td-rf #formField [(model)]=\"scheme.value\" [name]=\"scheme.field\"\n                    [clearOnDisable]=\"scheme.clearOnDisable\" [type]=\"scheme.type\" [valueField]=\"scheme.valueField\"\n                    [autoPickValueField]=\"scheme.autoPickValueField\" [labelType]=\"scheme.labelType\"\n                    [checked]=\"scheme.checked\" [showValidation]=\"scheme.showValidation\" [icon]=\"scheme.icon\"\n                    [noFormat]=\"scheme.noFormat\" [showValidationIcon]=\"scheme.showValidationIcon\"\n                    [labelField]=\"scheme.labelField\" [optionFormatter]=\"scheme.optionFormatter\"\n                    (mchange)=\"onChange(scheme,formField)\"\n                    [options]=\"(scheme.optionsFunc|functionCaller2:formSchema:scheme.field|async)||scheme.options||optionsMap[scheme.field|toAny]\"\n                    [decimalPoints]=\"scheme.decimalPoints\" [hint]=\"scheme.hint\" [max]=\"scheme.max\" [min]=\"scheme.min\"\n                    [placeholder]=\"scheme.placeholder\" [label]=\"scheme.label\"\n                    [disabled]=\"scheme.disabled||(scheme.disabledIf|functionCaller2:formSchema:scheme.field)\">\n                </app-input-td-rf>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"sub-btn\" *ngIf=\"showSubmitBtn\">\n        <app-btn [text]=\"submitBtnText\" group=\"submit\" [form]=\"submitForm||form\" [loading]=\"loading\"\n            (mclick)=\"submit(rc)\">\n        </app-btn>\n    </div>\n</form>", styles: [".title{font-style:normal;font-weight:600;font-size:14px;line-height:18px;color:#333}.sub-title{font-style:normal;font-weight:400;font-size:14px;line-height:18px;color:#828282}.option-title{font-style:normal;font-weight:500;font-size:14px;line-height:18px;display:flex;align-items:center;color:#333}.option-desc{font-style:normal;font-weight:400;font-size:14px;line-height:18px;display:flex;align-items:center;color:#828282}\n"] }]
        }], propDecorators: { header: [{
                type: Input
            }], showDivider: [{
                type: Input
            }], subTitle: [{
                type: Input
            }], _valuesChange: [{
                type: Output,
                args: ['valuesChange']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1nZW5lcmF0b3ItdGQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaGVybGhheS1oZWxwZXJzL3NyYy9saWIvc2hhcmVkL2NvbXBvbmVudHMvZm9ybS1nZW5lcmF0b3IvZm9ybS1nZW5lcmF0b3ItdGQvZm9ybS1nZW5lcmF0b3ItdGQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaGVybGhheS1oZWxwZXJzL3NyYy9saWIvc2hhcmVkL2NvbXBvbmVudHMvZm9ybS1nZW5lcmF0b3IvZm9ybS1nZW5lcmF0b3ItdGQvZm9ybS1nZW5lcmF0b3ItdGQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sRUFDUCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDcEYsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDOzs7QUFzQnBGLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxzQkFBc0I7SUFuQnBFOztRQXVCMEIsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFFcEQsQ0FBQztLQU1OO0lBSlUsUUFBUSxDQUFDLEtBQWtCLEVBQUUsR0FBdUI7UUFDM0QsS0FBSyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUMsR0FBRyxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDckQsQ0FBQzs4R0FYVSx3QkFBd0I7a0dBQXhCLHdCQUF3QixnT0NuQ3JDLDQ1RUFtQ08sbWVEYkMscUJBQXFCLHdHQUNyQixJQUFJLDZGQUNKLHFCQUFxQixpR0FDckIsV0FBVyx3ZEFDWCxPQUFPLG9GQUNQLEtBQUssbUhBQ0wsbUJBQW1CLDhKQUNuQixZQUFZLDhUQUNaLFNBQVMseUNBQ1QsZUFBZSxtREFDZixTQUFTOzsyRkFHSix3QkFBd0I7a0JBbkJwQyxTQUFTOytCQUNJLG1CQUFtQixjQUdqQixJQUFJLFdBQ1A7d0JBQ0wscUJBQXFCO3dCQUNyQixJQUFJO3dCQUNKLHFCQUFxQjt3QkFDckIsV0FBVzt3QkFDWCxPQUFPO3dCQUNQLEtBQUs7d0JBQ0wsbUJBQW1CO3dCQUNuQixZQUFZO3dCQUNaLFNBQVM7d0JBQ1QsZUFBZTt3QkFDZixTQUFTO3FCQUNaOzhCQUdNLE1BQU07c0JBQWQsS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ2tCLGFBQWE7c0JBQXBDLE1BQU07dUJBQUMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT3V0cHV0XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSW5wdXRURF9SRkNvbXBvbmVudCB9IGZyb20gJy4uLy4uL2lucHV0L2lucHV0LXRkLXJmLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3JtR2VuZXJhdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vZm9ybS1nZW5lcmF0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IEZ1bmN0aW9uQ2FsbGVyMiwgVG9BbnlQaXBlIH0gZnJvbSAnLi4vLi4vLi4vcGlwZXMvdXRpbGl0eS5waXBlJztcbmltcG9ydCB7IEJ0bkNvbXBvbmVudCB9IGZyb20gJy4uLy4uL2J0bi9idG4uY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRmVlZGJhY2tDYXJkQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vZmVlZGJhY2stY2FyZC9mZWVkYmFjay1jYXJkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZ0lmLCBOZ0NsYXNzLCBOZ0ZvciwgQXN5bmNQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFJlc3BvbnNlQ2FyZENvbXBvbmVudCB9IGZyb20gJy4uLy4uL3Jlc3BvbnNlLWNhcmQvcmVzcG9uc2UtY2FyZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSUZvcm1TY2hlbWEgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvZm9ybS1zY2hlbWEubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2Zvcm0tZ2VuZXJhdG9yLXRkJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZm9ybS1nZW5lcmF0b3ItdGQuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2Zvcm0tZ2VuZXJhdG9yLXRkLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIFJlc3BvbnNlQ2FyZENvbXBvbmVudCxcbiAgICAgICAgTmdJZixcbiAgICAgICAgRmVlZGJhY2tDYXJkQ29tcG9uZW50LFxuICAgICAgICBGb3Jtc01vZHVsZSxcbiAgICAgICAgTmdDbGFzcyxcbiAgICAgICAgTmdGb3IsXG4gICAgICAgIElucHV0VERfUkZDb21wb25lbnQsXG4gICAgICAgIEJ0bkNvbXBvbmVudCxcbiAgICAgICAgQXN5bmNQaXBlLFxuICAgICAgICBGdW5jdGlvbkNhbGxlcjIsXG4gICAgICAgIFRvQW55UGlwZSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtR2VuZXJhdG9yVGRDb21wb25lbnQgZXh0ZW5kcyBGb3JtR2VuZXJhdG9yQ29tcG9uZW50IHtcbiAgQElucHV0KCkgaGVhZGVyOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHNob3dEaXZpZGVyOiBib29sZWFuO1xuICBASW5wdXQoKSBzdWJUaXRsZTogc3RyaW5nO1xuICBAT3V0cHV0KCd2YWx1ZXNDaGFuZ2UnKSBfdmFsdWVzQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjx7XG4gICAgZm9ybTogSUZvcm1TY2hlbWFbXTtcbiAgfT4oKTtcblxuICBvdmVycmlkZSBvbkNoYW5nZShmaWVsZDogSUZvcm1TY2hlbWEsIGlucDpJbnB1dFREX1JGQ29tcG9uZW50KSB7XG4gICAgc3VwZXIub25DaGFuZ2UoZmllbGQsaW5wKTtcbiAgICB0aGlzLl92YWx1ZXNDaGFuZ2UuZW1pdCh7IGZvcm06IHRoaXMuZm9ybVNjaGVtYSB9KTtcbiAgfVxufVxuIiwiPHJlc3BvbnNlLWNhcmQgI3JjIFtzdGF0dXNdPVwiMVwiIFtoZWFkZXJdPVwicmVzcG9uc2VIZWFkZXJcIiBbaGlkZGVuXT1cImhpZGVSZXNwb25zZUNhcmR8fCFoYXNSZXNwb25zZSB8fGVycm9yTWVzc2FnZVwiPlxuICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltyZXNwb25zZV1cIj48L25nLWNvbnRlbnQ+XG48L3Jlc3BvbnNlLWNhcmQ+XG48ZmVlZGJhY2stY2FyZCAjZmMgW21lc3NhZ2VdPVwiZXJyb3JNZXNzYWdlXCIgKm5nSWY9XCJlcnJvck1lc3NhZ2VcIj48L2ZlZWRiYWNrLWNhcmQ+XG48Zm9ybSBbaGlkZGVuXT1cIiFoaWRlUmVzcG9uc2VDYXJkICYmIGhhc1Jlc3BvbnNlICYmICFlcnJvck1lc3NhZ2VcIj5cbiAgICA8aHIgY2xhc3M9XCJkaXZpZGVyIFwiICpuZ0lmPVwic2hvd0RpdmlkZXJcIj5cbiAgICA8ZGl2IGNsYXNzPVwidGl0bGUgbXQtMTZcIiBbaGlkZGVuXT1cIiFoZWFkZXJcIj5cbiAgICAgICAge3toZWFkZXJ9fVxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJzdWItdGl0bGVcIiBbaGlkZGVuXT1cIiFzdWJUaXRsZVwiPnt7c3ViVGl0bGV9fVxuICAgIDwvZGl2PlxuICAgIDxkaXYgW25nQ2xhc3NdPVwieydtdC0xNic6aGVhZGVyfHxzdWJUaXRsZX1cIlxuICAgICAgICBjbGFzcz1cIiBmb3JtLWdyaWQgcm93IHJvdy1jb2xzLXt7Z3JpZFN0eWxlfX0gcm93LWNvbHMtbWQte3tncmlkTURTdHlsZX19IHJvdy1jb2xzLXh4bC17e2dyaWRYWExTdHlsZX19IGFsaWduLWl0ZW1zLWNlbnRlclwiPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBzY2hlbWUgb2YgZm9ybVNjaGVtYTt0cmFja0J5OnVTLnRyYWNrQnlJRFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbCB7e3NjaGVtZS5jbHN9fSBcIiAqbmdJZj1cIiFzY2hlbWUuaGlkZUlmRnVuYyB8fCAhc2NoZW1lLmhpZGVJZkZ1bmMoZm9ybVNjaGVtYSlcIj5cbiAgICAgICAgICAgICAgICA8YXBwLWlucHV0LXRkLXJmICNmb3JtRmllbGQgWyhtb2RlbCldPVwic2NoZW1lLnZhbHVlXCIgW25hbWVdPVwic2NoZW1lLmZpZWxkXCJcbiAgICAgICAgICAgICAgICAgICAgW2NsZWFyT25EaXNhYmxlXT1cInNjaGVtZS5jbGVhck9uRGlzYWJsZVwiIFt0eXBlXT1cInNjaGVtZS50eXBlXCIgW3ZhbHVlRmllbGRdPVwic2NoZW1lLnZhbHVlRmllbGRcIlxuICAgICAgICAgICAgICAgICAgICBbYXV0b1BpY2tWYWx1ZUZpZWxkXT1cInNjaGVtZS5hdXRvUGlja1ZhbHVlRmllbGRcIiBbbGFiZWxUeXBlXT1cInNjaGVtZS5sYWJlbFR5cGVcIlxuICAgICAgICAgICAgICAgICAgICBbY2hlY2tlZF09XCJzY2hlbWUuY2hlY2tlZFwiIFtzaG93VmFsaWRhdGlvbl09XCJzY2hlbWUuc2hvd1ZhbGlkYXRpb25cIiBbaWNvbl09XCJzY2hlbWUuaWNvblwiXG4gICAgICAgICAgICAgICAgICAgIFtub0Zvcm1hdF09XCJzY2hlbWUubm9Gb3JtYXRcIiBbc2hvd1ZhbGlkYXRpb25JY29uXT1cInNjaGVtZS5zaG93VmFsaWRhdGlvbkljb25cIlxuICAgICAgICAgICAgICAgICAgICBbbGFiZWxGaWVsZF09XCJzY2hlbWUubGFiZWxGaWVsZFwiIFtvcHRpb25Gb3JtYXR0ZXJdPVwic2NoZW1lLm9wdGlvbkZvcm1hdHRlclwiXG4gICAgICAgICAgICAgICAgICAgIChtY2hhbmdlKT1cIm9uQ2hhbmdlKHNjaGVtZSxmb3JtRmllbGQpXCJcbiAgICAgICAgICAgICAgICAgICAgW29wdGlvbnNdPVwiKHNjaGVtZS5vcHRpb25zRnVuY3xmdW5jdGlvbkNhbGxlcjI6Zm9ybVNjaGVtYTpzY2hlbWUuZmllbGR8YXN5bmMpfHxzY2hlbWUub3B0aW9uc3x8b3B0aW9uc01hcFtzY2hlbWUuZmllbGR8dG9BbnldXCJcbiAgICAgICAgICAgICAgICAgICAgW2RlY2ltYWxQb2ludHNdPVwic2NoZW1lLmRlY2ltYWxQb2ludHNcIiBbaGludF09XCJzY2hlbWUuaGludFwiIFttYXhdPVwic2NoZW1lLm1heFwiIFttaW5dPVwic2NoZW1lLm1pblwiXG4gICAgICAgICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCJzY2hlbWUucGxhY2Vob2xkZXJcIiBbbGFiZWxdPVwic2NoZW1lLmxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgW2Rpc2FibGVkXT1cInNjaGVtZS5kaXNhYmxlZHx8KHNjaGVtZS5kaXNhYmxlZElmfGZ1bmN0aW9uQ2FsbGVyMjpmb3JtU2NoZW1hOnNjaGVtZS5maWVsZClcIj5cbiAgICAgICAgICAgICAgICA8L2FwcC1pbnB1dC10ZC1yZj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwic3ViLWJ0blwiICpuZ0lmPVwic2hvd1N1Ym1pdEJ0blwiPlxuICAgICAgICA8YXBwLWJ0biBbdGV4dF09XCJzdWJtaXRCdG5UZXh0XCIgZ3JvdXA9XCJzdWJtaXRcIiBbZm9ybV09XCJzdWJtaXRGb3JtfHxmb3JtXCIgW2xvYWRpbmddPVwibG9hZGluZ1wiXG4gICAgICAgICAgICAobWNsaWNrKT1cInN1Ym1pdChyYylcIj5cbiAgICAgICAgPC9hcHAtYnRuPlxuICAgIDwvZGl2PlxuPC9mb3JtPiJdfQ==