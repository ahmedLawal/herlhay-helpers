import { SelectionModel } from '@angular/cdk/collections';
import { Component, EventEmitter, Input, Output, ViewChild, } from '@angular/core';
import { FormGroup, FormControl } from '@angular/forms';
import { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';
import { MatSort, MatSortModule } from '@angular/material/sort';
import { MatTableDataSource, MatTableModule } from '@angular/material/table';
import { FunctionCaller1, FunctionCaller2, ToAnyPipe, ValueOrXPipe } from '../../pipes/utility.pipe';
import { GetColFormattedPipe, GetRawFieldsPipe } from './table.pipe';
import { ResponsivenessDirective, hideMobileDirective, hideDesktopDirective } from '../../directives/responsiveness.directive';
import { MatIconModule } from '@angular/material/icon';
import { MatMenuModule } from '@angular/material/menu';
import { MatTooltipModule } from '@angular/material/tooltip';
import { RouterLink } from '@angular/router';
import { BtnComponent } from '../btn/btn.component';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { NgClass, NgIf, NgFor, NgSwitch, NgSwitchCase, NgSwitchDefault, AsyncPipe, TitleCasePipe } from '@angular/common';
import { PrecentageTrendComponent } from '../precentage-trend/precentage-trend.component';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/utility.service";
import * as i2 from "@angular/material/table";
import * as i3 from "@angular/material/sort";
import * as i4 from "@angular/material/checkbox";
import * as i5 from "@angular/material/tooltip";
import * as i6 from "@angular/material/menu";
import * as i7 from "@angular/material/icon";
import * as i8 from "@angular/material/paginator";
export class TablePlainComponent {
    set _displayedColumns(value) {
        if (this.uS.isMobile)
            value.forEach((x) => (x.isSticky = false));
        this.displayedColumns = value;
    }
    set _data(v) {
        console.log(v);
        this.dataSource = new MatTableDataSource(v || []);
        // this.showPager=v?.length>this.pageSize
        if (this.showPager) {
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
        }
        this.selection?.clear();
        this.resultsLength = v?.length;
        this.mutableList = v;
    }
    constructor(uS) {
        this.uS = uS;
        this.curvy = false;
        this.formatColumnHeaders = true;
        this.idField = 'id';
        this.noItemTxt = 'There are no items';
        this.nowrap = true;
        this.orderDirection = 'asc';
        this.pageSize = this.uS.isMobile ? 5 : 10;
        this.pageSizeOptions = [5, 10, 15, 20, 50, 100, 200];
        this.placeSelectionAtRight = false; // support customizing the position of the select checkboxes.
        this.resultsLength = 0;
        this.showExport = false;
        this.showFilter = false;
        this.showPager = false;
        this.showRowPointer = false;
        this.smallerFonts = false;
        this.useSelection = false;
        this._rowClick = new EventEmitter();
        this._view = new EventEmitter();
        this.listMutated = new EventEmitter();
        this.selectionChanged = new EventEmitter();
        this.form = new FormGroup({ field: new FormControl(), value: new FormControl() });
        this.selection = new SelectionModel(true, []);
        this.emitCheckbox = new EventEmitter();
        this.pageSizeIncrementor = 10;
        this.optionLabeller = (option, row) => option?.labelFormatter ? option.labelFormatter(row) : option.t;
    }
    ngOnInit() {
        this.selection.changed.subscribe((r) => {
            this.selectionChanged.emit(r);
        });
    }
    ngAfterViewInit() {
        if (this.showPager && this.dataSource) {
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
        }
    }
    get filterOptions() {
        return this.displayedColumns.map((x) => ({ code: x.f, description: x.t }));
    }
    clearFilter() {
        this.form.reset();
    }
    outputCheckbox(field, item, value) {
        console.log(field, item, value, this.mutableList);
        const find = this.mutableList?.find((x) => x[this.idField] == item[this.idField]);
        if (find)
            find[field] = value;
        this.emitCheckbox.emit({ field, item, value });
        this.listMutated.emit(this.mutableList);
    }
    /** Whether the number of selected elements matches the total number of rows. */
    isAllSelected() {
        const numSelected = this.selection?.selected?.length;
        const numRows = this.dataSource?.data?.length;
        return numSelected === numRows;
    }
    /** Selects all rows if they are not all selected; otherwise clear selection. */
    masterToggle() {
        if (this.isAllSelected()) {
            this.selection.clear();
            return;
        }
        this.selection.select(...this.dataSource.data);
    }
    get selectedItems() {
        return this.selection.selected;
    }
    /** The label for the checkbox on the passed row */
    checkboxLabel(row) {
        if (!row) {
            return `${this.isAllSelected() ? 'deselect' : 'select'} all`;
        }
        return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;
    }
    rowClick(e) {
        this._rowClick.emit(e);
    }
    clickBtn(col, row) {
        if (col?.btn?.action)
            col.btn.action(row, col.f);
    }
    getActionStatusCallback(col) {
        return (state) => (col.btn.loading = state);
    }
    increasePageSize() {
        if (this.dataSource?.data?.length <= this.dataSource.paginator.pageSize)
            return;
        this.dataSource.paginator.pageSize =
            this.dataSource.paginator.pageSize + this.pageSizeIncrementor;
        this._data = this.mutableList;
    }
    decreasePageSize() {
        if (this.paginator.pageSize > this.pageSizeIncrementor)
            this.paginator.pageSize =
                this.paginator.pageSize - this.pageSizeIncrementor;
    }
    resetPageSize() {
        this.dataSource.paginator.pageSize = this.pageSize;
        this._data = this.mutableList;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: TablePlainComponent, deps: [{ token: i1.UtilityService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.2", type: TablePlainComponent, isStandalone: true, selector: "table-plain", inputs: { text: ["label", "text"], options: ["rowOptions", "options"], optionsMap: ["rowOptionsMap", "optionsMap"], centerCells: "centerCells", curvy: "curvy", customSelectClass: "customSelectClass", _displayedColumns: ["displayedColumns", "_displayedColumns"], distinct: "distinct", formatColumnHeaders: "formatColumnHeaders", idField: "idField", noItemTxt: "noItemTxt", nowrap: "nowrap", orderDirection: "orderDirection", orderField: "orderField", pageSize: "pageSize", pageSizeOptions: "pageSizeOptions", placeSelectionAtRight: "placeSelectionAtRight", resultsLength: "resultsLength", showExport: "showExport", showFilter: "showFilter", showPager: "showPager", showRowPointer: "showRowPointer", smallerFonts: "smallerFonts", isDisabledFunc: "isDisabledFunc", useSelection: "useSelection", _data: ["data", "_data"] }, outputs: { _rowClick: "rowClick", _view: "view", listMutated: "listMutated", selectionChanged: "selectionChanged", emitCheckbox: "emitCheckbox" }, viewQueries: [{ propertyName: "paginator", first: true, predicate: MatPaginator, descendants: true }, { propertyName: "sort", first: true, predicate: MatSort, descendants: true }], ngImport: i0, template: "<div class=\" \">\n  <div [ngClass]=\"{ border: distinct }\">\n    <div class=\"table-container\" #container>\n      <div class=\"overflow-auto\">\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-100 d-table   mb-0\"\n          [ngClass]=\"{smallerFonts,nowrap,centerCells,curvy}\">\n          <!-- Checkbox Column -->\n          <ng-container matColumnDef=\"mselect\" [sticky]=\"!placeSelectionAtRight\" [stickyEnd]=\"placeSelectionAtRight\">\n            <th mat-header-cell *matHeaderCellDef>\n              <ng-container *ngIf=\"customSelectClass\">\n                <input type=\"checkbox\" [class]=\"customSelectClass\" (change)=\"$event ? masterToggle() : null\"\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [attr.aria-label]=\"checkboxLabel()\" />\n              </ng-container>\n              <ng-container *ngIf=\"!customSelectClass\">\n                <mat-checkbox class=\"circle-checkbox\" (change)=\"$event ? masterToggle() : null\"\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </ng-container>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n              <ng-container *ngIf=\"customSelectClass\">\n                <input type=\"checkbox\" class=\"form-control control-bg-gray\" (click)=\"$event.stopPropagation()\"\n                  (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                  [attr.aria-label]=\"checkboxLabel(row)\" />\n              </ng-container>\n              <ng-container *ngIf=\"!customSelectClass\">\n                <mat-checkbox class=\"circle-checkbox\" (click)=\"$event.stopPropagation()\"\n                  (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                  [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </ng-container>\n            </td>\n          </ng-container>\n          <!-- Columns -->\n          <ng-container *ngFor=\"let col of displayedColumns; let i = index\">\n            <ng-container [ngSwitch]=\"col.type\">\n\n\n              <!-- Button -->\n              <ng-container *ngSwitchCase=\"'button'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"btn-cell\">\n                  <app-btn [icon]=\"col.btn?.icon\" [type]=\"col.btn?.type\" (mclick)=\"clickBtn(col,row)\"\n                    [text]=\"col.btn?.label\" [loading]=\"col.btn?.loading\" [iconBtn]=\"col.btn?.iconBtn\" mclass=\"w-auto\"\n                    [disabled]=\"col.btn?.disabled || col.btn?.loading\"></app-btn>\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- Trend -->\n              <ng-container *ngSwitchCase=\"'trend'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                  {{ col.t|titlecase }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"btn-cell\">\n                  <precentage-trend [trend]=\"row[col.f]\"></precentage-trend>\n                </td>\n              </ng-container>\n              <!--// -->\n\n\n              <!-- DEFAULT -->\n              <ng-container matColumnDef=\"{{ col.f|toAny }}\" *ngSwitchDefault>\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                  {{formatColumnHeaders?(col.t|titlecase):col.t }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <ng-container *ngIf=\"col.routeFormatter; else elseNoRouteTemplate\">\n                    <a class=\"cell link pointer {{col.itemClassFunc|functionCaller1:row}} \"\n                      [routerLink]=\"[col?.routeFormatter|functionCaller1:row]\"\n                      [queryParams]=\"col?.mqueryParams|functionCaller1:row\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </a>\n                  </ng-container>\n                  <ng-template #elseNoRouteTemplate>\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </div>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <!--// -->\n            </ng-container>\n          </ng-container>\n\n          <!-- Options Column -->\n          <ng-container matColumnDef=\"option\" *ngIf=\"options?.length>0||optionsMap\" stickyEnd>\n            <th mat-header-cell class=\"lastStickyItem w-auto\" *matHeaderCellDef disableClear></th>\n            <td mat-cell class=\"lastStickyItem w-auto\" *matCellDef=\"let row\">\n              <ng-container *ngIf=\"optionsMap; else elseOptionsTemplate\">\n                <ng-container *ngIf=\"(optionsMap|functionCaller1:row) as _rowoptions\">\n                  <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                    <mat-icon>more_vert</mat-icon>\n                  </app-btn>\n                  <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item *ngFor=\"let option of _rowoptions\" (click)=\"option.action(row)\">\n                      {{optionLabeller|functionCaller2:option:row}}\n                    </button>\n                  </mat-menu>\n                </ng-container>\n              </ng-container>\n              <ng-template #elseOptionsTemplate>\n                <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                  <mat-icon>more_vert</mat-icon>\n                </app-btn>\n                <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item *ngFor=\"let option of options\" (click)=\"option.action(row)\">\n                    {{optionLabeller|functionCaller2:option:row}}\n                  </button>\n                </mat-menu>\n              </ng-template>\n            </td>\n          </ng-container>\n\n\n\n          <ng-container\n            *ngIf=\"displayedColumns | getRawFields: !!options?.length:useSelection:placeSelectionAtRight as dcols\">\n            <tr mat-header-row *matHeaderRowDef=\"dcols\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: dcols\"  [ngClass]=\"{pointer:showRowPointer,selected:selection.isSelected(row),disabled:isDisabledFunc?isDisabledFunc(row):false}\"\n            (click)=\"rowClick(row)\">\n            </tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\" [attr.colspan]=\"dcols?.length || 1\">\n                {{ noItemTxt }}\n              </td>\n            </tr>\n          </ng-container>\n        </table>\n      </div>\n      <ng-container *ngIf=\"showPager\">\n        <mat-paginator mresponsiveness [hideMobile]=\"true\" [length]=\"resultsLength\" [pageSizeOptions]=\"pageSizeOptions\"\n          [pageSize]=\"pageSize\" showFirstLastButtons>\n        </mat-paginator>\n        <div class=\"  \" mresponsiveness [hideDesktop]=\"true\">\n          <div class=\" d-flex justify-content-center\">\n            <app-btn text=\"See more\" type=\"clear-pm\" (mclick)=\"increasePageSize()\"\n              *ngIf=\"dataSource?.data?.length>paginator?.pageSize;else showLess\" />\n            <ng-template #showLess>\n              <app-btn text=\"See less\" type=\"clear-pm\" (mclick)=\"resetPageSize()\" />\n            </ng-template>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>", styles: ["::ng-deep mat-paginator .mat-mdc-form-field{width:100px;height:25px;margin-top:0;margin-bottom:0;background-color:transparent!important;border:none}::ng-deep mat-paginator .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{height:auto;padding:0;color:var(--primary)}::ng-deep .mdc-data-table__header-cell{color:#333!important;background-color:transparent!important;font-style:normal;font-weight:600;font-size:14px;line-height:19px}::ng-deep mat-paginator{border-radius:0 0 16px 16px}::ng-deep .mat-mdc-table{background:rgba(255,255,255,0)}::ng-deep .mat-mdc-table .mat-mdc-row:hover,::ng-deep .mat-mdc-table .mat-mdc-footer-row:hover{background-color:inherit}::ng-deep .mat-mdc-table .mat-mdc-row.selected:hover,::ng-deep .mat-mdc-table .mat-mdc-footer-row.selected:hover{background-color:#f0f6ff}::ng-deep th.mat-mdc-table-sticky,::ng-deep td.mat-mdc-table-sticky{background-color:#fff!important}::ng-deep .colour{height:15px;width:15px;display:inline-block;border-radius:5px}::ng-deep .centerCells .mat-sort-header-container{justify-content:center}::ng-deep .default.colour{background-color:#545454}::ng-deep .btn-cell{width:1%}::ng-deep .mat-sort-header-container{height:40px}.mat-header-cell{font-weight:600;font-size:14px;line-height:21px}.smallerFonts td,.smallerFonts th{font-size:.7rem}.nowrap td,.nowrap th{white-space:nowrap;text-align:left;padding:0 24px;border-radius:16px}.nowrap td{border-radius:0}:host ::ng-deep input[type=checkbox]:not(.form-control){border:1px solid rgba(80,78,245,.3019607843)}.table tr td:hover{color:unset!important;text-decoration:unset;cursor:unset}tr.mat-header-row{height:auto}.centerCells td{text-align:center}.curvy tr{border-radius:0 10px}.title{font-style:normal;font-weight:600;font-size:24px;line-height:29px;color:#333}.table-container{background:#ffffff;border:1px solid #e0e0e0;box-shadow:none;border-radius:16px}.table-container .mat-paginator,.table-container .mat-table{background:transparent}.mat-header-cell{color:#333;background-color:transparent}.cell.notLink:hover{color:inherit}.cell{text-overflow:ellipsis;display:block;white-space:nowrap;overflow:hidden;font-style:normal;font-weight:400;font-size:14px;line-height:19px;color:#333}.noContent .title{font-style:normal;font-weight:600;font-size:14px;line-height:18px;text-align:center;color:#266dd3}.noContent .sub-title{font-style:normal;font-weight:400;font-size:12px;line-height:18px;text-align:center;width:206px;color:#828282}.table{border:1px solid #f2f2f2;border-radius:16px}.selected{background:#f0f6ff;background-color:#f0f6ff}.disabled .cell{font-style:normal;font-weight:400;font-size:14px;line-height:19px;color:#bdbdbd}.lastStickyItem{padding:0!important;background-image:linear-gradient(270deg,rgb(255,255,255),rgba(255,255,255,.7490196078))!important;border-radius:0!important}th.lastStickyItem{background:transparent!important}.link{color:var(--primary)}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "ngmodule", type: MatTableModule }, { kind: "component", type: i2.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { kind: "directive", type: i2.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i2.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { kind: "directive", type: i2.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i2.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i2.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }, { kind: "directive", type: i2.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i2.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "component", type: i2.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { kind: "component", type: i2.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { kind: "directive", type: i2.MatNoDataRow, selector: "ng-template[matNoDataRow]" }, { kind: "ngmodule", type: MatSortModule }, { kind: "directive", type: i3.MatSort, selector: "[matSort]", inputs: ["matSortDisabled", "matSortActive", "matSortStart", "matSortDirection", "matSortDisableClear"], outputs: ["matSortChange"], exportAs: ["matSort"] }, { kind: "component", type: i3.MatSortHeader, selector: "[mat-sort-header]", inputs: ["disabled", "mat-sort-header", "arrowPosition", "start", "sortActionDescription", "disableClear"], exportAs: ["matSortHeader"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: MatCheckboxModule }, { kind: "component", type: i4.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex"], exportAs: ["matCheckbox"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "component", type: BtnComponent, selector: "app-btn,btn", inputs: ["formSchema", "icon", "type", "group", "actionType", "animate", "badge", "class", "customIcon", "disabled", "form", "help", "iconBtn", "lite", "loading", "mclass", "showHelpIcon", "mini", "text", "valid", "subButtons", "onFormInvalid"], outputs: ["mclick"] }, { kind: "component", type: PrecentageTrendComponent, selector: "precentage-trend", inputs: ["trend", "message"] }, { kind: "directive", type: NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "directive", type: RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "ngmodule", type: MatTooltipModule }, { kind: "directive", type: i5.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "ngmodule", type: MatMenuModule }, { kind: "component", type: i6.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { kind: "component", type: i6.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }, { kind: "directive", type: i6.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i7.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "ngmodule", type: MatPaginatorModule }, { kind: "component", type: i8.MatPaginator, selector: "mat-paginator", inputs: ["disabled"], exportAs: ["matPaginator"] }, { kind: "directive", type: ResponsivenessDirective, selector: "[mresponsiveness]", inputs: ["mobileClass", "desktopClass", "hideMobile", "hideDesktop"] }, { kind: "directive", type: hideMobileDirective, selector: "[hideMobile]" }, { kind: "directive", type: hideDesktopDirective, selector: "[hideDesktop]" }, { kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "pipe", type: TitleCasePipe, name: "titlecase" }, { kind: "pipe", type: GetColFormattedPipe, name: "getColFormatted" }, { kind: "pipe", type: GetRawFieldsPipe, name: "getRawFields" }, { kind: "pipe", type: FunctionCaller1, name: "functionCaller1" }, { kind: "pipe", type: FunctionCaller2, name: "functionCaller2" }, { kind: "pipe", type: ToAnyPipe, name: "toAny" }, { kind: "pipe", type: ValueOrXPipe, name: "valueOrX" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: TablePlainComponent, decorators: [{
            type: Component,
            args: [{ selector: 'table-plain', standalone: true, imports: [
                        NgClass,
                        MatTableModule,
                        MatSortModule,
                        NgIf,
                        MatCheckboxModule,
                        NgFor,
                        NgSwitch,
                        NgSwitchCase,
                        BtnComponent,
                        PrecentageTrendComponent,
                        NgSwitchDefault,
                        RouterLink,
                        MatTooltipModule,
                        MatMenuModule,
                        MatIconModule,
                        MatPaginatorModule,
                        ResponsivenessDirective,
                        hideMobileDirective,
                        hideDesktopDirective,
                        AsyncPipe,
                        TitleCasePipe,
                        GetColFormattedPipe,
                        GetRawFieldsPipe,
                        FunctionCaller1,
                        FunctionCaller2,
                        ToAnyPipe,
                        ValueOrXPipe,
                    ], template: "<div class=\" \">\n  <div [ngClass]=\"{ border: distinct }\">\n    <div class=\"table-container\" #container>\n      <div class=\"overflow-auto\">\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-100 d-table   mb-0\"\n          [ngClass]=\"{smallerFonts,nowrap,centerCells,curvy}\">\n          <!-- Checkbox Column -->\n          <ng-container matColumnDef=\"mselect\" [sticky]=\"!placeSelectionAtRight\" [stickyEnd]=\"placeSelectionAtRight\">\n            <th mat-header-cell *matHeaderCellDef>\n              <ng-container *ngIf=\"customSelectClass\">\n                <input type=\"checkbox\" [class]=\"customSelectClass\" (change)=\"$event ? masterToggle() : null\"\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [attr.aria-label]=\"checkboxLabel()\" />\n              </ng-container>\n              <ng-container *ngIf=\"!customSelectClass\">\n                <mat-checkbox class=\"circle-checkbox\" (change)=\"$event ? masterToggle() : null\"\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </ng-container>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n              <ng-container *ngIf=\"customSelectClass\">\n                <input type=\"checkbox\" class=\"form-control control-bg-gray\" (click)=\"$event.stopPropagation()\"\n                  (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                  [attr.aria-label]=\"checkboxLabel(row)\" />\n              </ng-container>\n              <ng-container *ngIf=\"!customSelectClass\">\n                <mat-checkbox class=\"circle-checkbox\" (click)=\"$event.stopPropagation()\"\n                  (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                  [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </ng-container>\n            </td>\n          </ng-container>\n          <!-- Columns -->\n          <ng-container *ngFor=\"let col of displayedColumns; let i = index\">\n            <ng-container [ngSwitch]=\"col.type\">\n\n\n              <!-- Button -->\n              <ng-container *ngSwitchCase=\"'button'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                  {{ col.t }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"btn-cell\">\n                  <app-btn [icon]=\"col.btn?.icon\" [type]=\"col.btn?.type\" (mclick)=\"clickBtn(col,row)\"\n                    [text]=\"col.btn?.label\" [loading]=\"col.btn?.loading\" [iconBtn]=\"col.btn?.iconBtn\" mclass=\"w-auto\"\n                    [disabled]=\"col.btn?.disabled || col.btn?.loading\"></app-btn>\n                </td>\n              </ng-container>\n              <!--// -->\n\n              <!-- Trend -->\n              <ng-container *ngSwitchCase=\"'trend'\" matColumnDef=\"{{ col.f|toAny }}\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                  {{ col.t|titlecase }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"btn-cell\">\n                  <precentage-trend [trend]=\"row[col.f]\"></precentage-trend>\n                </td>\n              </ng-container>\n              <!--// -->\n\n\n              <!-- DEFAULT -->\n              <ng-container matColumnDef=\"{{ col.f|toAny }}\" *ngSwitchDefault>\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                  {{formatColumnHeaders?(col.t|titlecase):col.t }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <ng-container *ngIf=\"col.routeFormatter; else elseNoRouteTemplate\">\n                    <a class=\"cell link pointer {{col.itemClassFunc|functionCaller1:row}} \"\n                      [routerLink]=\"[col?.routeFormatter|functionCaller1:row]\"\n                      [queryParams]=\"col?.mqueryParams|functionCaller1:row\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </a>\n                  </ng-container>\n                  <ng-template #elseNoRouteTemplate>\n                    <div class=\"cell {{col.itemClassFunc|functionCaller1:row}} \"\n                      [ngClass]=\"{pointer:col.action,link:col.action}\" (click)=\"col.action?col.action(row,col.f):null\"\n                      [matTooltip]=\"(row|getColFormatted:col)|async\" #ele\n                      [matTooltipDisabled]=\"ele.scrollWidth<=ele.offsetWidth\"\n                      [innerHTML]=\"((row|getColFormatted:col)|async)|valueOrX\">\n                    </div>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <!--// -->\n            </ng-container>\n          </ng-container>\n\n          <!-- Options Column -->\n          <ng-container matColumnDef=\"option\" *ngIf=\"options?.length>0||optionsMap\" stickyEnd>\n            <th mat-header-cell class=\"lastStickyItem w-auto\" *matHeaderCellDef disableClear></th>\n            <td mat-cell class=\"lastStickyItem w-auto\" *matCellDef=\"let row\">\n              <ng-container *ngIf=\"optionsMap; else elseOptionsTemplate\">\n                <ng-container *ngIf=\"(optionsMap|functionCaller1:row) as _rowoptions\">\n                  <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                    <mat-icon>more_vert</mat-icon>\n                  </app-btn>\n                  <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item *ngFor=\"let option of _rowoptions\" (click)=\"option.action(row)\">\n                      {{optionLabeller|functionCaller2:option:row}}\n                    </button>\n                  </mat-menu>\n                </ng-container>\n              </ng-container>\n              <ng-template #elseOptionsTemplate>\n                <app-btn type=\"clear\" [matMenuTriggerFor]=\"menu\" class=\"btn ms-2\">\n                  <mat-icon>more_vert</mat-icon>\n                </app-btn>\n                <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item *ngFor=\"let option of options\" (click)=\"option.action(row)\">\n                    {{optionLabeller|functionCaller2:option:row}}\n                  </button>\n                </mat-menu>\n              </ng-template>\n            </td>\n          </ng-container>\n\n\n\n          <ng-container\n            *ngIf=\"displayedColumns | getRawFields: !!options?.length:useSelection:placeSelectionAtRight as dcols\">\n            <tr mat-header-row *matHeaderRowDef=\"dcols\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: dcols\"  [ngClass]=\"{pointer:showRowPointer,selected:selection.isSelected(row),disabled:isDisabledFunc?isDisabledFunc(row):false}\"\n            (click)=\"rowClick(row)\">\n            </tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\" [attr.colspan]=\"dcols?.length || 1\">\n                {{ noItemTxt }}\n              </td>\n            </tr>\n          </ng-container>\n        </table>\n      </div>\n      <ng-container *ngIf=\"showPager\">\n        <mat-paginator mresponsiveness [hideMobile]=\"true\" [length]=\"resultsLength\" [pageSizeOptions]=\"pageSizeOptions\"\n          [pageSize]=\"pageSize\" showFirstLastButtons>\n        </mat-paginator>\n        <div class=\"  \" mresponsiveness [hideDesktop]=\"true\">\n          <div class=\" d-flex justify-content-center\">\n            <app-btn text=\"See more\" type=\"clear-pm\" (mclick)=\"increasePageSize()\"\n              *ngIf=\"dataSource?.data?.length>paginator?.pageSize;else showLess\" />\n            <ng-template #showLess>\n              <app-btn text=\"See less\" type=\"clear-pm\" (mclick)=\"resetPageSize()\" />\n            </ng-template>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>", styles: ["::ng-deep mat-paginator .mat-mdc-form-field{width:100px;height:25px;margin-top:0;margin-bottom:0;background-color:transparent!important;border:none}::ng-deep mat-paginator .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{height:auto;padding:0;color:var(--primary)}::ng-deep .mdc-data-table__header-cell{color:#333!important;background-color:transparent!important;font-style:normal;font-weight:600;font-size:14px;line-height:19px}::ng-deep mat-paginator{border-radius:0 0 16px 16px}::ng-deep .mat-mdc-table{background:rgba(255,255,255,0)}::ng-deep .mat-mdc-table .mat-mdc-row:hover,::ng-deep .mat-mdc-table .mat-mdc-footer-row:hover{background-color:inherit}::ng-deep .mat-mdc-table .mat-mdc-row.selected:hover,::ng-deep .mat-mdc-table .mat-mdc-footer-row.selected:hover{background-color:#f0f6ff}::ng-deep th.mat-mdc-table-sticky,::ng-deep td.mat-mdc-table-sticky{background-color:#fff!important}::ng-deep .colour{height:15px;width:15px;display:inline-block;border-radius:5px}::ng-deep .centerCells .mat-sort-header-container{justify-content:center}::ng-deep .default.colour{background-color:#545454}::ng-deep .btn-cell{width:1%}::ng-deep .mat-sort-header-container{height:40px}.mat-header-cell{font-weight:600;font-size:14px;line-height:21px}.smallerFonts td,.smallerFonts th{font-size:.7rem}.nowrap td,.nowrap th{white-space:nowrap;text-align:left;padding:0 24px;border-radius:16px}.nowrap td{border-radius:0}:host ::ng-deep input[type=checkbox]:not(.form-control){border:1px solid rgba(80,78,245,.3019607843)}.table tr td:hover{color:unset!important;text-decoration:unset;cursor:unset}tr.mat-header-row{height:auto}.centerCells td{text-align:center}.curvy tr{border-radius:0 10px}.title{font-style:normal;font-weight:600;font-size:24px;line-height:29px;color:#333}.table-container{background:#ffffff;border:1px solid #e0e0e0;box-shadow:none;border-radius:16px}.table-container .mat-paginator,.table-container .mat-table{background:transparent}.mat-header-cell{color:#333;background-color:transparent}.cell.notLink:hover{color:inherit}.cell{text-overflow:ellipsis;display:block;white-space:nowrap;overflow:hidden;font-style:normal;font-weight:400;font-size:14px;line-height:19px;color:#333}.noContent .title{font-style:normal;font-weight:600;font-size:14px;line-height:18px;text-align:center;color:#266dd3}.noContent .sub-title{font-style:normal;font-weight:400;font-size:12px;line-height:18px;text-align:center;width:206px;color:#828282}.table{border:1px solid #f2f2f2;border-radius:16px}.selected{background:#f0f6ff;background-color:#f0f6ff}.disabled .cell{font-style:normal;font-weight:400;font-size:14px;line-height:19px;color:#bdbdbd}.lastStickyItem{padding:0!important;background-image:linear-gradient(270deg,rgb(255,255,255),rgba(255,255,255,.7490196078))!important;border-radius:0!important}th.lastStickyItem{background:transparent!important}.link{color:var(--primary)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.UtilityService }]; }, propDecorators: { text: [{
                type: Input,
                args: ['label']
            }], options: [{
                type: Input,
                args: ['rowOptions']
            }], optionsMap: [{
                type: Input,
                args: ['rowOptionsMap']
            }], centerCells: [{
                type: Input
            }], curvy: [{
                type: Input
            }], customSelectClass: [{
                type: Input
            }], _displayedColumns: [{
                type: Input,
                args: ['displayedColumns']
            }], distinct: [{
                type: Input
            }], formatColumnHeaders: [{
                type: Input
            }], idField: [{
                type: Input
            }], noItemTxt: [{
                type: Input
            }], nowrap: [{
                type: Input
            }], orderDirection: [{
                type: Input
            }], orderField: [{
                type: Input
            }], pageSize: [{
                type: Input
            }], pageSizeOptions: [{
                type: Input
            }], placeSelectionAtRight: [{
                type: Input
            }], resultsLength: [{
                type: Input
            }], showExport: [{
                type: Input
            }], showFilter: [{
                type: Input
            }], showPager: [{
                type: Input
            }], showRowPointer: [{
                type: Input
            }], smallerFonts: [{
                type: Input
            }], isDisabledFunc: [{
                type: Input
            }], useSelection: [{
                type: Input
            }], _rowClick: [{
                type: Output,
                args: ['rowClick']
            }], _view: [{
                type: Output,
                args: ['view']
            }], listMutated: [{
                type: Output
            }], selectionChanged: [{
                type: Output
            }], paginator: [{
                type: ViewChild,
                args: [MatPaginator]
            }], sort: [{
                type: ViewChild,
                args: [MatSort]
            }], emitCheckbox: [{
                type: Output
            }], _data: [{
                type: Input,
                args: ['data']
            }] } });
//# sourceMappingURL=data:application/json;base64,