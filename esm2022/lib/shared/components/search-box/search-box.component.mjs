import { Component, EventEmitter, Input, Output, } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { BtnComponent } from '../btn/btn.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class SearchBoxComponent {
    constructor() {
        this.label = 'Search';
        this.queryChanged = new EventEmitter();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: SearchBoxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.2", type: SearchBoxComponent, isStandalone: true, selector: "search-box", inputs: { label: "label", query: "query" }, outputs: { queryChanged: "queryChanged" }, ngImport: i0, template: "<div class=\"d-flex\">\n    <app-btn icon=\"search\" [iconBtn]=\"true\" (mclick)=\"opened=!opened\" type=\"clear\" [hidden]=\"opened\"></app-btn>\n    \n    <input [hidden]=\"!opened\" #inp type=\"search\" [(ngModel)]=\"query\" (ngModelChange)=\"queryChanged.emit($event)\" placeholder=\"{{label}}\">\n    <app-btn icon=\"close\" [iconBtn]=\"true\" (mclick)=\"opened=!opened;query=null\" type=\"clear\" [hidden]=\"!opened\"></app-btn>\n</div>", styles: ["input{width:228px;height:40px;background:#fafafa;border:1px solid #f2f2f2;border-radius:8px;padding:12px 16px}input:focus-visible{outline:none}::placeholder{font-style:normal;font-weight:400;font-size:12px;line-height:18px;display:flex;align-items:center;color:#bdbdbd}::ng-deep .btn{height:40px}\n"], dependencies: [{ kind: "component", type: BtnComponent, selector: "app-btn,btn", inputs: ["formSchema", "icon", "type", "group", "actionType", "animate", "badge", "class", "customIcon", "disabled", "form", "help", "iconBtn", "lite", "loading", "mclass", "showHelpIcon", "mini", "text", "valid", "subButtons", "onFormInvalid"], outputs: ["mclick"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: SearchBoxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'search-box', standalone: true, imports: [BtnComponent, FormsModule], template: "<div class=\"d-flex\">\n    <app-btn icon=\"search\" [iconBtn]=\"true\" (mclick)=\"opened=!opened\" type=\"clear\" [hidden]=\"opened\"></app-btn>\n    \n    <input [hidden]=\"!opened\" #inp type=\"search\" [(ngModel)]=\"query\" (ngModelChange)=\"queryChanged.emit($event)\" placeholder=\"{{label}}\">\n    <app-btn icon=\"close\" [iconBtn]=\"true\" (mclick)=\"opened=!opened;query=null\" type=\"clear\" [hidden]=\"!opened\"></app-btn>\n</div>", styles: ["input{width:228px;height:40px;background:#fafafa;border:1px solid #f2f2f2;border-radius:8px;padding:12px 16px}input:focus-visible{outline:none}::placeholder{font-style:normal;font-weight:400;font-size:12px;line-height:18px;display:flex;align-items:center;color:#bdbdbd}::ng-deep .btn{height:40px}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { label: [{
                type: Input
            }], query: [{
                type: Input
            }], queryChanged: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWJveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9oZXJsaGF5LWhlbHBlcnMvc3JjL2xpYi9zaGFyZWQvY29tcG9uZW50cy9zZWFyY2gtYm94L3NlYXJjaC1ib3guY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaGVybGhheS1oZWxwZXJzL3NyYy9saWIvc2hhcmVkL2NvbXBvbmVudHMvc2VhcmNoLWJveC9zZWFyY2gtYm94LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLEtBQUssRUFDTCxNQUFNLEdBQ1AsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7O0FBU3BELE1BQU0sT0FBTyxrQkFBa0I7SUFLN0I7UUFKUyxVQUFLLEdBQVcsUUFBUSxDQUFDO1FBRXhCLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztJQUVyQyxDQUFDOzhHQUxMLGtCQUFrQjtrR0FBbEIsa0JBQWtCLDZKQ2xCL0IsNGJBS00sb1dEV1EsWUFBWSxrVUFBRSxXQUFXOzsyRkFFMUIsa0JBQWtCO2tCQVA5QixTQUFTOytCQUNJLFlBQVksY0FHVixJQUFJLFdBQ1AsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDOzBFQUc3QixLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUNJLFlBQVk7c0JBQXJCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPdXRwdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSW5wdXRCYXNpY0NvbXBvbmVudCB9IGZyb20gJy4uL2lucHV0L2lucHV0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEJ0bkNvbXBvbmVudCB9IGZyb20gJy4uL2J0bi9idG4uY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdzZWFyY2gtYm94JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vc2VhcmNoLWJveC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc2VhcmNoLWJveC5jb21wb25lbnQuc2NzcyddLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW0J0bkNvbXBvbmVudCwgRm9ybXNNb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBTZWFyY2hCb3hDb21wb25lbnQge1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nID0gJ1NlYXJjaCc7XG4gIEBJbnB1dCgpIHF1ZXJ5OiBzdHJpbmc7XG4gIEBPdXRwdXQoKSBxdWVyeUNoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcbiAgb3BlbmVkOiBib29sZWFuO1xuICBjb25zdHJ1Y3RvcigpIHt9XG59XG4iLCI8ZGl2IGNsYXNzPVwiZC1mbGV4XCI+XG4gICAgPGFwcC1idG4gaWNvbj1cInNlYXJjaFwiIFtpY29uQnRuXT1cInRydWVcIiAobWNsaWNrKT1cIm9wZW5lZD0hb3BlbmVkXCIgdHlwZT1cImNsZWFyXCIgW2hpZGRlbl09XCJvcGVuZWRcIj48L2FwcC1idG4+XG4gICAgXG4gICAgPGlucHV0IFtoaWRkZW5dPVwiIW9wZW5lZFwiICNpbnAgdHlwZT1cInNlYXJjaFwiIFsobmdNb2RlbCldPVwicXVlcnlcIiAobmdNb2RlbENoYW5nZSk9XCJxdWVyeUNoYW5nZWQuZW1pdCgkZXZlbnQpXCIgcGxhY2Vob2xkZXI9XCJ7e2xhYmVsfX1cIj5cbiAgICA8YXBwLWJ0biBpY29uPVwiY2xvc2VcIiBbaWNvbkJ0bl09XCJ0cnVlXCIgKG1jbGljayk9XCJvcGVuZWQ9IW9wZW5lZDtxdWVyeT1udWxsXCIgdHlwZT1cImNsZWFyXCIgW2hpZGRlbl09XCIhb3BlbmVkXCI+PC9hcHAtYnRuPlxuPC9kaXY+Il19