import { Component, Input } from '@angular/core';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { NgIf, NgStyle } from '@angular/common';
import { ProgressLoader, ProgressLoaders } from '../../classes/progress-loader.class';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/progress-bar";
export class LoaderComponent {
    set _loading(v) {
        if (v)
            this.startLoader();
        else
            this.stopLoader();
    }
    get loading() {
        return this.loaders.isLoading;
    }
    set _height(v) {
        const minHeight = 150;
        this.height = v ? (v < minHeight ? minHeight : v) + 'px' : this.height;
    }
    constructor() {
        this.class = 'vh-60';
        this.loader = new ProgressLoader();
        this.loaders = new ProgressLoaders();
        this.loaders.addLoader(this.loader);
    }
    ngOnInit() { }
    startLoader() {
        this.loader.startPl();
    }
    stopLoader() {
        this.loaders?.stopAllLoaders();
        // this.loader.stopPl();
    }
    stepLoader(v) {
        this._loading = v;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: LoaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.2", type: LoaderComponent, isStandalone: true, selector: "loader", inputs: { class: "class", text: "text", hasContent: "hasContent", _loading: ["loading", "_loading"], _height: ["height", "_height"] }, ngImport: i0, template: "<div class=\"h-100\">\n  <div *ngIf=\"loading\" class=\" {{height?'':class}}  center w-100 \" id=\"loader\" [ngStyle]=\"{height }\">\n    <div class=\"w-100 text-center d-flex justify-content-center\">\n      <div class=\"w-100\">\n        <div class=\"lds-ellipsis\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n        <div class=\"my-16 w-100\" *ngIf=\"progress\">\n          <div class=\"progress-value\">\n            {{progress}}%\n          </div>\n          <div class=\"text-start mt-16 w-100\">\n            <mat-progress-bar class=\"  w-100\" mode=\"determinate\" [value]=\"progress\" />\n          </div>\n        </div> \n        <h5 class=\"mt-2 noselect text-center\" *ngIf=\"text\" [innerHTML]=\"text\"></h5>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"h-100\" [hidden]=\"loading\">\n    <!-- <div > -->\n\n    <ng-container *ngIf=\"hasContent==null; else elsehasContentTemplate\">\n      <ng-content></ng-content>\n    </ng-container>\n    <ng-template #elsehasContentTemplate>\n      <ng-container *ngIf=\"hasContent; else elseTemplate\">\n        <ng-content select=\"[content]\"></ng-content>\n      </ng-container>\n      <ng-template #elseTemplate>\n        <ng-content select=\"[noContent]\"></ng-content>\n      </ng-template>\n\n    </ng-template>\n\n  </div>\n</div>", styles: [".lds-ellipsis{display:inline-block;position:relative;width:80px;height:80px}.lds-ellipsis div{position:absolute;top:33px;width:13px;height:13px;border-radius:50%;background:var(--primary);animation-timing-function:cubic-bezier(0,1,1,0)}.lds-ellipsis div:nth-child(1){left:8px;animation:lds-ellipsis1 .6s infinite}.lds-ellipsis div:nth-child(2){left:8px;animation:lds-ellipsis2 .6s infinite}.lds-ellipsis div:nth-child(3){left:32px;animation:lds-ellipsis2 .6s infinite}.lds-ellipsis div:nth-child(4){left:56px;animation:lds-ellipsis3 .6s infinite}@keyframes lds-ellipsis1{0%{transform:scale(0)}to{transform:scale(1)}}@keyframes lds-ellipsis3{0%{transform:scale(1)}to{transform:scale(0)}}@keyframes lds-ellipsis2{0%{transform:translate(0)}to{transform:translate(24px)}}.progress-value{font-style:normal;font-weight:600;font-size:24px;line-height:18px;text-align:center;color:var(--primary)}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "ngmodule", type: MatProgressBarModule }, { kind: "component", type: i1.MatProgressBar, selector: "mat-progress-bar", inputs: ["color", "value", "bufferValue", "mode"], outputs: ["animationEnd"], exportAs: ["matProgressBar"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: LoaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'loader', standalone: true, imports: [NgIf, NgStyle, MatProgressBarModule], template: "<div class=\"h-100\">\n  <div *ngIf=\"loading\" class=\" {{height?'':class}}  center w-100 \" id=\"loader\" [ngStyle]=\"{height }\">\n    <div class=\"w-100 text-center d-flex justify-content-center\">\n      <div class=\"w-100\">\n        <div class=\"lds-ellipsis\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n        <div class=\"my-16 w-100\" *ngIf=\"progress\">\n          <div class=\"progress-value\">\n            {{progress}}%\n          </div>\n          <div class=\"text-start mt-16 w-100\">\n            <mat-progress-bar class=\"  w-100\" mode=\"determinate\" [value]=\"progress\" />\n          </div>\n        </div> \n        <h5 class=\"mt-2 noselect text-center\" *ngIf=\"text\" [innerHTML]=\"text\"></h5>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"h-100\" [hidden]=\"loading\">\n    <!-- <div > -->\n\n    <ng-container *ngIf=\"hasContent==null; else elsehasContentTemplate\">\n      <ng-content></ng-content>\n    </ng-container>\n    <ng-template #elsehasContentTemplate>\n      <ng-container *ngIf=\"hasContent; else elseTemplate\">\n        <ng-content select=\"[content]\"></ng-content>\n      </ng-container>\n      <ng-template #elseTemplate>\n        <ng-content select=\"[noContent]\"></ng-content>\n      </ng-template>\n\n    </ng-template>\n\n  </div>\n</div>", styles: [".lds-ellipsis{display:inline-block;position:relative;width:80px;height:80px}.lds-ellipsis div{position:absolute;top:33px;width:13px;height:13px;border-radius:50%;background:var(--primary);animation-timing-function:cubic-bezier(0,1,1,0)}.lds-ellipsis div:nth-child(1){left:8px;animation:lds-ellipsis1 .6s infinite}.lds-ellipsis div:nth-child(2){left:8px;animation:lds-ellipsis2 .6s infinite}.lds-ellipsis div:nth-child(3){left:32px;animation:lds-ellipsis2 .6s infinite}.lds-ellipsis div:nth-child(4){left:56px;animation:lds-ellipsis3 .6s infinite}@keyframes lds-ellipsis1{0%{transform:scale(0)}to{transform:scale(1)}}@keyframes lds-ellipsis3{0%{transform:scale(1)}to{transform:scale(0)}}@keyframes lds-ellipsis2{0%{transform:translate(0)}to{transform:translate(24px)}}.progress-value{font-style:normal;font-weight:600;font-size:24px;line-height:18px;text-align:center;color:var(--primary)}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { class: [{
                type: Input
            }], text: [{
                type: Input
            }], hasContent: [{
                type: Input
            }], _loading: [{
                type: Input,
                args: ['loading']
            }], _height: [{
                type: Input,
                args: ['height']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2hlcmxoYXktaGVscGVycy9zcmMvbGliL3NoYXJlZC9jb21wb25lbnRzL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaGVybGhheS1oZWxwZXJzL3NyYy9saWIvc2hhcmVkL2NvbXBvbmVudHMvbG9hZGVyL2xvYWRlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLE1BQU0scUNBQXFDLENBQUM7OztBQVN0RixNQUFNLE9BQU8sZUFBZTtJQU8xQixJQUFzQixRQUFRLENBQUMsQ0FBVTtRQUN2QyxJQUFJLENBQUM7WUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7O1lBQ3JCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBQ0QsSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztJQUNoQyxDQUFDO0lBR0QsSUFBcUIsT0FBTyxDQUFDLENBQVM7UUFDcEMsTUFBTSxTQUFTLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3pFLENBQUM7SUFDRDtRQW5CUyxVQUFLLEdBQVksT0FBTyxDQUFDO1FBSWxDLFdBQU0sR0FBRyxJQUFJLGNBQWMsRUFBRSxDQUFDO1FBZ0I1QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksZUFBZSxFQUFFLENBQUM7UUFDckMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFDRCxRQUFRLEtBQUksQ0FBQztJQUNiLFdBQVc7UUFDVCxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFDRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLE9BQU8sRUFBRSxjQUFjLEVBQUUsQ0FBQztRQUMvQix3QkFBd0I7SUFDMUIsQ0FBQztJQUNELFVBQVUsQ0FBQyxDQUFVO1FBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO0lBQ3BCLENBQUM7OEdBbENVLGVBQWU7a0dBQWYsZUFBZSx5TUNaNUIseTFDQXdDTSxvN0JEOUJNLElBQUksNkZBQUUsT0FBTywwRUFBRSxvQkFBb0I7OzJGQUVsQyxlQUFlO2tCQVAzQixTQUFTOytCQUNFLFFBQVEsY0FHTixJQUFJLFdBQ1AsQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLG9CQUFvQixDQUFDOzBFQUdyQyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLO2dCQUVHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBR2dCLFFBQVE7c0JBQTdCLEtBQUs7dUJBQUMsU0FBUztnQkFTSyxPQUFPO3NCQUEzQixLQUFLO3VCQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRQcm9ncmVzc0Jhck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3Byb2dyZXNzLWJhcic7XG5pbXBvcnQgeyBOZ0lmLCBOZ1N0eWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFByb2dyZXNzTG9hZGVyLCBQcm9ncmVzc0xvYWRlcnMgfSBmcm9tICcuLi8uLi9jbGFzc2VzL3Byb2dyZXNzLWxvYWRlci5jbGFzcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xvYWRlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9sb2FkZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9sb2FkZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nSWYsIE5nU3R5bGUsIE1hdFByb2dyZXNzQmFyTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgTG9hZGVyQ29tcG9uZW50IHtcbiAgQElucHV0KCkgY2xhc3M6IGNsYXNzZXMgPSAndmgtNjAnO1xuICBASW5wdXQoKSB0ZXh0OiBzdHJpbmc7XG5cbiAgQElucHV0KCkgaGFzQ29udGVudDogYm9vbGVhbjtcbiAgbG9hZGVyID0gbmV3IFByb2dyZXNzTG9hZGVyKCk7XG4gIHByb2dyZXNzOiBudW1iZXI7XG4gIEBJbnB1dCgnbG9hZGluZycpIHNldCBfbG9hZGluZyh2OiBib29sZWFuKSB7XG4gICAgaWYgKHYpIHRoaXMuc3RhcnRMb2FkZXIoKTtcbiAgICBlbHNlIHRoaXMuc3RvcExvYWRlcigpO1xuICB9XG4gIGdldCBsb2FkaW5nKCkge1xuICAgIHJldHVybiB0aGlzLmxvYWRlcnMuaXNMb2FkaW5nO1xuICB9XG4gIGxvYWRlcnM6IFByb2dyZXNzTG9hZGVycztcbiAgaGVpZ2h0OiBzdHJpbmc7XG4gIEBJbnB1dCgnaGVpZ2h0Jykgc2V0IF9oZWlnaHQodjogbnVtYmVyKSB7XG4gICAgY29uc3QgbWluSGVpZ2h0ID0gMTUwO1xuICAgIHRoaXMuaGVpZ2h0ID0gdiA/ICh2IDwgbWluSGVpZ2h0ID8gbWluSGVpZ2h0IDogdikgKyAncHgnIDogdGhpcy5oZWlnaHQ7XG4gIH1cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5sb2FkZXJzID0gbmV3IFByb2dyZXNzTG9hZGVycygpO1xuICAgIHRoaXMubG9hZGVycy5hZGRMb2FkZXIodGhpcy5sb2FkZXIpO1xuICB9XG4gIG5nT25Jbml0KCkge31cbiAgc3RhcnRMb2FkZXIoKSB7XG4gICAgdGhpcy5sb2FkZXIuc3RhcnRQbCgpO1xuICB9XG4gIHN0b3BMb2FkZXIoKSB7XG4gICAgdGhpcy5sb2FkZXJzPy5zdG9wQWxsTG9hZGVycygpO1xuICAgIC8vIHRoaXMubG9hZGVyLnN0b3BQbCgpO1xuICB9XG4gIHN0ZXBMb2FkZXIodjogYm9vbGVhbikge1xuICAgIHRoaXMuX2xvYWRpbmcgPSB2O1xuICB9XG59XG5cbnR5cGUgY2xhc3NlcyA9XG4gIHwgJ2gtMTAwJ1xuICB8ICd2aC0xMCdcbiAgfCAndmgtMjAnXG4gIHwgJ3ZoLTMwJ1xuICB8ICd2aC00MCdcbiAgfCAndmgtNTAnXG4gIHwgJ3ZoLTYwJ1xuICB8ICd2aC03MCdcbiAgfCAndmgtODAnXG4gIHwgJ3ZoLTkwJ1xuICB8ICd2aC05NSdcbiAgfCAndmgtMTAwJztcbiIsIjxkaXYgY2xhc3M9XCJoLTEwMFwiPlxuICA8ZGl2ICpuZ0lmPVwibG9hZGluZ1wiIGNsYXNzPVwiIHt7aGVpZ2h0PycnOmNsYXNzfX0gIGNlbnRlciB3LTEwMCBcIiBpZD1cImxvYWRlclwiIFtuZ1N0eWxlXT1cIntoZWlnaHQgfVwiPlxuICAgIDxkaXYgY2xhc3M9XCJ3LTEwMCB0ZXh0LWNlbnRlciBkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlclwiPlxuICAgICAgPGRpdiBjbGFzcz1cInctMTAwXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJsZHMtZWxsaXBzaXNcIj5cbiAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICAgPGRpdj48L2Rpdj5cbiAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm15LTE2IHctMTAwXCIgKm5nSWY9XCJwcm9ncmVzc1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy12YWx1ZVwiPlxuICAgICAgICAgICAge3twcm9ncmVzc319JVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LXN0YXJ0IG10LTE2IHctMTAwXCI+XG4gICAgICAgICAgICA8bWF0LXByb2dyZXNzLWJhciBjbGFzcz1cIiAgdy0xMDBcIiBtb2RlPVwiZGV0ZXJtaW5hdGVcIiBbdmFsdWVdPVwicHJvZ3Jlc3NcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj4gXG4gICAgICAgIDxoNSBjbGFzcz1cIm10LTIgbm9zZWxlY3QgdGV4dC1jZW50ZXJcIiAqbmdJZj1cInRleHRcIiBbaW5uZXJIVE1MXT1cInRleHRcIj48L2g1PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuXG4gIDxkaXYgY2xhc3M9XCJoLTEwMFwiIFtoaWRkZW5dPVwibG9hZGluZ1wiPlxuICAgIDwhLS0gPGRpdiA+IC0tPlxuXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImhhc0NvbnRlbnQ9PW51bGw7IGVsc2UgZWxzZWhhc0NvbnRlbnRUZW1wbGF0ZVwiPlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy10ZW1wbGF0ZSAjZWxzZWhhc0NvbnRlbnRUZW1wbGF0ZT5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJoYXNDb250ZW50OyBlbHNlIGVsc2VUZW1wbGF0ZVwiPlxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbY29udGVudF1cIj48L25nLWNvbnRlbnQ+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDxuZy10ZW1wbGF0ZSAjZWxzZVRlbXBsYXRlPlxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbbm9Db250ZW50XVwiPjwvbmctY29udGVudD5cbiAgICAgIDwvbmctdGVtcGxhdGU+XG5cbiAgICA8L25nLXRlbXBsYXRlPlxuXG4gIDwvZGl2PlxuPC9kaXY+Il19